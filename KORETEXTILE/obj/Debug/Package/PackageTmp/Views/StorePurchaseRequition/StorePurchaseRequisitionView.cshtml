@model BEEERP.Models.ViewModel.SpareParts.StorePurchaseRequisitionVModel

@{
    ViewBag.Title = "StorePurchaseRequisitionView";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 style="text-align:center">Store Purchase Requisition (SPR) Entry</h3>
<form id="report" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h4 class="box-title">SPR Details</h4>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SPRNo, "SPR No", new { @class = "col-md-4 control-label" })
                                            <div class="input-group input-group-sm col-md-8" style="padding-right:19px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.SPRNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.SPRNo, "", new { @style = "color: red" })
                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-primary" id="search" style="min-width: 50px">Search</button>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SPDepartmentID, "Company", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.SPDepartmentID, (IEnumerable<SelectListItem>)ViewBag.Company, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.SPDepartmentID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.StoreID, "Store", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.StoreID, (IEnumerable<SelectListItem>)ViewBag.Store, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.StoreID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SPRDate, "Date", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 date input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.SPRDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.SPRDate, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SPReference, "Reference No", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.SPReference, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.SPReference, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SPDescriptions, "Description", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.SPDescriptions, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.SPDescriptions, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="box">

                                    <div class="box-body">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.GroupID, "Group", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(m => m.GroupID, (IEnumerable<SelectListItem>)ViewBag.Group, new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(m => m.GroupID, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ItemID, "Item", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(m => m.ItemID, (IEnumerable<SelectListItem>)ViewBag.Item, new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(m => m.ItemID, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ItemQty, "Qty", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.ItemQty, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.ItemQty, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ItemRate, "Rate", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.ItemRate, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.ItemRate, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ItemValue, "Total", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.ItemValue, new { @class = "form-control", @disabled = "disabled" })
                                                    @Html.ValidationMessageFor(m => m.ItemValue, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">

                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ItemQtyBalance, "Balance Qty", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.ItemQtyBalance, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.ItemQtyBalance, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.UoM, "UoM", new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.UoM, new { @class = "form-control", @ReadOnly = "readonly" })
                                                    @Html.ValidationMessageFor(m => m.UoM, "", new { @style = "color: red" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="box-footer">
                                        <div class="form-group" , style="text-align:center">
                                            <input type="button" name="addToGrid" id="addToGrid" value="Add To Grid" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box ">
                                        <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                            <h4 class="box-title">SPR Line Items</h4>
                                        </div>
                                        <div class="box-body">
                                            <table class="table table-responsive" id="RMSalesDetails">
                                                <thead>
                                                    <tr>
                                                        <th>Group</th>
                                                        <th>Item</th>
                                                        <th>Qty</th>
                                                        <th>Price</th>
                                                        <th>Value</th>
                                                        <th>Balance Qty</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="box">
                                    <div class="box-footer">
                                        <div class="form-group" , style="text-align:center">

                                            @if (ViewBag.Approve == 1)
                                            {
                                                <input type="button" name="approve" id="aprrove" value="Approve" class="btn btn-primary" />
                                            }
                                            else
                                            {
                                                <input type="button" name="save" id="save" value="Save" class="btn btn-primary" />
                                                <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                                <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                            }
                                            <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<input type="hidden" id="hPacSize" />

@section scripts
    {
    <script src="~/Scripts/Common.js"></script>
    <script>

        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });
        $(".select2").select2();
        $(document).on('click', "#refresh", function () {
            location.reload();

        });
        var table = $('#RMSalesDetails').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });
        $(document).ready(function () {
            function getCheckboxStatus() {
                var status = document.getElementById("processedCheckBox").checked;
                if (status) {
                    alert("Yes");
                } else {
                    alert("No");
                }
            }
            $("#clmItemValue").val(parseFloat(0));
            $("#clmItemRate").val(parseFloat(0));
            $("#clmCustomerID").focus();
            $("#update").hide();
            $("#delete").hide();
            if ('@ViewBag.Approve' == 1) {
                $("#search").click();
            }

        });
        var itemId =0;
        var isValid = true;
        var isSearch = false;
        var addedItems = [];
        var isEdit = false;
       
        //var item = { clmRMSalesNo: 0, clmItemID: 0, itemName: "", clmItemQty: 0, clmItemRate: 0, value: 0, clmItemValue: 0, cogsRate: 0, clmCOGSRate: 0, totalCOGS: 0, clmCOGSTotal: 0 }

        //group change reaction
        $(document).on('change', "#GroupID", function () {
            ValidateGroup();
            if (isValid == true) {
            if (addedItems.length > 0) {
                $("#Date").prop("disabled", true);
            } else {
                $("#Date").prop("disabled", false);
            }
                var id = { GroupID: $(this).val() };
            if (id.GroupID != "") {
                $.ajax({
                    url: '@Url.Action("GetItemByGroupId", "StorePurchaseRequition")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#ItemID").empty();
                        $("#ItemID").prop("disabled", false);
                        $.each(datas, function (index, value) {
                            $("#ItemID").append($('<option />', {
                                value: value.Value,
                                text: value.Text
                            })).trigger('change');
                        });
                        $("#ItemID").focus();
                        if (itemId != "") {
                            $("#ItemID").val(itemId).change();
                            itemId = "";
                        }
                    }
                });
            }
            else {
                $("#ItemID").val("").change();
                }
            }
        });

         //item change reaction
        $(document).on('change', "#ItemID", function () {
            var id = { ItemID: $(this).val(), StoreID: $("#StoreID").val(), date: $("#SPRDate").val()};
            if (id.ItemID != "" && id.StoreID != "") {
                    $.ajax({
                        url: '@Url.Action("GetItemRemainQty", "StorePurchaseRequition")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#ItemQtyBalance").val(datas.RemQty);
                            $("#UoM").val(datas.uom);
                            //$("#clmItemValue").prop('disabled', false);
                            //$("#clmItemValue").focus();
                            RemoveError();
                        }
                    });
                }
        });


        //qty focusout
        $(document).on('focusout', "#ItemValue", function () {
            //$("#UnitCost").prop('disabled', false);
            $("#ItemRate").focus();
        });

        //unit cost focusout
        $(document).on('focusout', "#ItemRate", function () {
            $("#ItemValue").val($("#ItemQty").val() * $("#ItemRate").val());
            //$("#COGSTotal").val($("#clmItemValue").val() * $("#clmCOGSRate").val());
            //$("#clmRMSTotal").val($("#RMSTotal").val());
            //$("#clmCOGSTotal").val($("#COGSTotal").val());
        });

        $(document).on('focusout', "#ItemQty", function () {
            $("#ItemValue").val($("#ItemQty").val() * $("#ItemRate").val());
            //$("#COGSTotal").val($("#clmItemValue").val() * $("#clmCOGSRate").val());
            //$("#clmRMSTotal").val($("#RMSTotal").val());
            //$("#clmCOGSTotal").val($("#COGSTotal").val());
        });







        //add to grid
        $(document).on('click', "#addToGrid", function () {
            RemoveError();
            ValidateAddToGrid();
            var item = { SPRNo: 0, GroupID: 0, GroupName: "", ItemID: 0, ItemName: "",  ItemQty: 0, ItemRate: 0, ItemValue: 0, ItemQtyBalance:0  }

            if (isValid == true) {
                item.GroupID = $("#GroupID").val();
                item.GroupName = $("#GroupID :selected").text();
                item.ItemID = $("#ItemID").val();
                item.ItemName = $("#ItemID :selected").text();
                item.ItemQty = $("#ItemQty").val();
                item.ItemRate = $("#ItemRate").val();
                item.ItemValue = $("#ItemValue").val();
                item.ItemQtyBalance = $("#ItemQtyBalance").val();


                addedItems.push(item);
                ShowOnTable();
                $("#ItemID").focus();
                ClearOnSearch();
            }
        });


        function ShowOnTable() {
            table.clear().draw();
            //var item = { clmRMSalesNo: 0, clmItemID: 0, itemName: "", clmItemQty: 0, clmItemRate: 0, value: 0, clmItemValue: 0, cogsRate: 0, clmCOGSRate: 0, totalCOGS: 0, clmCOGSTotal: 0 }
            //var totCOGS = 0;
            //var invTotal = 0;
            $.each(addedItems, function (index, value) {
                table.row.add([value.GroupName, value.ItemName, value.ItemQty, value.ItemRate, value.ItemValue, value.ItemQtyBalance,
                '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                value.ItemID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.ItemID + '"></i></a>']).draw();
                //totCOGS += parseFloat(value.totalCOGS);
                //invTotal += parseFloat(value.value);
            });
            //$("#clmCOGSTotal").val(totCOGS);
            //$("#clmRMSTotal").val(invTotal);
        }


        //EditRow
        $(document).on('click', '[name="editRow"]', function (e) {
            isEdit = true;
            var item = $(this).attr("value");
            var newItem = [];
            $.each(addedItems, function (index, value) {
                if (value.clmItemID == item) {
                    $("#clmItemID").val(value.clmItemID).change();
                    $("#GroupId").val(value.GroupId).change();
                    itemId = value.clmItemID;
                    $("#clmCOGSRate").val(value.clmCOGSRate);
                    $("#COGSTotal").val(value.totalCOGS);
                    $("#RMSTotal").val(value.value);
                    $("#clmItemRate").val(value.clmItemRate);
                    $("#clmItemValue").val(value.clmItemQty);
                    $("#balanceQty").val(value.clmItemValue);

                }
                else {
                    newItem.push(value);
                }
            });
            addedItems = newItem;
            ShowOnTable();
        });
        //deleteRow
        $(document).on('click', '[name="deleteRow"]', function () {
            var item = $(this).attr("value");
            if (confirm('Are you sure you want to delete this from grid ?')) {
                var newItem = [];
                $.each(addedItems, function (index, value) {
                    if (value.clmItemID == item) {

                    }
                    else {
                        newItem.push(value);
                    }
                });
                addedItems = newItem;
                ShowOnTable();
            }
        });
        var spr = { SPRNo: 0, StoreID: 0, SPDepartmentID: 0, SPRDate: "", SPReference: "", SPDescriptions: "" }

        //Save Button click Event
        $(document).on('click', "#save", function () {
            RemoveError();
            SetSPR();
            if (addedItems.length <= 0) {
                alert("At least One Item should be added for save.");
            }
            else {
                //ValidateRMSales();
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveSPR", "StorePurchaseRequition")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ spr: spr, addedItems: addedItems }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);


                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#clmRMSalesNo").val(datas.clmRMSalesNo);
                                    $("#save").hide();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").show();
                    }
                }
            }
        });
        function SetSPR() {
            spr.SPRNo = 0;
            spr.StoreID = $("#StoreID").val();
            spr.SPDepartmentID = $("#SPDepartmentID").val();
            spr.SPRDate = $("#SPRDate").val();
            spr.SPReference = $("#SPReference").val();
            spr.SPDescriptions = $("#SPDescriptions").val();
            //rms.clmRMSTotal = $("#clmRMSTotal").val();
            //rms.clmCOGSTotal = $("#clmCOGSTotal").val();
        }

        //update
        $(document).on('click', '#update', function () {
            RemoveError();
            $("#update").prop('disabled', true);
            SetRMSales();
            rms.clmRMSalesNo = $("#clmRMSalesNo").val();
            ValidateRMSales();

            if (addedItems.length <= 0) {
                alert("At least One Item should be added for Update.");
                $("#update").prop('disabled', false);
            }
            else {
                if (confirm('Do you want to Update')) {
                    if (isValid == true) {
                    $.ajax({
                        url: '@Url.Action("UpdateRMSales", "StorePurchaseRequition")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ rms: rms, addedItems: addedItems }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("This RM Sales Is Already Received. Unable To Update.");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#update").prop('disabled', true);
                            }
                        }
                    });
                    }
                    else {
                        $("#update").prop('disabled', false);
                    }
                }
            }

        });
        //delete
        $(document).on('click', '#delete', function (){
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#clmRMSalesNo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteRMSales", "StorePurchaseRequition")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("This Work Order Is Already Received. Unable To Delete.");
                            $("#delete").prop('disabled', false);
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
        });


        //Search Button click
        $(document).on('click', '#search', function () {
            isSearch = true;
            if ($("#SPRNo").val() != "") {
                var param = { id: parseInt($("#SPRNo").val()) };
                ClearOnSearch();
                if (param.id != "" || param.id != null) {
                    $.ajax({
                        url: '@Url.Action("GetSPRById", "StorePurchaseRequition")',
                        contentType: "application/json;charset=utf-8",
                        data: param,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            if (datas == 0) {
                                alert("Your entered SPR No. Doesn't exist");
                            }
                            else {
                                $("#save").hide();
                                $("#update").show();
                                $("#delete").show();
                                $("#SPDepartmentID").prop("disabled", true);
                                $("#StoreID").prop("disabled", true);
                                $("#SPRNo").val(datas.spr.SPRNo);
                                $("#SPRDate").val((moment(datas.spr.SPRDate).format("DD-MM-YYYY")));
                                $("#SPDepartmentID").val(datas.spr.SPDepartmentID).change();
                                $("#StoreID").val(datas.spr.StoreID).change();
                                $("#SPReference").val(datas.spr.SPReference);
                                $("#SPDescriptions").val(datas.spr.SPDescriptions);

                                //$("#clmRMSTotal").val(datas.rms.clmRMSTotal);
                                //$("#clmCOGSTotal").val(datas.rms.clmCOGSTotal);

                                addedItems = [];
                                $.each(datas.sprLineItem, function (index, value) {
                                    var item = { SPRNo: 0, ItemID: 0, ItemName: "", GroupId: 0, GroupName: "", ItemQty: 0, ItemRate: 0, ItemValue: 0, ItemQtyBalance: 0 }
                                    item.GroupId = value.GroupId;
                                    item.GroupName = value.GroupName;
                                    item.ItemID = value.ItemID;
                                    item.ItemName = value.ItemName;
                                    item.ItemQty = value.ItemQty;
                                    item.ItemRate = value.ItemRate;
                                    item.ItemValue = value.ItemValue;
                                    item.ItemQtyBalance = value.ItemQtyBalance;

                                    //item.clmCOGSRate = value.clmCOGSRate;
                                    //item.cogsRate = value.clmCOGSRate;
                                    //item.clmRMSTotal = value.clmRMSTotal;
                                    //item.clmCOGSTotal = value.clmCOGSTotal;
                                    //item.totalCOGS = value.clmCOGSTotal;

                                    addedItems.push(item);
                                });
                                ShowOnTable();
                            }
                    },
                    error: function () {
                        alert("Please check your internet connection Contact With Kore ERP")

                    }
                });
                }

            }
            else {
                alert("Please Enter a work order No first");
            }
        });

        



        function ClearOnSearch() {
            $("#ItemID").val("").change();
            $("#ItemQty").val("");
            $("#ItemRate").val("");
            $("#ItemValue").val("");
            //$("#clmCOGSRate").val("");
            //$("#COGSTotal").val("");
            $("#ItemQtyBalance").val("");

            //itemId = "";
        }

        function ValidateRMSales() {
            isValid = true;
            if (rms.clmDate == "") {
                setError("clmDate", " Date is required field");
                isValid = false;
            }
            if (rms.clmCustomerID == "") {
                setError("clmCustomerID", "Select Customer is required");
                isValid = false;
            }
            if (rms.clmStoreID == "") {
                setError("clmStoreID", "Select Store is required");
                isValid = false;
            }
            $.each(addedItems, function (index, value) {
                if (value.ItemID == $("#clmItemID").val()) {
                    setError("clmItemID", "This Item Already Added.");
                    isValid = false;
                }
            });
        }

        function ValidateAddToGrid() {
            isValid = true;
            //if ($("#GroupId").val() == "") {
            //    setError("GroupId", "Group is required");
            //    isValid = false;
            //}
            if ($("#ItemID").val() == "") {
                setError("ItemID", "Please select an Item");
                isValid = false;
            }
            if ($("#ItemQty").val() == 0) {
                setError("ItemQty", "Please enter quantity");
                isValid = false;
            }
            if ($("#ItemRate").val() == 0) {
                setError("ItemRate", "Please enter estimated rate");
                isValid = false;
            }
            $.each(addedItems, function (index, value) {
                if (value.ItemID == $("#ItemID").val()) {
                    setError("ItemID", "This Item Already Added.");
                    isValid = false;
                }
            });
            //if (parseFloat($("#balanceQty").val()) < parseFloat($("#clmItemValue").val())) {
            //    isValid = false;
            //    alert("Your sold quantity should be equal to  or less than balance quantity");
            //}
        }

        function ValidateGroup() {
            isValid = true;
            if ($("#clmStoreID").val() == "") {
                setError("clmStoreID", "Store is required for item selection");
                isValid = false;
            }
        }
    </script>

}