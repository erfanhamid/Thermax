@model BEEERP.Models.Store_FG.ShiftInventoryVModel
@using BEEERP.Models.CommonInformation

@{
    ViewBag.Title = "DepotTransfer";
}

<style>
    .btn:hover {
        color: blue !important;
    }

    .btn:focus {
        background-color: aqua !important;
    }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<form id="report" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back">
                                    <h3 class="box-title">Inter Depot Transfer</h3>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SIFDNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px;">
                                                @Html.TextBoxFor(m => m.SIFDNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.SIFDNo, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn skin-blue" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CurrentStoreID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.CurrentStoreID, (IEnumerable<SelectListItem>)ViewBag.Store, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.CurrentStoreID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewStoreID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.NewStoreID, (IEnumerable<SelectListItem>)ViewBag.StoreFG, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.NewStoreID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ChallanNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.Challan })
                                                @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group" id="grq">
                                            @Html.LabelFor(m => m.GRQNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.GRQNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.GRQNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TtlQTY, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TtlQTY, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.TtlQTY, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="box ">
                                <div class="box-body">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ItemGrpID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.ItemGrpID, (IEnumerable<SelectListItem>)ViewBag.Group, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.ItemGrpID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ItemID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.ItemID, (IEnumerable<SelectListItem>)ViewBag.Item, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.ItemID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group" id="costRt">
                                            @Html.LabelFor(m => m.CostRt, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.CostRt, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.CostRt, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AvailablePCs, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.AvailablePCs, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.AvailablePCs, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PCsPerCTN, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.PCsPerCTN, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.PCsPerCTN, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AvailableCTN, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.AvailableCTN, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.AvailableCTN, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ShiftPCsQty, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.ShiftPCsQty, new { @class = "form-control", @type = "Number" })
                                                @Html.ValidationMessageFor(m => m.ShiftPCsQty, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ShiftCTNQty, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.ShiftCTNQty, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ShiftCTNQty, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BalanceQty, new { @class = "col-md-5 control-label" })
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.BalanceQty, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.BalanceQty, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="form-group" style="padding-top:100px;">
                                            <button type="button" id="addToGrid" name="addToGrid" style="height:33px; font-size:13px;" class="btn">Add To Grid</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box ">
                                        <div class="box-header with-border box-head-back">
                                            <h3 class="box-title">Item List</h3>
                                        </div>
                                        <div class="box-body">
                                            <table class="table table-responsive" id="InventoryList">
                                                <thead>
                                                    <tr>
                                                        <th>Item Group</th>
                                                        <th>Item Name</th>
                                                        <th>Pack Size</th>
                                                        <th>Shift Qty</th>
                                                        <th>Cost Rate</th>
                                                        <th>Cost Value</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-8" style="text-align:center;">
                                            @*@{
                                            if (UserAccessAction.HavePerOnSave)
                                            {*@
                                            <input type="button" name="save" id="save" value="Save" class="btn skin-blue" />
                                            @*}
                                            if (UserAccessAction.HavePerOnSave)
                                            {*@
                                            <input type="button" name="update" id="update" value="Update" class="btn skin-blue" />
                                            @*}
                                            if (UserAccessAction.HavePerOnSave)
                                            {*@
                                            <input type="button" name="delete" id="delete" value="Delete" class="btn skin-blue" />
                                            @*}                                          
                                            }*@
                                            <input type="button" name="clear" id="clear" value="Clear" class="btn skin-blue" />
                                            <input type="button" name="refresh" id="refresh" value="Refresh" class="btn skin-blue" />
                                            <input type="button" name="print" id="print" value="Print" class="btn skin-blue" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<input type="hidden" id="message" value="false" />

@section scripts{
    <script src="~/Scripts/Common.js"></script>
    <script src="~/Scripts/ProductionModule/SIFDInputFocus.js"></script>
    <script>
        var table = $('#InventoryList').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });
        var sIFD = { SIFDNo: 0, Depot: 0, CurrentStoreID: 0, NewStoreID: 0, VehicleID: 0, DriverID: 0, Date: "", GRQNo: 0, ChallanNo : 0, Description : "", TtlQTY : 0, TotalCost : 0.0 }
        var isValid = false;
        var addedItems = [];
        var itemId = "";
        var groupId = "";
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });

        $(".select2").select2();
        var psPerCTN = 0;
        var shiftQty = 0;
        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $("#clear").hide();
            $("#print").hide();
           // $("#CurrentStoreID").val("@ViewBag.ShiftFrom").change();
           
            $("#PCsPerCTN").prop('disabled', true);
            $("#AvailableCTN").prop('disabled', true)
            $("#AvailablePCs").prop('disabled', true);
            $("#ShiftPCsQty").prop('disabled', true);
            $("#BalanceQty").prop('disabled', true);
            $("#ItemID").prop('disabled', true);
            $("#costRt").hide();
            $("#NewStoreID").focus();
            $("#grq").hide();
            $("#GRQNo").val(0);
            $("#ShiftCTNQty").prop('disabled', true);

        });
        EnterPress();

        $(document).on('click', "#refresh", function () {
            location.reload();
        });
        
        $(document).on('change', "#ItemGrpID", function () {

            $("#ItemID").prop('disabled', false);
            var id = { groupId: $(this).val() };
            if (id.groupId != "") {
                $.ajax({
                    url: '@Url.Action("GetItemByGroupId", "InterDepotTran")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#ItemID").empty();
                        $("#ItemID").prop("disabled", false);
                        $.each(datas, function (index, value) {
                            $("#ItemID").append($('<option />', {
                                value: value.Value,
                                text: value.Text
                            })).trigger('change');
                        });
                        $("#ItemID").focus();
                        if (itemId != "") {
                            $("#ItemID").val(itemId).change();
                            itemId = "";
                        }
                    }
                });
            }
            else {
                $("#ItemID").val("").change();
                $("#ItemID").prop("disabled", true);
            }
        });

        $(document).on('change', "#ItemID", function () {
            var currentDate = $("#Date").val().split("-");
            var id = { itemId: $(this).val(), storeId: $("#CurrentStoreID").val(), date: moment(new Date(currentDate[2], currentDate[1] - 1, currentDate[0])).format('MM-DD-YYYY') };
            if (id.itemId != "" && id.storeId != "" && id.date != "") {
                $.ajax({
                    url: '@Url.Action("GetItemDetails", "InterDepotTran")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#ShiftPCsQty").focus();
                        $("#AvailablePCs").val(datas.RemQty);
                        $("#CostRt").val(datas.SCost);
                        $("#ShiftPCsQty").val(datas.RemQty);
                        if (datas.CTNCapacity == 0) {
                            $("#PCsPerCTN").val(0);
                            $("#AvailableCTN").val(0);
                            $("#ShiftPCsQty").prop('disabled', false);
                            //$("#ShiftCTNQty").prop('disabled', false);
                            //$("#ShiftCTNQty").val(0);
                        }
                        else{
                            $("#PCsPerCTN").val(datas.CTNCapacity);
                            $("#AvailableCTN").val((datas.RemQty / datas.CTNCapacity).toFixed(2));
                            $("#ShiftPCsQty").prop('disabled', false);
                            //$("#ShiftCTNQty").prop('disabled', false);
                            var psPerCTN = $("#PCsPerCTN").val();
                            if (shiftQty != 0) {
                                var shiftctn = (shiftQty / datas.CTNCapacity).toFixed(2);
                                $("#ShiftCTNQty").val(shiftctn);
                                shiftQty = 0;
                            }
                        }
                   }
                });
            }
        });

        $(document).on('focusout', "#ShiftPCsQty", function () {
            var shiftQty = $(this).val();
            var psPerCTN = $("#PCsPerCTN").val();
            var availableQty = $("#AvailablePCs").val();
            var availableCtn = $("#AvailableCTN").val();
            if (psPerCTN <= 0) {
                var shiftCtn = 0;

                if (parseFloat(shiftQty) <= parseFloat(availableQty)) {
                    $("#ShiftCTNQty").val(0);
                    $("#BalanceQty").val(availableQty - shiftQty);
                }
                else if (shiftQty == "") {
                    $("#ShiftPCsQty").val(0);
                    $("#BalanceQty").val(0);
                    $("#ShiftCTNQty").val(0);
                }
                else {
                    alert("Shift Qty cannot be greater than Available Qty");
                    $("#ShiftCTNQty").val(0);
                    $("#ShiftPCsQty").val(0);
                    $("#BalanceQty").val(0);
                }
            }
            else {
                var shiftCtn = shiftQty / psPerCTN;

                if (parseFloat(shiftQty) <= parseFloat(availableQty)) {
                    $("#ShiftCTNQty").val(shiftCtn);
                    $("#BalanceQty").val(availableQty - shiftQty);
                }
                else if (shiftQty == "") {
                    $("#ShiftPCsQty").val(0);
                    $("#BalanceQty").val(0);
                    $("#ShiftCTNQty").val(0);
                }
                else {
                    alert("Shift Qty cannot be greater than Available Qty");
                    $("#ShiftCTNQty").val(0);
                    $("#ShiftPCsQty").val(0);
                    $("#BalanceQty").val(0);
                }
            }

        });

        //add to grid
        $(document).on('click', "#addToGrid", function () {

            RemoveError();
            ValidateAddToGrid();
            var item = { SIFDNo: 0, ItemGrpID: 0, ItemID: 0, ShiftQty: 0, CostRt: 0.0, CostVal: 0.0, ItemName: "", GroupName: "", PackSize : "" }

            if (isValid == true) {
                    $.ajax({
                        url: '@Url.Action("GetItemAndGroupName", "InterDepotTran")',
                        contentType: "application/json;charset=utf-8",
                        data: { itemId: $("#ItemID").val(), groupId: $("#ItemGrpID").val() },
                        type: "Get",
                        type: "Get",
                        dataType: "json",
                        success: function (datas) {
                            if (datas != 0) {
                                item.SIFDNo = 0;
                                item.ItemName = datas.ItemName;
                                item.GroupName = datas.GroupName;
                                item.PackSize = datas.PackSize;
                                item.ItemGrpID = $("#ItemGrpID").val();
                                item.ItemID = $("#ItemID").val();
                                item.ShiftQty = $("#ShiftPCsQty").val();
                                item.CostRt = $("#CostRt").val();
                                item.CostVal = item.CostRt * item.ShiftQty;
                                addedItems.push(item);
                                ClearOnSearch();
                                ShowOnTable();
                            }
                        }
                    });
            }
        });

        $(document).on('click', "#print", function (event) {
            event.preventDefault();
            if ($("#message").val() != "true") {
                $("#report").attr("action", "/InterDepotTran/GetIDTSamplePreview")
                $("#report").submit();
            }
        });

        //save
        $(document).on('click', "#save", function () {
            RemoveError();
            SetsIFD();
            if (addedItems.length <= 0) {
                alert("At least One Item should be added for save.");
            }
            else {
                ValidatesIFD();
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveSIFD", "InterDepotTran")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ sIFD: sIFD, addedItems: addedItems }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#SIFDNo").val(datas.sifd);
                                    $("#ChallanNo").val(datas.ChallanNo);
                                    //clearsIFD();
                                    $("#save").hide();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").show();
                    }
                }
            }
        });


        //search
        $(document).on('click', '#search', function () {
            var id = { id: $("#SIFDNo").val() };
                ClearOnSearch();
                $.ajax({
                        url: '@Url.Action("GetSIFDById", "InterDepotTran")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            if (datas == 0) {
                                alert("Your entered SIFD No. Doesn't exist");
                            }
                            else {
                                $("#save").hide();
                                $("#update").show();
                                $("#delete").show();
                                $("#print").show();
                                $("#CurrentStoreID").val(datas.sifdItem.CurrentStoreID).change();
                                $("#NewStoreID").val(datas.sifdItem.NewStoreID).change();
                                $("#Date").val((moment(datas.sifdItem.Date).format("DD-MM-YYYY")));
                                $("#SIFDNo").val(datas.sifdItem.SIFDNo);
                                $("#GRQNo").val(datas.sifdItem.GRQNo);
                                $("#ChallanNo").val(datas.sifdItem.ChallanNo);
                                $("#Description").val(datas.sifdItem.Description);
                                addedItems = [];
                                $.each(datas.sifdLineItem, function (index, value) {
                                    var item = { SIFDNo: 0, ItemGrpID: 0, ItemID: 0, ShiftQty: 0, CostRt: 0.0, CostVal: 0.0, ItemName: "", GroupName: "", PackSize : "" }
                                    item.ItemName = value.ItemName;
                                    item.GroupName = value.GroupName;
                                    item.SIFDNo = value.SIFDNo;
                                    item.ItemGrpID = value.ItemGrpID;
                                    item.ItemID = value.ItemID;
                                    item.ShiftQty = value.ShiftQty;
                                    item.CostRt = value.CostRt;
                                    item.CostVal = value.CostVal;
                                    item.PackSize = value.PackSize;
                                    itemId = value.ItemID;
                                    addedItems.push(item);
                                });
                                ShowOnTable();
                            }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")

                    }
                });
        });

        //edit Row
        $(document).on('click', '[name="editRow"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            $.each(addedItems, function (index, value) {
                if (value.ItemID == item) {

                    $("#ItemGrpID").val(value.ItemGrpID).change();
                    $("#ItemID").val(item).change();
                    shiftQty = value.ShiftQty;
                    $("#ShiftPCsQty").val(shiftQty);
                    if (value.CtnQty == 0) {
                        $("#ShiftCTNQty").val(0);
                        //$("#BalanceQty").val();
                    }
                    else {
                        $("#ShiftCTNQty").val(shiftQty * value.CtnQty);
                    }
                    itemId = value.ItemID;
                }
                else {
                    newItem.push(value);
                }

            });
            addedItems = newItem;
            ShowOnTable();
        });

        //delete row Click
        $(document).on('click', '[name="deleteRow"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems, function (index, value) {
                    if (value.ItemID == item) {

                    }
                    else {
                        newItem.push(value);
                    }

                });
                addedItems = newItem;
                ShowOnTable();
            }
        });

        //update
        $(document).on('click', '#update', function () {
            RemoveError();
            $("#update").prop('disabled', true);
            sIFD.SIFDNo = $("#SIFDNo").val();
            sIFD.CurrentStoreID = $("#CurrentStoreID").val();
            sIFD.NewStoreID = $("#NewStoreID").val();
            sIFD.Date = $("#Date").val();
            sIFD.Description = $("#Description").val();
            sIFD.clmCostTotal = $("#clmCostTotal").val();
            sIFD.ChallanNo = $("#ChallanNo").val();
            sIFD.GRQNo = $("#GRQNo").val();
            sIFD.TtlQTY = $("#TtlQTY").val();
            ValidatesIFD();

            if (addedItems.length <= 0) {
                alert("At least One Item should be added for Update.");
            }
            else {
                if (confirm('Do you want to Update')) {
                    if (isValid == true) {
                    $.ajax({
                        url: '@Url.Action("UpdateSIFD", "InterDepotTran")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ sIFD: sIFD, addedItems: addedItems }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Failed To Update.");
                                $("#update").show();
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#SIFDNo").val(datas.sifdNo);
                                clearsIFD();
                                $("#update").hide();
                            }
                        }
                    });
                    }
                    else {
                        $("#update").show();
                    }
                }
            }

        });

        //delete
        $(document).on('click', '#delete', function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#SIFDNo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteSIFDByid", "InterDepotTran")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#delete").prop('disabled', false);
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
        });

        function ValidateAddToGrid() {
            isValid = true;
            if ($("#ShiftPCsQty").val() == 0) {
                setError("ShiftPCsQty", "Shift Qty Can not be Zero");
                isValid = false;
            }
            if ($("#ShiftPCsQty").val() < 0) {
                setError("ShiftPCsQty", "Shift Qty Can not be Negative");
                isValid = false;
            }
            if ($("#ItemGrpID").val() == "") {
                setError("ItemGrpID", "Group is required field");
                isValid = false;
            }
            if ($("#ShiftPCsQty").val() == "" && $("#ShiftPCsQty").val() == 0) {
                setError("ShiftPCsQty", "Shift Qty is required field");
                isValid = false;
            }
            if ($("#ItemGrpID").val() != "") {
                if ($("#ItemID").val() == "") {
                    setError("ItemID", "Item is required field");
                    isValid = false;
                }
            }
            $.each(addedItems, function (index, value) {
                if (value.ItemID == $("#ItemID").val()) {
                    setError("ItemID", "This Item Already Added.");
                    isValid = false;
                }
            });
        }

        function ShowOnTable() {
            table.clear().draw();
            var totQty = 0;
            $.each(addedItems, function (index, value) {
                table.row.add([value.GroupName, value.ItemName, value.PackSize, value.ShiftQty, value.CostRt, value.CostVal,
                '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                value.ItemID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.ItemID + '"></i></a>']).draw();
                totQty += parseFloat(value.ShiftQty);

            });
            $("#TtlQTY").val(totQty);
        }

        function SetsIFD() {
            sIFD.SIFDNo = 0;
            sIFD.Depot = 0;
            sIFD.CurrentStoreID = $("#CurrentStoreID").val();
            sIFD.NewStoreID = $("#NewStoreID").val();
            sIFD.VehicleID = 0;
            sIFD.DriverID = 0;
            sIFD.Date = $("#Date").val();
            sIFD.GRQNo = $("#GRQNo").val();
            sIFD.ChallanNo = $("#ChallanNo").val();
            sIFD.Description = $("#Description").val();
            sIFD.TtlQTY = $("#TtlQTY").val();
            sIFD.TotalCost = 0;
        }

        function ValidatesIFD() {
            isValid = true;
            if (sIFD.ChallanNo == "") {
                setError("ChallanNo", "Challan is required field");
                isValid = false;
            }
            //if (sIFD.GRQNo == "") {
            //    setError("GRQNo", "GRQ is required field");
            //    isValid = false;
            //}
            if (sIFD.NewStoreID == "") {
                setError("NewStoreID", "New Store is required field");
                isValid = false;
            }
            if (sIFD.Date == "") {
                setError("Date", "Date is required field");
                isValid = false;
            }
            $.each(addedItems, function (index, value) {
                if (value.ItemID == $("#ItemID").val()) {
                    setError("ItemID", "This Item Already Added.");
                    isValid = false;
                }
            });
        }

        function clearsIFD() {
            $("#CurrentStoreID").val("");
            $("#NewStoreID").val("").change();
            $("#ItemGrpID").val("").change();
            $("#PCsPerCTN").val("");
            $("#AvailableCTN").val("");
            $("#AvailablePCs").val("");
            $("#ShiftPCsQty").val("");
            $("#BalanceQty").val("");
            $("#Date").val("");
            $("#GRQNo").val("");
            $("#Description").val("");
            $("#TtlQTY").val("");
            table.clear().draw();
        }

        function ClearOnSearch() {
            $("#ItemID").val("").change();
            $("#ShiftCTNQty").val("");
            $("#PCsPerCTN").val("");
            $("#AvailableCTN").val("");
            $("#AvailablePCs").val("");
            $("#ShiftPCsQty").val("");
            $("#BalanceQty").val("");
            itemId = "";
        }

    </script>
}
