@model BEEERP.Models.ViewModel.Sales.Report.InventoryReportVModel
@{
    ViewBag.Title = "ShowStoreRMReport";
}

<h2 style="text-align:center">Store RM Reports</h2>

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "report", target = "_blank" }))
{
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="col-md-6">
                        <div class="box ">
                            <div class="box-header with-border box-head-back">
                                <h3 class="box-title">Select</h3>
                            </div>
                            <div class="box-body">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.StoreId, "Store", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(m => m.StoreId, (IEnumerable<SelectListItem>)ViewBag.Store, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.StoreId)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Group, new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(m => m.Group, (IEnumerable<SelectListItem>)ViewBag.GroupId, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.Group)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Item, new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(m => m.Item, (IEnumerable<SelectListItem>)ViewBag.ItemId, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.Item)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.FromDate, "From Date", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8 date input-group" , style="padding-left:15px;padding-right:15px;">
                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.FromDate)
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ToDate, "To Date", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8 date input-group" , style="padding-left:15px;padding-right:15px;">
                                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.ToDate)
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.AsOnDate, "As On Date", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8 date input-group" , style="padding-left:15px;padding-right:15px;">
                                        @Html.TextBoxFor(m => m.AsOnDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.AsOnDate)
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="box " style="min-height:163px;">
                            <div class="box-header with-border box-head-back">
                                <h3 class="box-title">Show Store RM Reports</h3>
                            </div>
                            <div class="box-body">
                                <div class="form-group" style="text-align:center;">
                                    <button class="btn skin-blue" id="showLedger" style="min-width:400px;" type="submit">1. Show Item Ledger</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    <button class="btn skin-blue" id="storeWiseRM" style="min-width:400px;" type="submit">2. Show Store Wise Raw Materials</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    <button class="btn skin-blue" id="rmItemList" style="min-width:400px;" type="submit">3. Show Raw Materials Item List</button>
                                </div>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>
        </div>
    </div>
}




@section scripts{
    <script src="~/Scripts/Search.js"></script>
    <script src="~/Scripts/ReportSearch.js"></script>
    <script>
        $(document).ready(function () {
            $(".select2").select2();
            $('.date').datepicker({
                autoclose: true,
                format:"dd-mm-yyyy"
            });
            var isValid = "";
            $(document).on('change', "#Group", function () {
            var id = { groupId: $(this).val() };
            if (id.groupId != "") {
                    $.ajax({
                        url: '@Url.Action("GetItemByGroupId", "RawMetarial")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            $("#Item").empty();
                            $("#Item").prop("disabled", false);
                            $.each(datas, function (index, value) {
                                $("#Item").append($('<option />', {
                                    value: value.Value,
                                    text: value.Text
                                }));
                            });
                        }
                    });
                }
                else {
                    $("#Item").empty();
                    $("#Item").prop("disabled", true);
                }
            });
            $(document).on('click', "#showLedger", function () {
                ValidateReportSearchParam(["AsOnDate", "StoreId", "Item"]);
                event.preventDefault();
                validateOnItemLedger();
                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#Depot").val($("#DepotId").val());
                        $("#report").attr("action", "/StoreRMReport/GetItemLedgerReport")
                        $("#report").submit();
                    }
                }
               

            });
            $(document).on('click', "#storeWiseRM", function () {
                ValidateReportSearchParam(["AsOnDate", "StoreId", "Item"]);
                event.preventDefault();
                validateOnStoreWiseRM();
                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#Depot").val($("#DepotId").val());
                        $("#report").attr("action", "/StoreRMReport/GetStockPositionRM")
                        $("#report").submit();
                    }
                }               
            });
            $(document).on('click', "#rmItemList", function () {
                event.preventDefault();
                if ($("#message").val() != "true") {
                    $("#Depot").val($("#DepotId").val());
                    $("#report").attr("action", "/StoreRMReport/GetRMItemList")
                    $("#report").submit();
                }
            });

            function validateOnItemLedger() {
                RemoveError();
                isValid = "";
                if ($("#StoreId").val()=="") {
                    setError("StoreId", "Store is Required Field");  
                    isValid = "required";
                }
                if ($("#Item").val() == "") {
                    setError("Item", "Item is Required Field");
                    isValid = "required";
                }

                if ($("#FromDate").val() == "") {
                    setError("FromDate", "From Date is Required Field");
                    isValid = "required";
                }

                if ($("#ToDate").val() == "") {
                    setError("ToDate", "To Date is Required Field");
                    isValid = "required";
                }   

                var fromDate = $('#FromDate').val().split("-");
                var f = new Date(fromDate[2], fromDate[1] - 1, fromDate[0]);

                var toDate = $('#ToDate').val().split("-");
                var t = new Date(toDate[2], toDate[1] - 1, toDate[0]);

                if (f > t) {
                    setError("FromDate", "From Date can't greater than To Date");
                    isValid = "required";
                }
            }

            function validateOnStoreWiseRM() {
                var store = $("#StoreId").val();
                RemoveError();
                isValid = "";
                if (store == "") {
                    setError("StoreId", "Store is Required Field");
                    isValid = "required";
                }
                if ($("#AsOnDate").val() == "") {
                    setError("AsOnDate", "As On Date is Required Field");
                    isValid = "required";
                }
            }

        });

    </script>
}


