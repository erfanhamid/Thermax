@model BEEERP.Models.ViewModel.Payroll.SalaryPaymentVModel
@{
    ViewBag.Title = "SalaryPayment";
}


<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }


    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<h3 style="text-align:center">Employee Payment Voucher (EPV) Entry</h3>

<form id="report" target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h4 class="box-title">EPV Details</h4>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SPVNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%;">
                                                @Html.TextBoxFor(m => m.SPVNo,"EPV No", new { @class = "form-control", @Value = ViewBag.Id })
                                                @Html.ValidationMessageFor(m => m.SPVNo, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn btn-primary" style="min-width: 50px" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%">
                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalAmount,"Total Amount", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalAmount, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.TotalAmount, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Paymode, "Account", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.Paymode, (IEnumerable<SelectListItem>)ViewBag.Paymode, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.Paymode, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CompanyId, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.CompanyId, (IEnumerable<SelectListItem>)ViewBag.CompanyInfo, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.CompanyId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>   
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box ">
                                        <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                            <h4 class="box-title">EPV Line Item</h4>
                                        </div>
                                        <div class="box-body">
                                            <table class="table table-responsive" id="DSIAlist">
                                                <thead>
                                                    <tr>
                                                        <th><input type="checkbox" id="select_all" name="select_all" />Select All</th>
                                                        <th>Employee Id</th>
                                                        <th>Employee Name</th>
                                                        <th>Balance</th>
                                                        <th>Amount</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="box">
                                        <div class="box-footer">
                                            <div class="form-group" , style="text-align:center">
                                                <input type="button" value="Save" id="save" class="btn btn-primary" style="padding-left:20px;" />
                                                @*<input type="button" name="update" id="update" value="Update" class="btn btn-primary" />*@
                                                <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                                <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                                <input type="button" name="print" id="print" value="Pay Slip" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="vatPer" />
    <input type="hidden" id="NetAmount" />
</form>

@section scripts
{
    <script src="~/Scripts/PayRollModule/SalaryPaymentInputFocus.js"></script>
    <script>
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });

        var addedItems = [];
        var rows_selected = [];
        var selectedEmployee = [];
        var isValid = true;
        var isSearch = false;
        var salaryPayment = { SPVNo: 0, Date: "", CompanyId: 0, Paymode: "", TotalAmount: 0.0 };
        EnterPress();

        var table = $('#DSIAlist').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false,
            'columnDefs': [{
                'targets': 0,
                'searchable': false,
                'width': '10%',
                'className': 'dt-body-center',
                "paging": false,
                'render': function (data, type, full, meta) {
                    return '<input type="checkbox">';
                },
            }],
            'order': [[1, 'asc']],
            'rowCallback': function (row, data, dataIndex) {
                // Get row ID
                var rowId = data[0];

                // If row ID is in the list of selected row IDs
                if ($.inArray(rowId, rows_selected) !== -1) {
                    $(row).find('input[type="checkbox"]').prop('checked', true);
                    $(row).addClass('selected');
                }
            }
        });

        $(document).ready(function () {
            $("#update").hide();
            //$("#save").hide();
            $("#delete").hide();
            $("#print").hide();
            $("#Paymode").focus();
        });

        $(".select2").select2();

        $(document).on('click', "#refresh", function () {
            location.reload();
        });

        //CompanyId change reaction
        $(document).on('change', "#CompanyId", function () {
            var id = { companyId: $(this).val() };

            if (id.companyId != "" && isSearch == false) {
                $.ajax({
                    url: '@Url.Action("GetEmployeeSalaryListByCompanyId", "SalaryPayment")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("No Employee Found For This Company.");
                            $("#save").hide();
                        }
                        else if (datas.Message == 2) {
                            alert("Salary has been paid to all employees of this company.");
                            $("#save").hide();
                        }
                        else {
                            addedItems = [];
                            selectedEmployee = [];
                            $.each(datas.empSalaryList, function (index, value) {
                                var item = { SPVNo: 0, EmployeeId: 0, SalaryAmount: 0.0, EmployeeName: "", Balance: "" };
                                item.EmployeeId = value.EmployeeId;
                                item.SalaryAmount = value.SalaryAmount;
                                item.EmployeeName = value.EmployeeName;
                                item.Balance = value.SalaryAmount;
                                addedItems.push(item);
                            });
                            $("#TotalAmount").val("");
                            $('input[name = "select_all"]').prop('checked', false);
                            $('#DSIAlist tbody input[type="checkbox"]:checked').trigger('click');
                            ShowOnTable();
                            $("#save").show();
                        }
                    }
                });
            }
            else {
                ShowOnTable();
            }
        });

        $('thead input[name="select_all"]', table.table().container()).on('click', function (e) {
            if (this.checked) {
                $('#DSIAlist tbody input[type="checkbox"]:not(:checked)').trigger('click');
            }
            else {
                $('#DSIAlist tbody input[type="checkbox"]:checked').trigger('click');
            }
            // Prevent click event from propagating to parent
            e.stopPropagation();
        });

        //for sales grid
        $('#DSIAlist tbody').on('click', 'input[type="checkbox"]', function (e) {
            var $row = $(this).closest('tr');
            var data = table.row($row).data();
            var rowId = data[0];
            var index = $.inArray(rowId, rows_selected);

            if (this.checked && index === -1) {
                rows_selected.push(rowId);


            } else if (!this.checked && index !== -1) {
                rows_selected.splice(index, 1);
            }
            var selectedItem = { SPVNo: 0, EmployeeId: 0, SalaryAmount: 0.0, EmployeeName: "" };
            if (this.checked) {
                $row.addClass('selected');
                var amount = document.getElementById(data[0] + "id").value;
                $('input[name="' + data[0] + '"]').val(amount);
                //alert(document.getElementById(data[0] + "id").value);
                //alert(amount);
                selectedItem.EmployeeId = data[0];
                selectedItem.EmployeeName = data[2];
                //selectedItem.SalaryAmount = data[3];
                selectedItem.SalaryAmount = amount;
                selectedEmployee.push(selectedItem);
                TotalSumOfCheckedEmployees();
                //GetAdjustedInvoiceAndRipd();
            } else {
                $row.removeClass('selected');
                $('input[name="' + data[0] + '"]').val("");
                var modifiedItem = [];
                $.each(selectedEmployee, function (index, value) {
                    if (value.EmployeeId != data[0]) {
                        modifiedItem.push(value);
                    }
                });
                selectedEmployee = modifiedItem;
                TotalSumOfCheckedEmployees();
            }
            
            updateDataTableSelectAllCtrl(table);

            e.stopPropagation();
        });
        
        $(document).on('focusout', 'input[name="editRow2"]', function (e) {
            var $row = $(this).closest('tr');
            var data = table.row($row).data();
            var rowId = data[1];

            var items = [];
            var amount = document.getElementById(rowId + "id").value;
            //$.each(selectedEmployee, function (index, value) {
            //    if (value.EmployeeId == rowId) {
            //        value.SalaryAmount = amount;
            //        items.push(value);
            //    }
            //    else {
            //        items.push(value);
            //    }
            //});

            var items2 = [];
            $.each(addedItems, function (index, value) {
                if (value.EmployeeId == rowId) {
                    if (value.Balance >= amount) {
                        value.SalaryAmount = amount;
                        items2.push(value);
                        $.each(selectedEmployee, function (i, v) {
                            if (v.EmployeeId == rowId) {
                                v.SalaryAmount = amount;
                                items.push(v);
                            }
                            else {
                                items.push(v);
                            }
                        });
                    }
                    else {
                        alert("For Employee Id " + value.EmployeeId + ", Amount cann't be grater than " + value.SalaryAmount);
                        value.SalaryAmount = value.SalaryAmount;
                        items2.push(value);
                    }
                    
                }
                else {
                    items2.push(value);
                }
            });
            addedItems = items2;
            ShowOnTable();

            selectedEmployee = items;
            TotalSumOfCheckedEmployees();
        });

        //save code
        $(document).on('click', '#save', function () {
            RemoveError();
            $("#save").prop('disabled', true);
            SetSalaryPayment();
            if (selectedEmployee.length <= 0) {
                alert("At least One Item should be added for save.");
                $("#save").prop('disabled', false);
            }
            else {
                ValidateSalaryPayment();
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveSalaryPayment", "SalaryPayment")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ salaryPayment: salaryPayment, selectedEmployee: selectedEmployee }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#SPVNo").val(datas.salaryPayment.SPVNo);
                                    $("#save").prop('disabled', true);
                                    $("#print").show();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").prop('disabled', false);
                    }
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
        });

         //search code
        $(document).on('click', '#search', function () {
            isSearch = true;
            //$("#search").prop('disabled', true);
            var id = { id: $("#SPVNo").val() };
            if ($("#SPVNo").val() != "") {
                $.ajax({
                    url: '@Url.Action("GetSalaryPaymentById", "SalaryPayment")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas == 0) {
                            alert("Your entered Spv No. Doesn't exist");
                            //$("#search").prop('disabled', false);
                        }
                        else {
                            $("#save").hide();
                            $("#update").show();
                            $("#delete").show();
                            $("#Date").val((moment(datas.salaryPaymentItem.Date).format("DD-MM-YYYY")));
                            $("#SPVNo").val(datas.salaryPaymentItem.SPVNo);
                            $("#CompanyId").val(datas.salaryPaymentItem.CompanyId).change();
                            $("#Paymode").val(datas.salaryPaymentItem.Paymode).change();
                            $("#TotalAmount").val(datas.salaryPaymentItem.TotalAmount);
                            addedItems = [];
                            $.each(datas.salaryPaymentLineItem, function (index, value) {
                                var item = { SPVNo: 0, EmployeeId: 0, SalaryAmount: 0.0, EmployeeName: "", Balance: "" };
                                item.EmployeeId = value.EmployeeId;
                                item.SalaryAmount = value.SalaryAmount;
                                item.EmployeeName = value.EmployeeName;
                                item.Balance = value.SalaryAmount;
                                addedItems.push(item);
                            });
                            ShowOnTable();
                            $('input[name = "select_all"]').prop('disabled', true);
                            $('#DSIAlist tbody input[type="checkbox"]').prop('disabled', true);
                            $("#print").show();
                        }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")
                        //$("#search").prop('disabled', false);
                    }
                });
            }
            else {
                alert("SPV No is required for get data.");
            }
        });

        //delete code
        $(document).on('click', '#delete', function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#SPVNo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteSalaryPaymentByid", "SalaryPayment")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#delete").prop('disabled', false);
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });

        $(document).on('click', "#print", function () {
            event.preventDefault();

            if ($("#SPVNo").val() != "") {
                $("#report").attr("action", "/SalaryPayment/SalaryPaySlipPrintPreview");

                $("#report").submit();
            }
            else {
                setError("SPVNo", "SPV No is required To Get Data.");
            }
        });
        
        $(document).on('click', "#paymentVoucher", function () {
            event.preventDefault();

            if ($("#SPVNo").val() != "") {
                $("#report").attr("action", "/SalaryPayment/GetPaymentVoucherPreview");

                $("#report").submit();
            }
            else {
                setError("SPVNo", "SPV No is required To Get Data.");
            }
        });

        function ShowOnTable() {
            table.clear().draw();
            //var totalAmount = 0;
            $.each(addedItems, function (index, value) {
                if (isSearch == true) {
                    table.row.add([value.EmployeeId, value.EmployeeId, value.EmployeeName, parseInt(value.Balance), '<input type="number" disabled="disabled" name="editRow2" id="' + value.EmployeeId + "id" + '" value="' + parseInt(value.SalaryAmount) + '"/>']).draw();
                }
                else {
                    table.row.add([value.EmployeeId, value.EmployeeId, value.EmployeeName, parseInt(value.Balance), '<input type="number" name="editRow2" id="' + value.EmployeeId + "id" + '" value="' + parseInt(value.SalaryAmount) + '"/>']).draw();
                }
                
                //totalAmount += value.SalaryAmount;
            });
            
            //$("#TotalAmount").val(totalAmount);
        }

        function TotalSumOfCheckedEmployees() {
            var totalAmount = 0.0;
            $.each(selectedEmployee, function (index, value) {
                totalAmount = totalAmount + parseInt(value.SalaryAmount);
            });
            $("#TotalAmount").val(parseInt(totalAmount));
        }

        function updateDataTableSelectAllCtrl(table) {
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

            // If none of the checkboxes are checked
            if ($chkbox_checked.length === 0) {
                chkbox_select_all.checked = false;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If all of the checkboxes are checked
            } else if ($chkbox_checked.length === $chkbox_all.length) {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If some of the checkboxes are checked
            } else {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = true;
                }
            }
        }
        
        //get value from textbox
        function SetSalaryPayment() {
            salaryPayment.SPVNo = 0;
            salaryPayment.Date = $("#Date").val();
            salaryPayment.CompanyId = $("#CompanyId").val();
            salaryPayment.Paymode = $("#Paymode").val();
            salaryPayment.TotalAmount = $("#TotalAmount").val();
        }

        function ValidateSalaryPayment() {
            isValid = true;
            if (salaryPayment.Date == "") {
                setError("Date", "Date is required field");
                isValid = false;
            }
            if (salaryPayment.CompanyId == "") {
                setError("CompanyId", "Company is required field");
                isValid = false;
            }
            if (salaryPayment.Paymode == "") {
                setError("Paymode", "Paymode is required field");
                isValid = false;
            }
            if (salaryPayment.TotalAmount == "") {
                setError("TotalAmount", "TotalAmount is required field");
                isValid = false;
            }
            
        }

    </script>
    
}

