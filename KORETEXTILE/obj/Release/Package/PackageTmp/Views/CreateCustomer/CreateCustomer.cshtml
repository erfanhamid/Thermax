@using BEEERP.Models.Authentication
@using BEEERP.Models.CommonInformation
@model BEEERP.Models.ViewModel.StoreRM.CreateCustomerVModel
@{
    ViewBag.Title = "CreateCustomer";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }
    #loader {
        display: none;
        position: absolute;
        left: 50%;
        top: 50%;
        z-index: 1;
        width: 150px;
        height: 150px;
        margin: -75px 0 0 -75px;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        border-bottom: 16px solid #3498db;
        width: 120px;
        height: 120px;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<h3 style="text-align:center">Create Raw Material Customer </h3>
<div class="content">
    <div class="row">
        <div class="form-horizontal">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                <h4 class="box-title">RM Customer Details</h4>
                            </div>
                            <div class="box-body">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CustomerNo, "Customer ID", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.CustomerNo, new { @class = "form-control", @type = "number", @Value = ViewBag.Id })

                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-primary" id="search" style="min-width: 50px">Search</button>
                                                </span>
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-sm-8">
                                                @Html.ValidationMessageFor(x => x.CustomerNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Name, "Customer Name", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Name, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.COB, "RMCOB", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.COB, new { @class = "form-control", @type = "number" })
                                                @Html.ValidationMessageFor(x => x.COB, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date,"OB Date", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px;padding-right:15px;">

                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control", @Value = ViewBag.Date, @readonly = "readonly" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @Html.ValidationMessageFor(x => x.Date, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box ">
                            <div class="box-body">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ConPerson, "Contact Person", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:16px">
                                                @Html.TextBoxFor(m => m.ConPerson, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ConPerson, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Mobile, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                <label class="col-sm-1" style="padding-left:0%;font-size:150%;text-align:center;color:green">+88</label>
                                                <div class="col-sm-11" style="padding-right:0%;">
                                                    @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control digit" })
                                                </div>
                                                @Html.ValidationMessageFor(x => x.Mobile, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Phone, "Land Phone", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:16px">
                                                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Phone, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.Email, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BillingAddress, "Bill Address", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.BillingAddress, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(x => x.BillingAddress, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="box">
                        <div class="box-footer">
                            <div class="form-group" , style="text-align:center">
                                <input type="submit" value="Save" id="save" class="btn btn-primary" />
                                <input type="button" value="Update" id="update" class="btn btn-primary" />
                                <input type="button" value="Delete" id="delete" class="btn btn-primary" />
                                @*<input type="button" value="Report" id="report" class="btn skin-blue" />*@
                                <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.4.1/css/all.css" integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" crossorigin="anonymous">


@section scripts{
    <script src="~/Scripts/Common.js"></script>
    <script>
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });
        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $(".select2").select2();
            $("#COB").val(parseFloat(0));
            $("#Name").focus();
            //EnterPress();
        });

        var isValid = true;
        var isSearch = false;
        var item;
        var customer = { clmCustomerID: 0, clmCustomerName: "", clmAccOB: 0.0, clmContactPerson: "", clmMobileNo: "", clmPhoneNo: "", clmEmailNo: "", clmBillingAddress: "", clmAccOBDate: ""};
        
             //Save Button click
        $(document).on('click', '#save', function (e) {
            $("#save").prop('disabled', true);
            RemoveError();
            ValidateCustomer();
            if (isValid == true)
            {
                SetCustomer();
                if (confirm('Do you want to save?')) {
                   $.ajax({
                    url: '@Url.Action("SaveCustomer", "CreateCustomer")',
                       contentType: "application/json;charset=utf-8",
                       data: JSON.stringify({ customer: customer }),
                       type: 'POST',
                       dataType: 'json',
                       success: function (datas) {
                           if (datas == 0) {

                               alert("Save Failed");
                               $("#save").prop('disabled', false);
                               
                           }
                           else {

                               alert("Save Sucessfull.");
                               $("#CustomerNo").val(datas.clmCustomerID);
                               $("#save").prop('disabled', true);
                           }
                       }
                   });
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
            else {
                $("#save").prop('disabled', false);
            }
        });

        $(document).on('click', '#update', function (e) {
            $("#save").prop('disabled', true);
            RemoveError();
            ValidateCustomer();
            if (isValid == true)
            {
                SetCustomer();
                if (confirm('Do you want to Update?')) {
                   $.ajax({
                    url: '@Url.Action("UpdateCustomer", "CreateCustomer")',
                       contentType: "application/json;charset=utf-8",
                       data: JSON.stringify({ customer: customer }),
                       type: 'POST',
                       dataType: 'json',
                       success: function (datas) {
                           if (datas == 0) {
                               alert("Update Failed");
                               $("#save").prop('disabled', false);
                           }
                           else {
                               alert("Updated Sucessfull.");
                               $("#CustomerNo").val(datas.clmCustomerID);
                               location.reload();
                               
                           }
                       }
                   });
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
            else {
                $("#save").prop('disabled', false);
            }
        });

          //delete customer
        $(document).on('click', '#delete', function () {
            var id = $("#CustomerNo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteCustomerByid", "CreateCustomer")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas.Message == 0) {
                            alert("Delete failed. This customer have balance");
                        }
                        else if (datas.Message == 1) {
                            alert("Delete Successfull.");
                            location.reload();
                        }
                        else {
                            alert("Delete Failed.");
                        }
                    }
                });
            }
        });

        $(document).on('click', '#refresh', function () {
            location.reload();
        });

        //Search Button click
        $(document).on('click', '#search', function () {
            isSearch = true;
            if ($("#CustomerNo").val()!="") {
                var id = { id: $("#CustomerNo").val() };
                //ClearOnSearch();
                if (id.id != "") {
                    $.ajax({
                        url: '@Url.Action("GetCustomerById", "CreateCustomer")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            if (datas == 0) {
                                alert("Your entered customer Doesn't exist");
                                location.reload();
                            }
                            else {
                                $("#save").hide();
                                $("#update").show();
                                $("#delete").show();
                                $("#Date").val((moment(datas.customer.clmAccOBDate).format("DD-MM-YYYY")));
                                $("#Name").val(datas.customer.clmCustomerName);
                                $("#COB").val(datas.customer.clmAccOB);
                                $("#ConPerson").val(datas.customer.clmContactPerson);
                                $("#Phone").val(datas.customer.clmPhoneNo);
                                $("#BillingAddress").val(datas.customer.clmBillingAddress);
                                $("#Mobile").val(datas.customer.clmMobileNo);
                                $("#Email").val(datas.customer.clmEmailNo);
                            }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't sole your problem, then Contact With Paankouri Software & Services")
                    }
                });
                }
            }
            else {
                alert("Please Enter a Customer No first");
            }
        });
        function ValidateCustomer() {
            isValid = true;
            if ($("#Name").val() == "") {
                setError("Name", "Customer name is required!");
                isValid = false;
            }  
        }

        function SetCustomer() {
            customer.clmCustomerID = $("#CustomerNo").val();
            customer.clmCustomerName = $("#Name").val();
            customer.clmAccOB = $("#COB").val();
            customer.clmContactPerson = $("#ConPerson").val();
            customer.clmMobileNo = $("#Mobile").val();
            customer.clmPhoneNo = $("#Phone").val();
            customer.clmEmailNo = $("#Email").val();
            customer.clmBillingAddress = $("#BillingAddress").val();
            customer.clmAccOBDate = $("#Date").val();
        }

    </script>
}