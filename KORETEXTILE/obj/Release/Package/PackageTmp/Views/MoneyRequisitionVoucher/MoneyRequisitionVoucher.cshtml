@model BEEERP.Models.ViewModel.Account.MoneyRequisitionVoucherVModel

@{
    ViewBag.Title = "MoneyRequisitionVoucher";
}
<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 class="col-md-10" style="text-align:center">Money Requisition Voucher (MRV) Entry</h3>
<form id="report" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-10">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA;">
                                    <h4 class="box-title">MRV Details</h4>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.MRVId, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px;">
                                                @Html.TextBoxFor(m => m.MRVId, new { @class = "form-control", @type = "number", @Value = ViewBag.MRVNo })
                                                @Html.ValidationMessageFor(m => m.MRVId, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn btn-primary" style="min-width: 20px;" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmployeeId, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px;">
                                                @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", @type = "number" })
                                                @Html.ValidationMessageFor(m => m.EmployeeId, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="go" id="go" value="Go" class="btn btn-primary" style="min-width: 20px;" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmployeeName, "Employee Name", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.EmployeeName, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Designation, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Designation, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.Designation, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PreviousBalance, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.PreviousBalance, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.PreviousBalance, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CurrentBalance, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.CurrentBalance, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.CurrentBalance, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="box ">
                                <div class="box-body">
                                    <div class="col-sm-8 col-sm-offset-1">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PaymentAcId, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.PaymentAcId, (IEnumerable<SelectListItem>)ViewBag.PaymentAc, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.PaymentAcId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Amount, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @type = "number" })
                                                @Html.ValidationMessageFor(m => m.Amount, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.RefNo, "Reference No", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="box">
                                <div class="box-footer">
                                    <div class="form-group" , style="text-align:center">
                                        <input type="button" id="save" value="Save" class="btn btn-primary" />
                                        <input type="button" id="approve" value="Approve" class="btn btn-primary" />
                                        <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                        <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                        <input type="button" name="print" id="print" value="Print" class="btn btn-primary" />
                                        <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </form>

    @section scripts{
        <script src="~/Scripts/AccountModule/MRVInputFocus.js"></script>
        <script>
        $(document).ready(function () {
            MRVFieldEnterPress();
            $("#PreviousBalance ").val(parseFloat(0));
            $("#CurrentBalance ").val(parseFloat(0));
            //$("#Amount ").val(parseFloat(0));
            $('#update').hide();
            $('#delete').hide();
            $("#approve").hide();
            $("#print").hide();
            $(document).on('click', '#refresh', function () {
                location.reload();
            });
            $('.select2').select2();
            $('.date').datepicker({
                autoclose: true,
                format: 'dd-mm-yyyy',
            });
            var MRVoucher = { MRVNo: 0, EmpID: 0, Date: "", AccountId: 0, Amount: 0.0, Description: "", PrevBalance: 0.0, RefNo: "" };
            function SetMRV() {
                MRVoucher.MRVNo = $("#MRVId").val();
                MRVoucher.EmpID = $("#EmployeeId").val();
                MRVoucher.Date = $("#Date").val();
                MRVoucher.AccountId = $("#PaymentAcId").val();
                MRVoucher.Amount = $("#Amount").val();
                MRVoucher.Description = $("#Description").val();
                MRVoucher.PrevBalance = $("#PreviousBalance").val();
                MRVoucher.RefNo = $("#RefNo").val();
            }
            $(document).on('click', "#print", function (event) {
                event.preventDefault();
                if ($("#message").val() != "true") {
                    $("#report").attr("action", "/MoneyRequisitionVoucher/GetMoneyRequisitionVoucherPreview")
                    $("#report").submit();
                }
            });

            var isSearch = false;

            //Employee search
            $(document).on('click', "#go", function () {
                var param = { empId: $("#EmployeeId").val() };

                $.ajax({
                        url: '@Url.Action("GetEmployeeById", "MoneyRequisitionVoucher")',
                        contentType: "application/json;charset=utf-8",
                        data: param,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas != 0) {
                                $("#EmployeeName").val(datas.Name);
                                $("#Designation ").val(datas.Designation);
                                if (isSearch == false) {
                                    $("#PreviousBalance ").val(datas.PrevBal);
                                }
                            }
                            else {
                                $("#EmployeeName").val("");
                                $("#Designation ").val("");
                                $("#PreviousBalance ").val("");

                                alert("May be Employee doesn't exist.");

                            }
                        }
                });
            });

            $(document).on('keyup', '#Amount', function () {
                if ($("#Amount").val() == "") {
                    //$("#Amount").val(parseFloat(0));
                    $("#CurrentBalance").val(parseFloat(0));
                } else {
                    //$("#Amount").val(parseFloat($("#Amount").val()));
                    $("#CurrentBalance ").val(parseFloat($("#Amount").val()) + parseFloat($("#PreviousBalance").val()));
                }
            });

            //Save
            $(document).on('click', '#save', function () {
                RemoveError();
                ValidateOnSaveClick();
                $("#save").prop("disabled", false);
                if (message == "") {
                    SetMRV();
                    if (confirm("Do you want to Save?")) {
                        $.ajax(
                            {
                                url: '@Url.Action("SaveMoneyRequisitionVoucher", "MoneyRequisitionVoucher")',
                                contentType: "application/json;charset=utf-8",
                                data: JSON.stringify({ mRVoucher: MRVoucher, mRBCalculation: MRVoucher }),
                                type: "POST",
                                dataType: "json",
                                success: function (datas) {
                                    if (datas.Message == 1) {
                                        alert("Save Successfully");
                                        //location.reload();
                                        $("#MRVId").val(datas.mrvNo);
                                        $("#save").hide();
                                        $("#print").show();
                                    }
                                    else if (datas.Message == 0) {
                                        alert("Please recheck data if it is not solve the problem.\n Then Contact with Avalanche Technology Ltd.");
                                        $("#save").prop("disabled", false);
                                    }
                                },
                                error: function () {
                                    alert("Please check Internet connection. If doesn't solve problem. Contact with Avalanche Technology Ltd.");
                                    $("#save").prop("disabled", false);
                                }
                            });
                    }
                    else {
                        $("#save").prop("disabled", false);
                    }
                }
                else {
                    $("#save").prop("disabled", false);
                }
            });

            //Search
            $(document).on('click', "#search", function () {
                SearchClick();
            });

            function SearchClick() {
                $("#update").prop('disabled', false);
                RemoveError();
                isSearch = true;
                if ($("#MRVId").val() == "") {
                    alert("Please Enter a MRV No First");
                }
                else {
                    var mrvid = { mrv: parseInt($("#MRVId").val()) };
                    ClearOnSearch();
                    $.ajax(
                    {
                            url: '@Url.Action("GetMoneyRequisitionVoucherById", "MoneyRequisitionVoucher")',
                            contentType: "application/json;charset=utf-8",
                            data: mrvid,
                            type: 'GET',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Your MRV No Doesn't Exist");
                                }
                                else
                                {
                                    if (@ViewBag.IsNotify == 1) {
                                        if (@ViewBag.Approve== 1) {
                                            //$("#approve").show();
                                            $("#print").show();
                                            $("#save").hide();
                                        }
                                        else {
                                            $("#approve").show();
                                            $("#print").show();
                                            $("#save").hide();
                                        }

                                    }
                                    else {

                                        $("#print").show();
                                        $("#update").show();
                                        $("#delete").show();
                                        $("#save").hide();
                                    }
                                    $("#save").hide();
                                    //$("#update").show();
                                    //$("#delete").show();
                                    $("#MRVId").val(datas.MRVNo);
                                    $("#EmployeeId").val(datas.EmpID);
                                    $("#Date").val((moment(datas.Date).format("DD-MM-YYYY"))).change();
                                    $("#PaymentAcId").val(datas.AccountId).change();
                                    $("#Amount").val(datas.Amount);
                                    $("#Description").val(datas.Description);
                                    $("#PreviousBalance").val(datas.PrevBalance);
                                    $("#RefNo").val(datas.RefNo);
                                    $("#go").click();
                                    $("#CurrentBalance").val(datas.PrevBalance + datas.Amount);
                                }
                            },
                            error: function ()
                            {
                                alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")

                            }
                   });
                }
            }

            if ($("#MRVId").val() != "") {
                if (@ViewBag.IsNotify== 1) {
                    SearchClick();
                }
                //condition
                //$("#approve").show();
            }


            $(document).on('click', "#approve", function () {
                RemoveError();
                ValidateOnSaveClick();
                $("#approve").prop("disabled", false);
                if (message == "") {
                    SetMRV();
                    if (confirm("Do you want to Approve?")) {
                        $.ajax(
                            {
                                url: '@Url.Action("TransectionEffect", "MoneyRequisitionVoucher")',
                                contentType: "application/json;charset=utf-8",
                                data: JSON.stringify({ mRVoucher: MRVoucher, mRBCalculation: MRVoucher }),
                                type: "POST",
                                dataType: "json",
                                success: function (datas) {
                                    if (datas.Message == 1) {
                                        alert("Approve Successfully");
                                        $("#save").hide();
                                        $("#approve").hide();
                                        $("#update").hide();
                                        $("#delete").hide();
                                        $("#print").show();
                                    }
                                    else if (datas.Message == 0) {
                                        alert("Please recheck data if it is not solve the problem.\n Then Contact with Avalanche Technology Ltd.");
                                        $("#approve").prop("disabled", false);
                                    }
                                },
                                error: function () {
                                    alert("Please check Internet connection. If doesn't solve problem. Contact with Avalanche Technology Ltd.");
                                    $("#approve").prop("disabled", false);
                                }
                            });
                    }
                    else {
                        $("#approve").prop("disabled", false);
                    }
                }
                else {
                    alert("Voucher Not found.");
                    $("#approve").prop("disabled", false);
                }
            });


           //Update
            $(document).on('click', '#update', function () {
                RemoveError();
                ValidateOnSaveClick();
                $("#update").prop("disabled", false);
                if (message == "") {
                    SetMRV();
                    if (confirm("Do you want to Update?")) {
                        $.ajax(
                            {
                                url: '@Url.Action("UpdateMoneyRequisitionVoucher", "MoneyRequisitionVoucher")',
                                contentType: "application/json;charset=utf-8",
                                data: JSON.stringify({ mRVoucher: MRVoucher, mRBCalculation: MRVoucher }),
                                type: "POST",
                                dataType: "json",
                                success: function (datas) {
                                    if (datas.Message == 1) {
                                        alert("Update Successfully");
                                        $("#update").prop("disabled", true);
                                    }
                                    else if (datas.Message == 0) {
                                        alert("Please recheck data if it is not solve the problem.\n Then Contact with Avalanche Technology Ltd.");
                                        $("#update").prop("disabled", false);
                                    }
                                    else if (datas.Message == 2) {
                                        alert("This MRV Doesn't exist.");
                                        $("#update").prop('disabled', false);
                                    }
                                    else if (datas.Message == 5) {
                                        alert("This Voucher Is already Approve, so Update is not available.");
                                        $("#update").prop('disabled', false);
                                    }
                                },
                                error: function () {
                                    alert("Please check Internet connection. If doesn't solve problem. Contact with Avalanche Technology Ltd.");
                                    $("#update").prop("disabled", false);
                                }
                            });
                    }
                    else {
                        $("#update").prop("disabled", false);
                    }
                }
                else {
                    $("#update").prop("disabled", false);
                }
            });
            //print
            $(document).on('click', '#print', function () {
                if ($("#MRVId").val() != "") {
                    window.open("/MoneyRequisitionVoucher/GetMoneyRequisitionVoucherPreview?mRVId=" + $("#MRVId").val(), "_blank");
                }
                else {
                    alert("Money requisition vouchar number is required");
                }
            });

            //Delete
            $(document).on('click', '#delete', function () {
                $("#update").prop('disabled', true);
                $("#delete").prop('disabled', true);
                var id = $("#MRVId").val();
                if (confirm('Are you sure you want to delete this from the database?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteMRVById", "MoneyRequisitionVoucher")',
                        contentType: "application/json;charset=utf-8",
                        data: { id: id },
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Delete failed.");
                                $("#delete").prop('disabled', false);
                                $("#update").prop('disabled', false);
                            }
                            else if (datas.Message == 5) {
                                alert("This Voucher Is already Approve, so Update is not available.");
                                $("#update").prop('disabled', false);
                                $("#delete").prop('disabled', false);
                            }
                            else {
                                alert("Delete Successfull");
                                location.reload();
                            }
                        }
                    });
                }
                else {
                    $("#update").prop('disabled', false);
                    $("#delete").prop('disabled', false);
                }
            });


            //Validation for MRV
            function ValidateOnSaveClick() {
                message = "";
                if ($("#EmployeeId").val() == "") {
                    setError("EmployeeId", "Enter an Employee ID and click on go");
                    message = "Employee Id is Required Field."
                }
                if ($("#PaymentAcId").val() == "") {
                    setError("PaymentAcId", "Select a payment account from the list");
                    message = "Payment Account is Required Field."
                }
                if ($("#Amount").val() == "") {
                    setError("Amount", "Please Enter a valid amount");
                    message = "Amount is Required Field."
                }
            }

            function ClearOnSearch() {

                $("#EmployeeId").val("");
                $("#Date").val((moment("").format("DD-MM-YYYY"))).change();
                $("#PaymentAcId").val("").change();
                $("#Amount").val("");
                $("#Description").val("");
                $("#RefNo").val("");
            }


        });
        </script>
    }
