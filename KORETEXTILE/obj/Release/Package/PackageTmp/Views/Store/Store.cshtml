@model BEEERP.Models.SalesModule.Store
@using BEEERP.Models.CommonInformation 

@{
    ViewBag.Title = "Store";
}

<style>
    tbody tr:hover {
        background-color: dodgerblue;
        color: white;
    }
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }
</style>
<div class="row">
    <div>
        <div class="col-md-6">
            <h3 style="text-align:center">Create Store</h3>
        </div>
    </div>
</div>

    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div>
                        <h4 style="color:red">@ViewBag.messege</h4>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h5 class="box-title">Create Store</h5>
                                </div>
                                <div class="box-body">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Id, "Store No", new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(m => m.Id, new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.StoreId })
                                            @Html.ValidationMessageFor(m => m.Id)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Name, "Store Name", new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Name, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Type, "Store Type", new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-6">
                                            @Html.DropDownListFor(m => m.Type, (IEnumerable<SelectListItem>)ViewBag.StoreType, new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(m => m.Type, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.DepotID, "Depot Name", new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-6">
                                            @Html.DropDownListFor(m => m.DepotID, (IEnumerable<SelectListItem>)ViewBag.DepotId, new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(m => m.DepotID)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.FGStoreID, "FG Store", new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-6">
                                            @Html.DropDownListFor(m => m.FGStoreID, (IEnumerable<SelectListItem>)ViewBag.FGStore, new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(m => m.FGStoreID)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="background-color:white; ">
                                <div class="form-group" style="padding:3px;">
                                    <div class="col-md-12" style="text-align:center;">
                                        @*@{
        if (UserAccessAction.HavePerOnSave)
        {*@
                                        <input type="button" name="Save" id="save" value="Save" class="btn btn-primary" />
                                        @*}

        if (UserAccessAction.HavePerOnSave)
        {*@
                                        <input type="button" name="Upate" id="update" value="Update" class="btn btn-primary" />
                                        @*}
         if (UserAccessAction.HavePerOnSave)
        {*@
                                        <input type="button" name="Delete" id="delete" value="Delete" class="btn btn-primary" />
                                        @*}
        }*@
                                        <input type="button" name="Refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h5 class="box-title">Store List</h5>
                                </div>
                                <div class="box-body">
                                    <table class="table table-responsive" id="StoreList">
                                        <thead>
                                            <tr>
                                                <th>No</th>
                                                <th>Store Name</th>
                                                <th>Type</th>
                                                <th>Depot</th>
                                                <th>FG Store</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in ViewBag.Store)
                                            {
                                                <tr class='clickable-row' value="@item.Id">
                                                    <td>@item.Id</td>
                                                    <td>@item.Name</td>
                                                    <td>@item.Type</td>
                                                    <td>@item.DepotName</td>
                                                    <td>@item.FGStoreName</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



@section scripts{
    <script src="~/Scripts/DataAdminModule/StoreInputFocus.js"></script>
    <script>
        var FGStoreID="";
        $(function () {
            $('#StoreList').DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })

        
        })
        //var table = $("#StoreList").DataTable({
           
        //    'searching': true,
        //    'ordering': true,
        //    'info': true
            
        //});
        $(".select2").select2();
        $(document).ready(function () {

            $("#update").hide();
            $("#delete").hide();
            $("#Name").focus();
            $("#Depot").val("@ViewBag.DepotId").change();
            $("#DepotID").prop('disabled', false);
            $(document).on('click', '#edit', function () {
                var id = $(this).attr("value");
                alert(id);
            });

            $(document).on('click', '#refresh', function () {
                location.reload();
            });

            //textbox fillup
            //$(".clickable-row").on('click', function (e) {
            $(document).on('click', ".clickable-row", function () {
                var id = $(this).attr("value");
                 $.ajax({
                    url: '@Url.Action("GetStoreByid", "Store")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if(datas==0)
                        {
                            alert("This store no doesn't exist.");
                        }
                        else {
                            $("#save").hide();
                            $("#update").show();
                            $("#delete").show();
                            $("#Id").val(datas.item.Id);
                            $("#Name").val(datas.item.Name);
                            $("#Type").val(datas.item.Type).change();
                            $("#DepotID").val(datas.item.DepotID).change();
                            //$("#FGStoreID").val(datas.item.FGStoreID).change();
                            FGStoreID = datas.item.FGStoreID;
                        }
                    }
                });
            });
        });
        EnterPress();
        //save store
        $(document).on('click', '#save', function () {
            ValidateOnSaveClick()
            $("#save").prop('disabled', true);
            if (message == "")
            {
                var store = { Id: 0, Name: "", Type: "", DepotID: 0, FGStoreID:0 };
                store.Id = $("#Id").val();
                store.Name = $("#Name").val();
                store.Type = $("#Type").val();
                store.DepotID = parseInt($("#DepotID").val());
                store.FGStoreID = parseInt($("#FGStoreID").val());
                if (confirm("Do you want to save?")) {
                     $.ajax({
                    url: '@Url.Action("SaveStore", "Store")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ store: store }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas.Message == 0) {
                            alert("Store Is Already Exists");
                            $("#save").prop('disabled', false);
                        }
                        else if (datas.Message == 1) {
                            alert("Save Sucessfull.");
                            location.reload();
                        }
                        else {
                            alert("Save Failed. Check your Internet Connection.");
                        }
                    }
                });
                }
               
            }
            else {
                alert(message);
                $("#save").prop('disabled', false);
            }    
        });

        $(document).on('change', "#DepotID", function () {
           // $("#GroupID").prop('disabled', false);
            var depotID = { depotID: $(this).val() };
            //var depotID = $("#DepotID").val();
            
                $.ajax({
                    url: '@Url.Action("GetFGstoreName", "Store")',
                    contentType: "application/json;charset=utf-8",
                    data: depotID,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        $("#FGStoreID").empty();
                        //$("#SupplierID").prop("disabled", false);
                        $.each(datas.FGStore, function (index, value) {
                            $("#FGStoreID").append($('<option />', {
                                value: value.Value,
                                text: value.Text
                            })).trigger('change');
                        });
                        $("#FGStoreID").focus();
                        if (FGStoreID != "") {
                            $("#FGStoreID").val(FGStoreID).change();
                            FGStoreID = "";
                        }
                    }
                });
            
            
        });

        //update store
        $(document).on('click', '#update', function () {
            ValidateOnSaveClick();
            $("#update").prop('disabled', true);
                if (message == "")
                {
                    var store = { Id: 0, Name: "", Type: "", DepotID: 0, FGStoreID: 0 };
                    store.Id = $("#Id").val();
                    store.Name = $("#Name").val();
                    store.Type = $("#Type").val();
                    store.DepotID = parseInt($("#DepotID").val());
                    store.FGStoreID = parseInt($("#FGStoreID").val());
                    if (confirm("Do you want to Update?")) {
                        $.ajax({
                        url: '@Url.Action("UpdateStore", "Store")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ store: store }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Update Failed");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Updated Sucessfully");
                                location.reload();
                            }
                        }
                    });
                    }
                    
                }
                else {
                    alert(message);
                    $("#update").prop('disabled', false);
                }

        });

        //delete store
        $(document).on('click', '#delete', function () {

            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#Id").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteStoreByid", "Store")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
        });

        function ValidateOnSaveClick() {
            message = "";
            if ($("#Name").val() == "") {
                message += "Store Name is Required Field.\n";
            }
            if ($("#Type").val() == "") {
                message += "Type is Required Field.\n";
            }
            if ($("#DepotID").val() == "") {
                message += "Depot is Required Field.\n";
            }
        }
        

    </script>
}
