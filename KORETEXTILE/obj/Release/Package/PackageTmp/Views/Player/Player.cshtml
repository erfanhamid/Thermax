@model BEEERP.Models.Player

@{
    ViewBag.Title = "Player";
}

<h2>Create New Player</h2>

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "playerReport", target = "_blank" }))
 {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PId, "Player ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5 input-group" style="padding-left:1%;padding-right:1%;padding-top:0%">
                    @Html.EditorFor(model => model.PId, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-btn">
                        <button type="button" class="btn skin-blue btn-flat" id="playerSearch">Search</button>
                    </span>
                    @Html.ValidationMessageFor(model => model.PId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobileNo, "Mobile No", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-5">
                    <input type="button" value="Save" id="save" class="btn btn-default" />
                    <input type="button" value="Update" id="update" class="btn btn-default" />
                    <input type="button" value="Delete" id="delete" class="btn btn-default" />
                    <input type="button" value="Refresh" id="refresh" class="btn btn-default" />
                    <input type="button" value="Report" id="report" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    @section scripts
{
        <script>
        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            var isValid = true;
        });
        $(document).on('click', "#refresh", function () {
            window.location.reload(true);
        });
        $(document).on('click', '#save', function () {
            RemoveError();
            ValidatePlayer();
            if (isValid == true) {
                var player = { PId: 0, FirstName: "", LastName: "", MobileNo: "", Address: "" }
                player.PId = $("#PId").val();
                player.FirstName = $("#FirstName").val();
                player.LastName = $("#LastName").val();
                player.MobileNo = $("#MobileNo").val();
                player.Address = $("#Address").val();
                if (confirm('Do you want to save')) {
                    $.ajax({
                        url: '@Url.Action("SavePlayer", "Player")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ player: player }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Player is already exist.");
                                $("#save").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Saved.");
                                $("#save").hide();
                            }
                        }
                    });
                }
            }
        });
        $(document).on('click', "#report", function () {
            event.preventDefault();
            $("#playerReport").attr("action", "/Player/PlayerSummary")
            $("#playerReport").submit();
        });

        $(document).on('click', "#playerSearch", function () {
            var id = { playerId: $("#PId").val() };
            RemoveError();
            $.ajax({
                url: '@Url.Action("SearchPlayerById", "Player")',
                contentType: "application/json;charset=utf-8",
                data: id,
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    if(datas!=0)
                    {
                        $("#update").show();
                        $("#delete").show();
                        $("#save").hide();
                        $("#FirstName").val(datas.FirstName);
                        $("#LastName").val(datas.LastName).change();
                        $("#MobileNo").val(datas.MobileNo);
                        $("#Address").val(datas.Address);
                    }
                    else {
                        alert("The player dosen't exist.");
                    }
                }
            });
        });

        $(document).on('click', '#update', function () {
            RemoveError();
            ValidatePlayer();
            if (isValid == true) {
                var player = { PId: 0, FirstName: "", LastName: "", MobileNo: "", Address: "" }
                player.PId = $("#PId").val();
                player.FirstName = $("#FirstName").val();
                player.LastName = $("#LastName").val();
                player.MobileNo = $("#MobileNo").val();
                player.Address = $("#Address").val();
                if (confirm('Do you want to update?')) {
                    $.ajax({
                        url: '@Url.Action("UpdatePlayer", "Player")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ player: player }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Update Failed");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#update").hide();
                            }
                        }
                    });
                }
            }
        });
        $(document).on('click', "#delete", function () {
            var playerId = $("#PId").val();
            RemoveError();
            $.ajax({
                url: '@Url.Action("DeletePlayer", "Player")',
                contentType: "application/json;charset=utf-8",
                data: { playerId: playerId},
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    if(datas!=0)
                    {
                        alert("Deleted Successfully.")
                        location.reload();
                    }
                    else {
                        alert("Failed To Delete");
                    }
                }
            });
        });

        function ValidatePlayer() {
            isValid = true;
            if ($("#PId").val() == "") {
                setError("PId", "Please enter a player ID first.");
                isValid = false;
            }
            if ($("#FirstName").val() <= 0) {
                setError("FirstName", "Please enter first name.");
                isValid = false;
            }
            if ($("#MobileNo").val() <= 0) {
                setError("MobileNo", "Please enter a Mobile No.");
                isValid = false;
            }
        }
        </script>

    }
