@model BEEERP.Models.ViewModel.Account.DealerAccAdjustmentVModel
@{
    ViewBag.Title = "DAADEntry";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<h3 style="text-align:center">Dealer Account Adjustment (DAAD) Entry</h3>

<form id="report" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="col-md-12">
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                <h4 class="box-title">Basic Info </h4>
                            </div>
                            <div class="box-body">
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DAANo, "DAAD No", new { @class = "col-md-4 control-label " })
                                                <div class="input-group input-group-sm" style="padding-right:15px;padding-left:14px;">
                                                    @Html.TextBoxFor(m => m.DAANo, new { @class = "form-control enterTab digit" })
                                                    @Html.ValidationMessageFor(m => m.DAANo)
                                                    <span class="input-group-btn">
                                                        <button type="button" class="btn btn-primary" id="search" style="min-width: 50px">Search</button>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DAAAccountID, new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(m => m.DAAAccountID, (IEnumerable<SelectListItem>)ViewBag.Account, new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(m => m.DAAAccountID, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.TextAreaFor(m => m.Description, new
                                                    {
                                                        @class = "form-control enterTab"@*, style = "max-width:242px;margin-left: 0px;margin-right: 0px;"*@})
                                                    @Html.ValidationMessageFor(m => m.Description)

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DepotID, new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(m => m.DepotID, (IEnumerable<SelectListItem>)ViewBag.Depot, new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(m => m.DepotID, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.CostGroup, new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(m => m.CostGroup, (IEnumerable<SelectListItem>)ViewBag.CostGroup, new { @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(m => m.CostGroup, "", new { @style = "color: red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.DAADate, new { @class = "col-md-4 control-label" })
                                                <div class="col-sm-8 date input-group">
                                                    @Html.TextBoxFor(m => m.DAADate, new { @class = "enterTab form-control date ", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-calendar"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.TotalAmount, new { @class = "col-md-4 control-label" })
                                                <div class="input-group col-md-8">
                                                    @Html.TextBoxFor(m => m.TotalAmount, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                    @Html.ValidationMessageFor(m => m.TotalAmount)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="loader" id="loader"></div>
                        <br />
                        <div class="box">
                            <div class="box-body">
                                <div class="col-md-12">
                                    <div class="col-md-8 col-md-offset-1">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.DealerID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.DealerID, (IEnumerable<SelectListItem>)ViewBag.DealerID, new { @class = "form-control select2", })
                                                @Html.ValidationMessageFor(m => m.DealerID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Due, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Due, new { @class = "form-control digit", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.Due, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Amount, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control digit" })
                                                @Html.ValidationMessageFor(m => m.Amount, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Zone, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Zone, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.Zone, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" id="Id" />
                                <div class="form-group">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-8" align="center">
                                        <input type="button" name="addToGrid" id="addToGrid" value="Add To Grid" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                <h4 class="box-title">Dealer List</h4>
                            </div>
                            <div class="box-body">
                                <table class="table table-responsive" id="items">
                                    <thead>
                                        <tr>
                                            <th>Dealer ID</th>
                                            <th>Dealer Name</th>
                                            <th>Amount</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="box">
                            <div class="box-body" style="text-align:center;">
                                <input type="button" value="Save" id="save" class="btn btn-primary" style="padding-left:20px;" />
                                <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                <input type="button" value="Print" id="print" class="btn btn-primary" style="min-width:100px" />
                                <input type="button" value="Refresh" id="refresh" class="btn btn-primary" style="padding-left:20px;" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts{
    <script src="~/Scripts/AccountModule/DAADInputFocus.js"></script>
    <script>

        EnterPress();
        var dealerID = 0;
        addedItems = [];
        var isValid = true;
        var table = $('#items').DataTable({
            'paging': true,
            'lengthChange': false,
            'searching': false,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });
        var DAA = { DAANo: 0, DepotID: 0, CostGroup: 0, DAAAccountID: 0, DAADate: "", TotalAmount: 0, Description: "" }
        function setDAA() {
            DAA.DAANo = $("#DAANo").val();
            DAA.DepotID = $("#DepotID").val();
            DAA.CostGroup = $("#CostGroup").val();
            DAA.DAAAccountID = $("#DAAAccountID").val();
            DAA.DAADate = $("#DAADate").val();
            DAA.TotalAmount = $("#TotalAmount").val();
            DAA.Description = $("#Description").val();
        }
        $(document).ready(function () {
            $("#DAAAccountID").focus();
            $("#update").hide();
            $("#delete").hide();
            $("#print").hide();
            $(".select2").select2();
            $('#DAADate').datepicker({
                autoclose: true,
                format: 'dd-mm-yyyy',
            });

            $("#refresh").on('click', function () {
                window.location.reload(true);
            });
            $("#DepotID").on('change', function () {
                if ($(this).val() != "") {
                    var depot = $(this).val();

                    $.ajax({
                        url: '@Url.Action("GetDealerByDepot", "DAAD")',
                        contentType: "application/json;charset=utf-8",
                        data: { depot: depot },
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            $("#DealerID").empty();
                            // $("#ItemID").prop("disabled", false);
                            $.each(datas, function (index, value) {
                                $("#DealerID").append($('<option />', {
                                    value: value.Value,
                                    text: value.Text
                                })).trigger('change');
                            });

                            if (dealerID != 0) {
                                $("#DealerID").val(dealerID).change();
                                itemId = 0;
                            }
                        }
                    });

                } else {
                    $("#DealerID").empty();
                }

            });

        });

        $("#DealerID").on('change', function () {
                if ($(this).val() != "") {
                    var dealer = $(this).val();

                    $.ajax({
                        url: '@Url.Action("GetDealerDetails", "DAAD")',
                        contentType: "application/json;charset=utf-8",
                        data: { dealer: dealer },
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#Due").val(datas.due);
                            $("#Zone").val(datas.zone);

                        }
                    });

                } else {
                    $("#Due").val("");
                    $("#Zone").val("");
                }

         });
        $(document).on('click', '#addToGrid', function () {
            RemoveError();
            var dealer = { DealerID: 0, DealerName: "", Amount: 0 }
            ValidateAddToGrid();
            if (isValid == true) {
                name = $("#DealerID :selected").text();
                dealer.DealerName = name.substring(name.indexOf("-") + 1, name.Length);
                dealer.DealerID = $("#DealerID").val();
                dealer.Amount = $("#Amount").val();

                addedItems.push(dealer);
               // ClearOnSearch();
                ShowOnTable();
                clearOnAddToGrid();
               // $("#Depot").prop('disabled', true);
               // $("#StoreID").prop('disabled', true);
            }
        });
        function ValidateAddToGrid() {
            isValid = true;
            if ($("#DealerID").val() == "") {
                setError("DealerID", "Dealer is required field");
                isValid = false;
            }
            if ($("#Amount").val() == "" || $.isNumeric($("#Amount").val()) == false) {
                setError("Amount", "Amount is required field and Numeric");
                isValid = false;
            }

            $.each(addedItems, function (index, value) {
                if (value.DealerID == $("#DealerID").val()) {
                    setError("DealerID", "This Dealer Already Added.");
                    isValid = false;
                }
            });
        }
        function clearOnAddToGrid() {
            $("#Amount").val("");
            $("#DealerID").val("").change();
        }

        //delete Row
        $(document).on('click', '[name="deleteRow"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems, function (index, value) {
                    if (value.DealerID == item) {

                    }
                    else {
                        newItem.push(value);
                    }

                });
                addedItems = newItem;
                ShowOnTable();
            }
        });


        //edit Row
        $(document).on('click', '[name="editRow"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            $.each(addedItems, function (index, value) {
                if (value.DealerID == item) {

                    $("#DealerID").val(value.DealerID).change();
                    //$("#ItemID").val(item).change();
                    $("#Amount").val(value.Amount);


                    dealerID = value.DealerID;
                }
                else {
                    newItem.push(value);
                }

            });
            addedItems = newItem;
            ShowOnTable();
        });

        function ShowOnTable() {
            table.clear().draw();
            var TotalAmount = 0;

            //var netAmount = 0;

            //var totVat = 0;
            $.each(addedItems, function (index, value) {
                table.row.add([value.DealerID, value.DealerName, value.Amount,
                '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                value.DealerID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.DealerID + '"></i></a>']).draw();
                TotalAmount += parseFloat(value.Amount);

            });
            $("#TotalAmount").val(TotalAmount.toFixed(2));

        }

        function ValidateOnSave() {
            isValid = true;
            if ($("#DepotID").val() == "") {
                setError("DepotID", "Depot is required field");
                isValid = false;
            }
            if ($("#DAAAccountID").val() == "") {
                setError("DAAAccountID", "Account is required field");
                isValid = false;
            }

        }
                $(document).on('click', '#save', function () {


                $("#save").hide();

                //$("#update").show();
                if (addedItems.length <= 0) {
                    alert("At least One Dealer should be added for save.");
                    $("#save").show();
                }
                else
                {
                    ValidateOnSave();
                    if (isValid == true) {
                        setDAA();
                        if (confirm("Do you want to Save?")) {
                            document.getElementById("loader").style.display = "block";
                            $.ajax(
                                {
                                    url: '@Url.Action("SaveDAAD", "DAAD")',
                                    contentType: "application/json;charset=utf-8",
                                    data: JSON.stringify({ addedItems: addedItems, DAA: DAA }),
                                    type: "POST",
                                    dataType: "json",
                                    success: function (datas) {
                                        document.getElementById("loader").style.display = "none";
                                        if (datas == 0) {
                                            alert("Save Failed");
                                        }
                                        else if (datas.Message == 2) {
                                            alert("Please recheck data if it is not solve the problem.\n Then Contact with Avalanche Technology Ltd.");
                                            $("#save").show();
                                        }
                                        else if (datas == 3) {
                                            alert("Please select a valid entry date");
                                            $("#DAADate").focus();
                                            $("#save").show();
                                        } else {
                                            alert("Save Successfully");
                                            $("#DAANo").val(datas);
                                            $("#update").show();
                                            $("#delete").show();
                                            //$("#print").show();
                                        }
                                    },
                                    error: function () {
                                        alert("Please check Internet connection. If doesn't solve problem. Contact with Avalanche Technology Ltd.");
                                        $("#save").show();
                                    }
                                });
                        }

                    } else {
                        $("#save").show();
                    }
                }
        });

        $(document).on('click', "#search", function () {
                document.getElementById("loader").style.display = "block";
                        var id = $("#DAANo").val();
                        if (id != "") {
                           // ClearOnSearch();
                            $.ajax({
                                url: '@Url.Action("GetDAA", "DAAD")',
                                contentType: "application/json;charset=utf-8",
                                data: { id: id },
                                type: 'GET',
                                dataType: 'json',
                                success: function (datas) {
                                    document.getElementById("loader").style.display = "none";
                                    if (datas == 0) {
                                        alert("Your entered DAA No Doesn't exist");
                                    }
                                    else if (datas == 2) {
                                        alert("Fatal Error! Please Recheck you data");
                                    }
                                    else {
                                        $("#save").hide();
                                        $("#update").show();
                                        $("#delete").show();

                                        $("#DAANo").val(datas.DAA.DAANo);
                                        $("#DepotID").val(datas.DAA.DepotID).change();
                                        $("#CostGroup").val(datas.DAA.CostGroup).change();
                                        $("#DAAAccountID").val(datas.DAA.DAAAccountID).change();
                                        $("#DAADate").val((moment(datas.DAA.DAADate).format("DD-MM-YYYY"))).change();
                                        //$("#DAADate").val((datas.DAA.DAADate).format("DD-MM-YYYY")).change();
                                        $("#TotalAmount").val(datas.DAA.TotalAmount);
                                        $("#Description").val(datas.DAA.Description);

                                        addedItems = [];
                                        $.each(datas.Line, function (index, value) {
                                            var dealer = { DealerID: 0, DealerName: "", Amount: 0 }
                                            dealer.DealerID = value.DealerID;
                                            dealer.DealerName = value.DealerName;
                                            dealer.Amount = value.Amount;

                                            addedItems.push(dealer);
                                        });
                                        ShowOnTable();
                                       // $("#print").show();
                                    }
                                },
                                error: function () {
                                    alert("Please check your internet connection first. If this doesn't sole your problem, then Contact With Paankouri Software & Services")

                                }
                            });
                        } else {
                            alert("Please Enter a DAA No.");
                        }

        });


           $(document).on('click', '#update', function () {


                $("#update").hide();

                //$("#update").show();
                if (addedItems.length <= 0) {
                    alert("At least One Dealer should be added for save.");
                    $("#update").show();
                }
                else
                {
                    ValidateOnSave();
                    if (isValid == true) {
                        setDAA();
                        if (confirm("Do you want to Update?"))
                        {
                            document.getElementById("loader").style.display = "block";
                            $.ajax(
                            {
                                url: '@Url.Action("UpdateDAAD", "DAAD")',
                                contentType: "application/json;charset=utf-8",
                                data: JSON.stringify({ addedItems: addedItems, DAA: DAA }),
                                type: "POST",
                                dataType: "json",
                                success: function (datas)
                                {
                                    document.getElementById("loader").style.display = "none";
                                    if (datas == 0) {
                                        alert("Update Failed");
                                    }
                                    else if (datas.Message == 2) {
                                        alert("Please recheck data if it is not solve the problem.\n Then Contact with Avalanche Technology Ltd.");
                                        $("#update").show();
                                    } else {
                                        alert("Updated Successfully");
                                        $("#DAANo").val(datas);
                                        //$("#update").show();
                                        //$("#print").show();
                                    }
                                },
                                error: function ()
                                {
                                    alert("Please check Internet connection. If doesn't solve problem. Contact with Avalanche Technology Ltd.");
                                    $("#update").show();
                                }
                            });
                        }

                    } else {
                        $("#save").show();
                    }
                }
        });


           $(document).on('click', '#delete', function () {


                $("#delete").hide();
                    if (isValid == true) {
                        setDAA();
                        if (confirm("Do you want to Delete?"))
                        {
                            document.getElementById("loader").style.display = "block";
                            $.ajax(
                            {
                                url: '@Url.Action("DeleteDAAD", "DAAD")',
                                contentType: "application/json;charset=utf-8",
                                data: JSON.stringify({ DAA: DAA }),
                                type: "POST",
                                dataType: "json",
                                success: function (datas)
                                {
                                    document.getElementById("loader").style.display = "none";
                                    if (datas == 0) {
                                        alert("Delete Failed");
                                    }
                                     else if (datas == 1) {
                                        alert("Deleted Successfully");
                                        window.location.reload(true);

                                    }
                                }

                            });
                        }

                    }

        });
    </script>

}
