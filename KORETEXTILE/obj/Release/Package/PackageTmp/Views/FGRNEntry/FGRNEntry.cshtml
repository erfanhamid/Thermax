@model BEEERP.Models.ViewModel.StoreDepot.GRFVModel
@{
    ViewBag.Title = "FGRNEntry";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }


    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 style="text-align:center">Finish Goods Receive Note (FGRN) Entry</h3>

<form id="report" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">

                <div class="col-md-12">
                    <div class="box ">
                        <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                            <h4 class="box-title">FGRN Details</h4>
                        </div>

                        <div class="box-body">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.GRFNo, new { @class = "col-md-4 control-label " })
                                        <div class="input-group input-group-sm" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.GRFNo, new
                                       {
                                           @class = "form-control enterTab "@*, @Value = ViewBag.RPID*@})
                                            @Html.ValidationMessageFor(m => m.GRFNo)
                                            <span class="input-group-btn">
                                                <button type="button" class="btn btn-primary" id="search" style="min-width: 50px">Search</button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.DepotID, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(m => m.DepotID, (IEnumerable<SelectListItem>)ViewBag.Depot, new { @class = "enterTab form-control select2 " })
                                            @Html.ValidationMessageFor(m => m.DepotID, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ReceiveStoreID, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(m => m.ReceiveStoreID, (IEnumerable<SelectListItem>)ViewBag.Store, new { @class = "enterTab form-control select2 " })
                                            @Html.ValidationMessageFor(m => m.ReceiveStoreID, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ChallanNo, new { @class = "col-md-4 control-label " })
                                        <div class="input-group input-group-sm" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.ChallanNo, new
                                       {
                                           @class = "form-control enterTab "@*, @Value = ViewBag.RPID*@})
                                            @Html.ValidationMessageFor(m => m.ChallanNo)
                                            <span class="input-group-btn">
                                                <button type="button" class="btn skin-blue btn-flat enterTab" id="go" style="min-width: 20px">GO</button>
                                            </span>
                                        </div>
                                    </div>


                                </div>
                                <div class="col-md-4">

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SIFDNo, new { @class = "col-md-4 control-label" })
                                        <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.SIFDNo, new { @class = "form-control enterTab", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(m => m.SIFDNo)

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.VehicleNo, new { @class = "col-md-4 control-label" })
                                        <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control enterTab", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(m => m.VehicleNo)

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OldStoreID, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(m => m.OldStoreID, (IEnumerable<SelectListItem>)ViewBag.CurrentStore, new { @class = "enterTab form-control select2 " })
                                            @Html.ValidationMessageFor(m => m.OldStoreID, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Descriptions, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextAreaFor(m => m.Descriptions, new { @class = "col-md-12 " })
                                            @Html.ValidationMessageFor(m => m.Descriptions, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ReceiveDate, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 date input-group" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.ReceiveDate, new { @class = "enterTab form-control date ", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ChallanDate, new { @class = "col-md-4 control-label" })
                                        <div class="col-sm-8 date input-group" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.ChallanDate, new { @class = "enterTab form-control date ", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.GRQNo, new { @class = "col-md-4 control-label" })
                                        <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.GRQNo, new { @class = "form-control enterTab", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(m => m.GRQNo)

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.TotalIssueQty, new { @class = "col-md-4 control-label" })
                                        <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.TotalIssueQty, new { @class = "form-control enterTab", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(m => m.TotalIssueQty)

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.TotalReceiveQty, new { @class = "col-md-4 control-label" })
                                        <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.TotalReceiveQty, new { @class = "form-control enterTab", @disabled = "disabled" })
                                            @Html.ValidationMessageFor(m => m.TotalReceiveQty)

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="row" style="padding-top:10px;">
                            <div class="col-md-6" style="padding-left:5px;">


                                <div class="box ">
                                    <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                        <h5 class="box-title"> Item List</h5>
                                    </div>
                                    <div class="box-body">
                                        <table class="table table-responsive" id="ItemList1">
                                            <thead>
                                                <tr>
                                                    <th>Item Group</th>
                                                    <th>Item Name</th>
                                                    <th>Shift Qty</th>
                                                    <th>Cost Rate</th>
                                                    <th>Cost Value</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>

                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ItemGroup, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.ItemGroup, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.ItemGroup)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PcsPerCtn, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.PcsPerCtn, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.PcsPerCtn)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.IssuedQtyCtn, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.IssuedQtyCtn, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.IssuedQtyCtn)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.IssuedQtyPcs, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.IssuedQtyPcs, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.IssuedQtyPcs)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ReceivedQtyCtn, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.ReceivedQtyCtn, new { @class = "form-control enterTab" })
                                                @Html.ValidationMessageFor(m => m.ReceivedQtyCtn)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ReceivedQtyPcs, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.ReceivedQtyPcs, new { @class = "form-control enterTab" })
                                                @Html.ValidationMessageFor(m => m.ReceivedQtyPcs)

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ItemName, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.ItemName, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.ItemName)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AvailableQtyCtn, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.AvailableQtyCtn, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.AvailableQtyCtn)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AvailableQtyPcs, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.AvailableQtyPcs, new { @class = "form-control enterTab", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.AvailableQtyPcs)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ReceiveQtyCtn, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.ReceiveQtyCtn, new { @class = "form-control enterTab" })
                                                @Html.ValidationMessageFor(m => m.ReceiveQtyCtn)

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ReceiveQtyPcs, new { @class = "col-md-4 control-label" })
                                            <div class="input-group col-md-8" style="padding-right:15px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.ReceiveQtyPcs, new { @class = "form-control enterTab" })
                                                @Html.ValidationMessageFor(m => m.ReceiveQtyPcs)

                                            </div>
                                        </div>
                                        <input type="hidden" name="ItemID" id="ItemID" />
                                        <input type="hidden" name="GroupID" id="GroupID" />
                                        <input type="hidden" name="Rate" id="Rate" />
                                        <input type="hidden" name="Cost" id="Cost" />
                                        <input type="hidden" name="VehicleID" id="VehicleID" />

                                        <div class="col-md-6"></div>
                                        <div class="col-md-6">
                                            <button type="button" id="addToGrid" name="addToGrid" style="height:300%; font-size:100%;" class="btn btn-primary">Add To Grid</button>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                <h5 class="box-title"> Item List</h5>
                            </div>
                            <div class="box-body">
                                <table class="table table-responsive" id="ItemList2">
                                    <thead>
                                        <tr>
                                            <th>Item Group</th>
                                            <th>Item Name</th>
                                            <th>Shift Qty</th>
                                            <th>Cost Rate</th>
                                            <th>Cost Value</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="box">
                <div class="box-footer">
                    <div class="form-group" , style="text-align:center">
                        <input type="button" value="Save" id="save" class="btn btn-primary" style="padding-left:20px;" />
                        <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                        @{

                            if (HttpContext.Current.User.IsInRole("Admin") || HttpContext.Current.User.IsInRole("DataAdmin"))
                            {
                                <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                            }
                        }
                        <input type="button" value="Print" id="print" class="btn btn-primary" style="min-width:100px" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts{
    <script src="~/Scripts/StoreDepot/FGRNInputFocus.js"></script>
    <script>

        KeyPress();
        var isValid = true;
        var storeid = 0;
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });
        var addedItems1 = [];
        var addedItems2 = [];
        $(".select2").select2();
        var table1 = $('#ItemList1').DataTable({
            'paging': true,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });
        var table2 = $('#ItemList2').DataTable({
            'paging': true,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });
        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $("#print").hide();

        });
        $("#refresh").on('click', function () {

            window.location.reload(true);
        });
        var FGRN = { GRFNo: 0, DepotID: 0, ReceiveDate: "", ReceiveStoreID: 0, ChallanNo: 0, ChallanDate: "", OldStoreID: 0, VehicleID: 0, Descriptions: "" };
        function setFGRN() {
            FGRN.GRFNo = $("#GRFNo").val();
            FGRN.DepotID = $("#DepotID").val();
            FGRN.ReceiveDate = $("#ReceiveDate").val();
            FGRN.ReceiveStoreID = $("#ReceiveStoreID").val();
            FGRN.ChallanNo = $("#ChallanNo").val();
            FGRN.ChallanDate = $("#ChallanDate").val();
            FGRN.OldStoreID = $("#OldStoreID").val();
            FGRN.VehicleID = $("#VehicleID").val();
            FGRN.Descriptions = $("#Descriptions").val();
        }

        $(document).on('change',"#DepotID", function () {

            var id =  $(this).val();
                if (id != "") {
                    $.ajax({
                        url: '@Url.Action("GetDataByDepot", "FGRNEntry")',
                        contentType: "application/json;charset=utf-8",
                        data: {Depot : id},
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#ReceiveStoreID").empty();

                            //$("#DriverName").empty();
                            $.each(datas, function (index, value) {
                                $("#ReceiveStoreID").append($('<option />', {
                                    value: value.Value,
                                    text: value.Text
                                })).trigger('change');
                            });
                            if (storeid > 0) {
                                $("#ReceiveStoreID").val(storeid).change();
                            }
                            storeid = 0;
                        }
                    });
                }
                else {
                    $("#ReceiveStoreID").empty();
                    $("#ReceiveStoreID").append($('<option />', {
                        value: "",
                        text: "--- Select Store ---"
                    })).trigger('change');


                }
        });
        $("#go").on('click', function () {
            if ($("#DepotID").val() == "") {
                alert("Please Select a Depot");
            } else if ($("#ReceiveStoreID").val() == "") {
                alert("Please Select a Received Store");
            } else if ($("#ChallanNo").val() == "") {
                alert("Please Enter a Challan No");
            }
            else {
                $.ajax({
                     url: '@Url.Action("GetDataByChallanNo", "FGRNEntry")',
                        contentType: "application/json;charset=utf-8",
                    data: { challanNo: $("#ChallanNo").val(), store: $("#ReceiveStoreID").val()},
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Please Enter a valid challan no");
                        } else {
                            ClearOnAddToGrid();
                            $("#SIFDNo").val(datas.data.SIFDNo);
                            $("#VehicleNo").val(datas.data.VehicleNo);
                            $("#OldStoreID").val(datas.data.CurrentStore).change();
                            $("#Descriptions").val(datas.data.Description);
                            $("#GRQNo").val(datas.data.GRQNo);
                            $("#ChallanDate").val((moment(datas.data.ChallanDate).format("DD-MM-YYYY")));
                            $("#TotalIssueQty").val(datas.TotalIssued);
                            $("#VehicleID").val(datas.data.VehicleID);

                            addedItems1 = [];
                            $.each(datas.line, function (index, value) {

                                var item = { ItemGrpID: 0, GroupName: "", ItemID: 0, ItemName: "", ShiftQty: 0, CostRt: 0, CostVal: 0, CartonCapacity: 0 };
                                item.ItemGrpID = value.ItemGrpID;
                                item.GroupName = value.GroupName;
                                item.ItemID = value.ItemID;
                                item.ItemName = value.ItemName;
                                item.ShiftQty = value.ShiftQty;
                                item.CostRt = value.CostRt;
                                item.CostVal = (value.CostVal).toFixed(2);
                                item.CartonCapacity = value.CartonCapacity;
                                addedItems1.push(item);
                            });
                            ShowOnTable1();
                        }


                    }
                });
            }

        });
        function ShowOnTable1() {
            table1.clear().draw();

            $.each(addedItems1, function (index, value) {
                table1.row.add([value.GroupName, value.ItemName, value.ShiftQty, value.CostRt, value.CostVal,
                    '<button class="btn btn-success" name="editRow1" value="' +
                    value.ItemID + '"><i class="fa fa-edit" ></i></button>']).draw();
            });

        }
        $(document).on('click', '[name="editRow1"]', function (e) {
            var item = $(this).attr("value");
            var newItem = [];
            $.each(addedItems1, function (index, value) {
                if (value.ItemID == item) {
                    $.ajax({
                    url: '@Url.Action("GetItemAvailabiltiy", "FGRNEntry")',
                    contentType: "application/json;charset=utf-8",
                    data: { challanNo: $("#ChallanNo").val(), itemid: item},
                    type: 'GET',
                    dataType: 'json',
                        success: function (datas) {
                            if (datas != 0) {
                                $("#ItemGroup").val(value.GroupName);
                                $("#ItemName").val(value.ItemName);
                                $("#PcsPerCtn").val(value.CartonCapacity);
                                $("#IssuedQtyPcs").val(value.ShiftQty);
                                var issuedctn = (value.ShiftQty / value.CartonCapacity).toFixed(2);
                                $("#IssuedQtyCtn").val(issuedctn);
                                var receivedctn = (datas.received / value.CartonCapacity).toFixed(2);
                                $("#ReceivedQtyCtn").val(receivedctn);
                                $("#ReceivedQtyPcs").val(datas.received);
                                var availablectn = (datas.available / value.CartonCapacity).toFixed(2);
                                $("#AvailableQtyCtn").val(availablectn);
                                $("#AvailableQtyPcs").val(datas.available);
                                $("#ReceiveQtyCtn").val(availablectn);
                                $("#ReceiveQtyPcs").val(datas.available);
                                $("#ItemID").val(value.ItemID);
                                $("#GroupID").val(value.ItemGrpID);
                                $("#Rate").val(value.CostRt);
                                $("#Cost").val(value.CostVal);
                            } else {
                                $("#ItemGroup").val(value.GroupName);
                                $("#ItemName").val(value.ItemName);
                                $("#PcsPerCtn").val(value.CartonCapacity);
                                $("#IssuedQtyPcs").val(value.ShiftQty);
                                var issuedctn = (value.ShiftQty / value.CartonCapacity).toFixed(2);
                                $("#IssuedQtyCtn").val(issuedctn);
                                $("#ReceivedQtyCtn").val(0);
                                $("#ReceivedQtyPcs").val(0);
                                $("#AvailableQtyCtn").val(issuedctn);
                                $("#AvailableQtyPcs").val(value.ShiftQty);
                                $("#ReceiveQtyCtn").val(issuedctn);
                                $("#ReceiveQtyPcs").val(value.ShiftQty);
                                $("#ItemID").val(value.ItemID);
                                $("#GroupID").val(value.ItemGrpID);
                                $("#Rate").val(value.CostRt);
                                $("#Cost").val(value.CostVal);
                            }



                        }

                    });


                }
                else {
                    newItem.push(value);
                }

            });
            addedItems1 = newItem;
            ShowOnTable1();
        });
        $("#addToGrid").on('click', function () {
            RemoveError();
            ValidateAddToGrid();
            if (isValid == true) {

                var item = { GroupID: 0, GroupName: "", ItemID: 0, ItemName: "", Qty: 0, Rate: 0, Cost: 0, CartonCapacity: 0 };
                item.GroupID = $("#GroupID").val();
                item.GroupName = $("#ItemGroup").val();
                item.ItemName = $("#ItemName").val();
                item.ItemID = $("#ItemID").val();
                item.Qty = $("#ReceiveQtyPcs").val();
                item.Rate = $("#Rate").val();
                item.Cost = $("#Cost").val();

                addedItems2.push(item);
                ShowOnTable2();
                ClearOnAddToGrid();
            }

        });
        function ShowOnTable2() {
            table2.clear().draw();
            var totalReceivedQty = 0;
            $.each(addedItems2, function (index, value) {
                table2.row.add([value.GroupName, value.ItemName, value.Qty, value.Rate, value.Cost,
                '<a href="#"><i class="fa fa-trash" name="deleteRow2" value="' +
                    value.ItemID + '"></i></a>']).draw();
                totalReceivedQty += parseFloat(value.Qty);
            });
            $("#TotalReceiveQty").val(totalReceivedQty);

        }
        $(document).on('click', '[name="deleteRow2"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems2, function (index, value) {
                    if (value.ItemID == item) {

                    }
                    else {
                        newItem.push(value);
                    }

                });
                addedItems2 = newItem;
                ShowOnTable2();
            }
        });
        function ValidateAddToGrid() {

            isValid = true;
            if ($("#ReceiveQtyPcs").val() == "") {
                setError("ReceiveQtyPcs", "please Enter Qty");
                isValid = false;
            }
            if (parseFloat($("#AvailableQtyPcs").val()) < parseFloat(($("#ReceiveQtyPcs").val()))) {
                setError("ReceiveQtyPcs", "Receive Quantity must be less then or equal to avalilable qty");
                isValid = false;
            }
            if ($("#AvailablePcs").val() == "") {
                setError("AvailablePcs", "required field");
                isValid = false;
            }
            if ($("#ReceiveQtyPcs").val() <= 0) {
                setError("ReceiveQtyPcs", "Qty must be grater than Zero");
                isValid = false;
            }

            if ($("#ItemID").val() == "") {
                setError("ItemName", "Item is required field");
                isValid = false;
            }

            $.each(addedItems2, function (index, value) {
                if (value.ItemID == $("#ItemID").val()) {
                    setError("ItemID", "This Item is Already Added.");
                    isValid = false;
                }
            });
        }
        function ClearOnAddToGrid() {
            $("#ItemGroup").val("");
            $("#ItemName").val("");
            $("#PcsPerCtn").val("");
            $("#IssuedQtyPcs").val("");

            $("#IssuedQtyCtn").val("");

            $("#ReceivedQtyCtn").val("");
            $("#ReceivedQtyPcs").val("");
            $("#AvailableQtyCtn").val("");
            $("#AvailableQtyPcs").val("");
            $("#ReceiveQtyCtn").val("");
            $("#ReceiveQtyPcs").val("");
            $("#ItemID").val("");
            $("#GroupID").val("");
            $("#Rate").val("");
            $("#Cost").val("");
        }
        $("#ReceiveQtyCtn").on('keyup', function () {
            if ($(this).val() != "" && $(this).val() != 0) {
                var ctncapacity = $("#PcsPerCtn").val();
                $("#ReceiveQtyPcs").val(parseFloat(ctncapacity) * parseFloat($(this).val()));
            } else {
                $("#ReceiveQtyPcs").val("");
            }
        });
        $("#ReceiveQtyPcs").on('keyup', function () {
            if ($(this).val() != "" && $(this).val() != 0) {
                var ctncapacity = $("#PcsPerCtn").val();
                $("#ReceiveQtyCtn").val((parseFloat($(this).val()) / parseFloat(ctncapacity)).toFixed(2));
            } else {
                $("#ReceiveQtyCtn").val("");
            }
        });
        $("#save").on("click", function () {
            ValidateSaveUpdate();
            if (addedItems2.length == 0) {
                alert("At least one item should be added");
            } else {
                if (isValid == true) {
                    setFGRN();
                     if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveFGRN", "FGRNEntry")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ FGRN: FGRN, addedItems: addedItems2 }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").show();
                                } else if (datas == 3) {
                                    alert("Please select a valid entry date");
                                    $("#ReceiveDate").focus();
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#GRFNo").val(datas);
                                    $("#print").show();
                                    $("#update").show();
                                    $("#save").hide();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").show();
                    }

                }
            }

        });

         $(document).on('click', '#search', function () {
           // isSearch = true;
            var id = { id: $("#GRFNo").val() };
            //ClearOnSearch();
             if ($("#GRFNo").val() != "") {
                $.ajax({
                    url: '@Url.Action("GetFGRNByID", "FGRNEntry")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas == 0) {
                            alert("Please Enter a Valid FGRN No.");
                        } else if (datas==2) {
                            alert("FGRN No Not Found.")
                        }
                        else {
                            storeid = datas.data.ReceiveStoreID;
                            $("#save").hide();
                            $("#delete").show();
                            $("#update").show();
                         
                            $("#DepotID").val(datas.data.DepotID).change();
                            $("#ReceiveStoreID").val(datas.data.ReceiveStoreID).change();
                            //$("#ReceiveDate").val(datas.data.ReceiveDate);
                            $("#ReceiveDate").val((moment(datas.data.ReceiveDate).format("DD-MM-YYYY")));
                            $("#ChallanNo").val(datas.data.ChallanNo);
                            $("#ChallanDate").val((moment(datas.data.ChallanDate).format("DD-MM-YYYY")));
                          
                            addedItems2 = [];
                            $.each(datas.line, function (index, value) {

                                var item = { GroupID: 0, GroupName: "", ItemID: 0, ItemName: "", Qty: 0, Rate: 0, Cost: 0, CartonCapacity: 0 };
                                item.GroupID = value.GroupID;
                                item.GroupName = value.GroupName;
                                item.ItemName = value.ItemName;
                                item.ItemID = value.ItemID;
                                item.Qty = value.Qty;
                                item.Rate = value.Rate;
                                item.Cost = value.Cost;
                                addedItems2.push(item);
                            });
                            ShowOnTable2();
                        
                            $("#go").click();
                            $("#print").show();
                           // $("#CustBal").prop('disabled', true);
                           // $("#Store").prop('disabled', true);



                        }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services");
                    }
                });
            }
            else {
                setError("SIFDNo", "SIID No is Required for get data.");
            }
        });
        function ValidateSaveUpdate() {
            isValid = true;
            if ($("#DepotID").val() == "") {
                setError("DepotID", "please select depot");
                isValid = false;
            }
            if ($("#ReceiveStoreID").val() == "") {
                setError("ReceiveStoreID", "please select Received Store");
                isValid = false;
            }
            if ($("#ChallanNo").val() == "") {
                setError("ChallanNo", "please enter Challan No");
                isValid = false;
            }
            if ($("#SIFDNo").val() == "") {
                setError("SIFDNo", "SIFD No is Required");
                isValid = false;
            }
            if ($("#OldStoreID").val() == "") {
                setError("OldStoreID", "Please select Shift from");
                isValid = false;
            }

        }
          $("#update").on("click", function () {
            ValidateSaveUpdate();
            if (addedItems2.length == 0) {
                alert("At least one item should be added");
            } else {
                if (isValid == true) {
                    setFGRN();
                     if (confirm('Do you want to update')) {
                        $.ajax({
                            url: '@Url.Action("UpdateFGRN", "FGRNEntry")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ FGRN: FGRN, addedItems: addedItems2 }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Update.");
                                    $("#update").show();
                                }
                                else {
                                    alert("Sucessfully updated.");
                                    $("#GRFNo").val(datas);
                                    $("#print").show();
                                    $("#update").hide();
                                }
                            }
                        });
                    }
                    else {
                        $("#update").show();
                    }

                }
            }

        });


                     $(document).on('click', '#delete', function () {
           // $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
                         var id = $("#GRFNo").val();
                         if ($("#GRFNo").val() != "") {
                if (confirm('Are you sure you want to delete this from the database?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteFGRNByid", "FGRNEntry")',
                        contentType: "application/json;charset=utf-8",
                        data: { id: id },
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Delete failed.");
                                $("#delete").prop('disabled', false);
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Successfully Deleted");
                                window.location.reload(true);
                            }
                        }
                    });
                }
                else {
                   // $("#update").prop('disabled', false);
                    $("#delete").prop('disabled', false);
                }
            }
            else {
                //$("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });
    </script>

}