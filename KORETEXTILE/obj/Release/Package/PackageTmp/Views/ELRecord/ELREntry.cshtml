@model BEEERP.Models.ViewModel.Payroll.EmployeeLeaveRecordVModel

@{
    ViewBag.Title = "ELREntry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }


    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<h3 style="text-align:center">Employee Leave Record (ELR) Entry</h3>

<div class="content">
    <div class="row">
        <div class="form-horizontal">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                <h6 class="box-title">Employee Details</h6>
                            </div>
                            <div class="box-body">
                                <div class="col-md-4">
                                    <div class="from-group" style="padding-bottom: 14px;">
                                        @*@Html.LabelFor(m => m.ELRNo, new { @class = "col-md-4 control-label", @data-toggle = "tooltip", @data-placement = "top", @title ="Tooltip on top" })*@
                                        <label class="col-md-4 control-label" data-toggle="tooltip" data-placement="bottom" title="Employee Leave Record">ELR No</label>
                                        <div class="input-group input-group-sm col-md-8" style="padding-right:19px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.ELRNo, new { @class = "form-control" })
                                            <span class="input-group-btn">
                                                <button type="button" class="btn skin-blue btn-flat" id="search" style="min-width: 50px">Search</button>
                                            </span>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.ValidationMessageFor(m => m.ELRNo, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group" style="padding-bottom: 14px;">
                                        @Html.LabelFor(m => m.Name, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Name, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group" style="padding-bottom: 14px;">
                                        @Html.LabelFor(m => m.FD, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px;">
                                            @Html.TextBoxFor(m => m.FD, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.FD, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group">
                                        @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px;">
                                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="from-group" style="padding-bottom: 14px;">
                                        @Html.LabelFor(m => m.EmployeeID, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group-sm col-md-8" style="padding-left:20px; padding-right:34px" ">
                                            @Html.TextBoxFor(m => m.EmployeeID, new { @class = "form-control" })
                                            <span class="input-group-btn">
                                                <button type="button" class="btn skin-blue btn-flat" id="go" style="min-width: 20px">Go</button>
                                            </span>
                                        </div>
                                        <div class="col-md-4">

                                        </div>
                                        <div class="col-md-8" style="padding-right: 5px;">
                                            @Html.ValidationMessageFor(m => m.EmployeeID, "", new { @style = "color: red" })
                                        </div>

                                    </div>
                                    <div class="from-group" style="padding-bottom: 14px;">
                                        @Html.LabelFor(m => m.Designation, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-left:20px; padding-right:34px">
                                            @Html.TextBoxFor(m => m.Designation, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Designation, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group" style="padding-bottom: 14px;">
                                        @Html.LabelFor(m => m.WorkStation, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-left:20px; padding-right:34px">
                                            @Html.TextBoxFor(m => m.WorkStation, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.WorkStation, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group">
                                        @Html.LabelFor(m => m.RefNo,"Reference No", new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-right:34px;padding-left:19px; margin-bottom: 15px;">
                                            @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Date, new { @class = "col-md-4 control-label" })
                                        <div class="date input-group col-md-8" style="padding-left:20px; padding-right:34px">
                                            @Html.TextBoxFor(m => m.Date, new { @class = "form-control datePic", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.JoinDate, new { @class = "col-md-4 control-label" })
                                        <div class="date input-group col-md-8" style="padding-left:20px; padding-right:34px">
                                            @Html.TextBoxFor(m => m.JoinDate, new { @class = "form-control datePic", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.JoinDate, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group">
                                        @Html.LabelFor(m => m.Department, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px; padding-bottom:10px;">
                                            @Html.TextBoxFor(m => m.Department, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Department, "", new { @style = "color: red" })
                                        </div>
                                    </div>
                                    <div class="from-group">
                                        @Html.LabelFor(m => m.TotalLeaveDays, new { @class = "col-md-4 control-label" })
                                        <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px; margin-bottom: 15px;">
                                            @Html.TextBoxFor(m => m.TotalLeaveDays, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.TotalLeaveDays, "", new { @style = "color: red" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                <h6 class="box-title">Leave Information</h6>
                            </div>
                            <div class="box-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LeaveTypeID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 " style="padding-right: 34px; padding-left: 20px;">
                                                @Html.DropDownListFor(m => m.LeaveTypeID, (IEnumerable<SelectListItem>)ViewBag.type, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.LeaveTypeID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.FromDate, new { @class = "col-md-4 control-label" })
                                            <div class="date input-group col-md-8" style="padding-left:20px; padding-right:34px">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control datePic", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                       
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-8" style="padding-left:20px; padding-right:34px">
                                                @Html.ValidationMessageFor(m => m.FromDate, "", new { @style = "color: red" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ToDate, new { @class = "col-md-4 control-label" })
                                            <div class="date input-group col-md-8" style="padding-left:20px; padding-right:34px">
                                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control datePic", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ToDate, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="from-group" id="LB">
                                            @Html.LabelFor(m => m.LeaveBalance, new { @class = "col-md-4 control-label" })
                                            <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px; margin-bottom: 15px;">
                                                @Html.TextBoxFor(m => m.LeaveBalance, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.LeaveBalance, "", new { @style = "color: red" })
                                            </div>
                                        </div>


                                        <div class="from-group">
                                            @Html.LabelFor(m => m.LeaveDays, new { @class = "col-md-4 control-label" })
                                            <div class="input-group input-group col-md-8" style="padding-right:19px;padding-left:14px; margin-bottom: 15px;">
                                                @Html.TextBoxFor(m => m.LeaveDays, new { @class = "form-control digit"@*, @type = "number"*@})
                                                @Html.ValidationMessageFor(m => m.LeaveDays, "", new { @style = "color: red" })
                                            </div>
                                        </div>



                                    </div>
                                    <div class="col-md-6 col-md-offset-6">
                                        <div class="from-group">
                                            <button type="button" class="btn skin-blue" id="addToGrid">Add To Grid</button>
                                        </div>
                                    </div>
                                
                                </div>
                            </div>
                        </div>
                    </div>

                    @*<div class="col-md-6">
            <div class="from-group">
                @Html.LabelFor(m => m.AlDays, new { @class = "col-md-4 control-label" })
                <div class="input-group input-group col-md-8" style="padding-right:20px;padding-left:15px; margin-bottom: 20px;">
                    @Html.TextBoxFor(m => m.AlDays, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AlDays, "", new { @style = "color: red" })
                </div>
            </div>
        </div>*@
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-header with-border box-head-back">
                                <h6 class="box-title">Leave List</h6>
                            </div>
                            <div class="box-body">
                                <table class="table table-responsive" id="LeaveTable">
                                    <thead>
                                        <tr>
                                            <th>Leave Type </th>
                                            <th>From Date</th>
                                            <th>To Date</th>
                                            <th>Leave Days</th>
                                            <th id="action">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>

                            </div>
                        </div>
                     </div>

                              <div class="col-md-12">
                                    <div class="box">
                                        <div class="box-body">
                                            <div>
                                                <div class="col-sm-5 col-sm-offset-5 ">
                                                    <input type="button" name="save" id="save" value="Save" class="btn skin-blue"  />
                                                    <input type="button" name="update" id="update" value="Update" class="btn skin-blue" />
                                                    <input type="button" name="delete" id="delete" value="Delete" class="btn skin-blue" />
                                                    <input type="button" name="Refresh" id="refresh" value="Refresh" class="btn skin-blue"  />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
</div>

@section scripts{
<script src="~/Scripts/Common.js"></script>  
<script>
    
    $(document).ready(function () {
        var addItem = [];
        var addedItems = [];
        var isSearch = false;
        $("#JoinDate").prop('disabled', true);
        $("#Name").prop('disabled', true);
        $("#Designation").prop('disabled', true);
        $("#FD").prop('disabled', true);
        $("#WorkStation").prop('disabled', true);
        $("#Department").prop('disabled', true);
        $("#LeaveDays").prop('disabled', true);
        $("#LeaveBalance").prop('disabled', true);
        $("#TotalLeaveDays").prop('disabled', true);
       // $("#delete").prop('disabled', true);
        
        $("#LB").prop('disabled', true);
        $("#LB").hide();
        var table = $('#LeaveTable').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });
        $('.datePic').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });
        $('.select2').select2();
        $("#update").hide();
        $("#delete").hide();
        var isValid = true;
        var days = 0;
        
        $(document).on("keydown", function (e) {
            if (e.altKey && e.keyCode === 83) {
                e.preventDefault();
                $("#save").click();
                return false;
            }
        });

        $(document).on("keydown", function (e) {
            if (e.altKey && e.keyCode === 82) {
                e.preventDefault();
                $("#refresh").click();
                return false;
            }
        });

        $(document).on("keydown", function (e) {
            if (e.altKey && e.keyCode === 85) {
                e.preventDefault();
                $("#update").click();
                return false;
            }
        });
        $(document).on("keydown", "#ELRNo", function (e) {
            if (e.keyCode === 13 || e.keyCode === 9) {
                e.preventDefault();
                $("#search").click();
            }
        });
        $(document).on("keydown", "#EmployeeID", function (e) {
            if (e.keyCode === 13 || e.keyCode === 9) {
                e.preventDefault();
                $("#go").click();
            }
        });

        var ELR = { ELRNo: 0, EmployeeID: 0, ELRDate: "", FromDate: "", ToDate: "", LeaveDays: 0, LeaveTypeID: 0, RefNo: "", Descriptions: "", LeaveBalance: 0, TotalLeaveDays:0 }
        $(document).on("click", "#save", function () {  
            RemoveError();
            SetELR();
            ValidateELR();
            if (isValid == true) {
                if (confirm('Do you Want to Save the data')) {
            $.ajax({
                url: '@Url.Action("SaveElRecord","ELRecord")',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify({ ELR: ELR, addedItems: addedItems }),
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    if (data.Message == "0") {
                        alert("Critical Error! Please try Again. \n If retry doesn't solve your problem, then Contact With Paankouri Software & Services");
                        $("#save").prop('disabled', false);
                    }
                    else if (data.Message == "1") {
                        alert("Sccessfully saved.");
                        $("#ELRNo").val(data.Id);
                        if (data.message != "") {
                            alert(data.message);
                        }
                        $("#search").click();
                        $("#save").hide();
                        $("#update").show();
                    } else if (data.Message == "3") {
                        if (data.message != "") {
                            alert(data.message);
                            $("#save").prop('disabled', false);
                        }
                    }
                    else {
                        alert("Leave is already taken from this day");
                        $("#save").prop('disabled', false);
                    }
                }


            });
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
            else {
                $("#save").prop('disabled', false);
            }
            

        });

        //forNumberTextbox
        $(".digit").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errormsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

    $(document).on("change", "#LeaveTypeID", function () {
            var Leaveid = $(this).val();
            var EmpId = $("#EmployeeID").val();
            var fDate = $("#FromDate").val();
            ChangeLB(Leaveid, EmpId, fDate, isSearch);

        });
    function ChangeLB(Leaveid, EmpId, fDate, isSearch) {
           if (EmpId == "") {
               setError("LeaveTypeID", "Please Enter an Employee ID first");
               
            }
            else {
               setError("LeaveTypeID", "");
            }
            if (Leaveid == "") {
                $("#LeaveBalance").val("");
                $("#LB").hide();
            } else
            {
                   $.ajax({
                    url: '@Url.Action("GetLeaveBalance","ELRecord")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: Leaveid, empId: EmpId, fDate: fDate, IsUpdate: isSearch },
                    type: 'GET',
                    dataType: 'json',
                       success: function (data) {
                           if (data.Message == "0") {
                               alert(data.msg);
                           } else if (data.Message == "1") {
                               $("#LB").show();
                               $("#LeaveBalance").val(data.LeaveBalance);
                           } else {

                           }
                    
                    }

                   });
            }
        }
        function CheckHoliday(FromDate, ToDate) {
            var holiday = 0;
            $.ajax({
                url: '@Url.Action("CheckHoliday","ELRecord")',
                contentType: "application/json;charset=utf-8",
                data: { FromDate: FromDate, ToDate: ToDate },
                type: 'GET',
                dataType: 'json',
                success: function (data) {

                    SetELR();
                    var to = ELR.ToDate.split("-");
                    var t = new Date(to[2], to[1] - 1, to[0])
                    var from = ELR.FromDate.split("-")
                    var f = new Date(from[2], from[1] - 1, from[0])
                    var days = (t - f) / 1000 / 60 / 60 / 24;
                    var leaveDays = days + 1;
                    $("#LeaveDays").val(leaveDays - data);
                    if (days > 0) {
                        setError("LeaveDays", "");
                    }
                    if (ELR.LeaveDays <= ELR.LeaveBalance) {
                        setError("LeaveDays", "");
                    }
                    var Leaveid = $("#LeaveTypeID").val();
                    var EmpId = $("#EmployeeID").val();
                    var fDate = $("#FromDate").val();
                    ChangeLB(Leaveid, EmpId, fDate, isSearch);
                    
                }
            });
            
        }


        function ClearOnSearch() {
            $("#LeaveTypeID").val("").change();
            //$("#FromDate").val("");
            //$("#ToDate").val("");
            $("#LeaveDays").val("");
        }

        function ShowOnTable() {
            table.clear().draw();
            var TotalLeave = 0;
            $.each(addedItems, function (index, value) {
                
                    table.row.add([value.LeaveTypeName, value.FromDate, value.ToDate, value.LeaveDays,
                    '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                    value.LeaveTypeID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.LeaveTypeID + '"></i></a>']).draw();
                    TotalLeave += parseFloat(value.LeaveDays);
                
            });
            $("#TotalLeaveDays").val(TotalLeave);
          
        }

        //delete Row
        $(document).on('click', '[name="deleteRow"]', function () {
            RemoveError();
            var item = $(this).attr("value");
            var newItem = [];
            var acc = "";
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems, function (index, value) {
                    if (value.LeaveTypeID == item) {

                    }
                    else {
                        newItem.push(value);
                    }
                    
                });
                addedItems = newItem;
                ShowOnTable();
            }
        });


        //edit Row
        $(document).on('click', '[name="editRow"]', function () {
            RemoveError();
            var item = $(this).attr("value");
            var newItem = [];
            
            $.each(addedItems, function (index, value) {
                if (value.LeaveTypeID == item) {
                    //subLId = value.SubLedgerID;
                    $("#LeaveTypeID").val(value.LeaveTypeID).change();
                    $("#FromDate").val(value.FromDate).change();
                    $("#ToDate").val(value.ToDate).change();
                    $("#LeaveDays").val(value.LeaveDays)
                }
                else {
                    newItem.push(value);
                }
                
            });
            addedItems = newItem;
            ShowOnTable();
        });
 
        $(document).on('click', "#addToGrid", function () {
            RemoveError();
            var item = { LeaveTypeID: 0,LeaveTypeName:"", FromDate: "", ToDate: "", LeaveDays: 0 };
            ValidateAddToGrid();
            if (isValid == true) {
                item.LeaveTypeID = $("#LeaveTypeID").val();
                item.FromDate = $("#FromDate").val();
                item.ToDate = $("#ToDate").val();
                item.LeaveDays = $("#LeaveDays").val();
                item.LeaveTypeName = $("#LeaveTypeID :selected").text();
                addedItems.push(item);
                ClearOnSearch();
                ShowOnTable();
            }

        });

        function ValidateAddToGrid() {
            isValid = true;
            if ($("#LeaveTypeID").val() == "") {
                setError("LeaveTypeID", "LeaveType is required field");
                isValid = false;
            }
            if ($("#LeaveDays").val() == "" || $("#LeaveDays").val() < 1) {
                setError("LeaveDays", "LeaveDays should not be empty or less then 1.");
                isValid = false;
            }
            if (parseFloat($("#LeaveDays").val()) > parseFloat($("#LeaveBalance").val())) {
                setError("LeaveDays", "Leave days must be less than or equal Leave Balance");
                isValid = false;
            }
            if (parseFloat($("#LeaveDays").val()) < 0) {
                setError("LeaveDays", "Leave Days is must be positive number");
                isValid = false;
            }
            if (parseFloat($("#LeaveDays").val()) == 0) {
                setError("LeaveDays", "Leave Days is must be Greater than 0");
                isValid = false;
            }
            //if (parseFloat($("#LeaveTypeID").val()) == 1 && parseFloat($("#LeaveDays").val()) > 2) {
            //    setError("LeaveTypeID", "You are not allow to take casual leave more than two days");
            //    isValid = false;
            //}
            $.each(addedItems, function (index, value) {
                if (value.LeaveTypeID == $("#LeaveTypeID").val() ) {
                    setError("LeaveTypeID", "This Leave Type is Already Added.");
                    isValid = false;
                }
            });
            $.each(addedItems, function (index, value) {
                if ($("#FromDate").val() >= value.FromDate && $("#FromDate").val() <= value.ToDate) {
                    setError("FromDate", "This day is Already Added in List.");
                    isValid = false;
                }
            });
        }
        $(document).on("change", "#FromDate", function () {
            SetELR();
             CheckHoliday(ELR.FromDate, ELR.ToDate);
           
        });
        $(document).on("change", "#ToDate", function () {
             SetELR();
             CheckHoliday(ELR.FromDate, ELR.ToDate);
        });
        $("#EmployeeID").focusout(function () {
            if ($(this).val() != "") {
                setError("LeaveTypeID", "");
            }
        });
        
        $(document).on("click", "#search", function () {
            isSearch = true;
            var id = $("#ELRNo").val();
            $.ajax({
                url: '@Url.Action("GetDataByELRNo", "ELRecord")',
                contentType: "application/json;charset=utf-8",
                data: { id: id },
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (data == 0) {
                        alert("No Data found, Please Enter a Valid ELR Number");
                    } else {
                        SetELR();
                        $("#EmployeeID").val(data.data.EmployeeID);
                        $("#Date").val((moment(data.data.ELRDate).format("DD-MM-YYYY"))).change();
                        $("#RefNo").val(data.data.RefNo);
                        $("#Description").val(data.data.Descriptions);
                        $("#TotalLeaveDays").val(data.data.TotalLeaveDays);
                        $("#RefNo").val(data.data.RefNo);
                        addedItems = [];
                        $.each(data.LineItem, function (index, value) {
                            var item = { LeaveTypeID: 0, LeaveTypeName: "", FromDate: "", ToDate: "", LeaveDays: 0 };
                            item.LeaveTypeID = value.LeaveTypeId;
                            item.FromDate = moment(value.FromDate).format("DD-MM-YYYY");
                            item.ToDate = moment(value.ToDate).format("DD-MM-YYYY");
                            item.LeaveDays = value.LeaveDays;
                            item.LeaveTypeName = value.LeaveTypeName;
                            addedItems.push(item);
                            ClearOnSearch();
                            ShowOnTable();
                        });

                        $("#update").show();
                        $("#delete").show();
                        $("#save").hide();

                        $("#go").click();
                    }
                   
                }
            });
        });

    $(document).on('click', '#update', function () {
            RemoveError();
            $("#update").prop('disabled', true);
            SetELR();
            ELR.ELRNo = $("#ELRNo").val();

        ValidateELR();
        if (isValid == true) {
                if (confirm('Do you want to Update')) {
                   
                    $.ajax({
                        url: '@Url.Action("UpdateELR", "ELRecord")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ ELR: ELR, addedItems: addedItems }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Failed To Update.");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#update").prop('disabled', true);
                            }
                        }
                    });
                }
                    else {
                        $("#update").prop('disabled', false);
                    }
                }
                else {
                    $("#update").prop('disabled', false);
                }       

        });

        $(document).on("click", "#go", function () {
            var id = $("#EmployeeID").val();
            $.ajax({
                url: '@Url.Action("GetDataByEmployeeID","ELRecord")',
                contentType: "application/json;charset=utf-8",
                data: { id: id },
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (data == 0) {
                        alert("No data Found")
                    } else {
                        $("#Name").val(data.Name);
                        $("#Designation").val(data.DesignationName);
                        $("#FD").val(data.FD);
                        $("#WorkStation").val(data.WorkStation);
                        $("#Department").val(data.Department);
                        $("#JoinDate").val((moment(data.JoiningDate).format("DD-MM-YYYY"))).change();

                    }

                }
            });

        });

        $(document).on("click", "#refresh", function () {

            window.location.reload(true);

        });

        $(document).on('click', '#delete', function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#ELRNo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteELEntryByid", "ELRecord")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#update").prop('disabled', false);
                            $("#delete").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });

        function SetELR() {

            ELR.ELRNo = $("#ELRNo").val();
            ELR.EmployeeID = $("#EmployeeID").val();
            ELR.ELRDate = $("#Date").val();
            ELR.FromDate = $("#FromDate").val();
            ELR.ToDate = $("#ToDate").val();
            ELR.LeaveDays = $("#LeaveDays").val();
            ELR.LeaveTypeID = $("#LeaveTypeID").val();
            ELR.RefNo = $("#RefNo").val();
            ELR.Descriptions = $("#Description").val();
            ELR.LeaveBalance = $("#LeaveBalance").val();
            ELR.TotalLeaveDays = $("#TotalLeaveDays").val();
        }
     
        function ValidateELR() {
            isValid = true;
            if (ELR.EmployeeID == "") {
                
                setError("EmployeeID", "Employee ID is required field");
                isValid = false;
            }
            if (addedItems.length < 1) {
                alert("Your leave List is empty");
            }
            //if (ELR.FromDate == "") {
            //    setError("FromDate", "From Date is required field");
            //    isValid = false;
            //}
            //if (ELR.ToDate == "") {
            //    setError("ToDate", "TO Date is required field");
            //    isValid = false;
            //}
            //if (ELR.LeaveTypeID == "") {
            //    setError("LeaveTypeID", "LeaveType is required field");
            //    isValid = false;
            //}
            //if (parseFloat(ELR.LeaveDays) > parseFloat(ELR.LeaveBalance) ) {
            //    setError("LeaveDays", "Leave days must be less than or equal Leave Balance");
            //    isValid = false;
            //}

            //if (parseFloat(ELR.LeaveDays) < 0) {
            //    setError("LeaveDays", "Leave Days is must be positive number");
            //    isValid = false;
            //}
            //if (parseFloat(ELR.LeaveDays) == 0) {
            //    setError("LeaveDays", "Leave Days is must be Greater than 0");
            //    isValid = false;
            //}
        }
       
    });

</script>   
    
    }

