@model BEEERP.Models.ViewModel.TaxCalculator.TaxCalculatorViewModel
@{
    ViewBag.Title = "UpdateForecast";
}
<style>
    /*tbody tr:hover {
        background-color: dodgerblue;
        color: white;
    }*/

    .btn:hover {
        color: blue !important;
    }

    .btn:focus {
        background-color: aqua !important;
    }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<form id="report" target="_blank" method="post">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back">
                                    <h3 class="box-title">Forecast Statement</h3>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-3"></div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmployeeId, "Employee ID", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control", @type="number" })
                                                @Html.ValidationMessageFor(m => m.EmployeeId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-4"></div>
                                            <div class="col-sm-8">
                                                <input type="button" name="search" id="search" value="Generate Info" class="btn skin-blue" />
                                                <input type="button" name="update" id="update" value="Update" class="btn skin-blue" />
                                                <input type="button" name="Refresh" id="refresh" value="Refresh" class="btn skin-blue" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" id="existingForcast">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back">
                                    <h3 class="box-title">Existing Forecast Statement</h3>
                                </div>
                                <div class="box-body">
                                    <table class="table table-responsive" id="EmpList">
                                        <thead>
                                            <tr>
                                                <th>Employee No</th>
                                                <th>Employee Name</th>
                                                <th>Designation</th>
                                                <th>Financial Year</th>
                                                <th>Type</th>
                                                <th>Monthly Ait Amount (Tk.)</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back">
                                    <h3 class="box-title">Updated Forecast Statement</h3>
                                </div>
                                <div class="box-body">
                                    <table class="table table-responsive" id="EmpList2">
                                        <thead>
                                            <tr>
                                                <th>Employee No</th>
                                                <th>Employee Name</th>
                                                <th>Designation</th>
                                                <th>Financial Year</th>
                                                <th>Type</th>
                                                <th>Monthly Ait Amount (Tk.)</th>
                                                <th id="details">Details</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="empId" name="empId" />
    <input type="hidden" id="assesmentYear" name="assesmentYear" />
    <input type="hidden" id="type" name="type" />
</form>

@section scripts
{

    <script>

        var table = $('#EmpList').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': false,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });

        var table2 = $('#EmpList2').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': false,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });

        $(document).on('click', "#refresh", function () {
            location.reload();
        });

        $(document).ready(function () {
            $("#update").hide();
        });

        var addedItems = { EmployeeId: 0, EmployeeName: "", EmployeeDesignation: "", WIth_Without: "", MonthlyAIT: 0.0, FinancialYear: ""};
        var addedItems1 = { EmployeeId: 0, EmployeeName: "", EmployeeDesignation: "", WIth_Without: "", MonthlyAIT: 0.0, FinancialYear: "" };

        $(document).on('click', "#search", function () {
            RemoveError();
            var id = { id: $("#EmployeeId").val() };
            if (id.id != "") {
                $.ajax({
                    url: '@Url.Action("GetExistingForcast", "ForecastCalculator")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas.iETC == null) {
                            alert("Your Entered Employee ID Doesn't Exist");
                            $("#search").prop('disabled', false);
                            location.reload();
                        }
                        else {
                            //addedItems = {};

                            //var item = { EmployeeId: 0, EmployeeName: "", EmployeeDesignation: "", WIth_Without: "", MonthlyAIT: 0.0, FinancialYear: "" };
                            addedItems.EmployeeId = datas.iETC.EmployeeId;
                            addedItems.EmployeeName = datas.iETC.EmployeeName;
                            addedItems.EmployeeDesignation = datas.iETC.EmployeeDesignation;
                            addedItems.MonthlyAIT = datas.iETC.MonthlyAIT;
                            addedItems.WIth_Without = datas.iETC.WIth_Without;
                            addedItems.FinancialYear = datas.iETC.FinancialYear;
                            //addedItems.push(item);

                            ShowOnTable();

                            //addedItems1 = [];

                            //var item1 = { EmployeeId: 0, EmployeeName: "", EmployeeDesignation: "", WIth_Without: "", MonthlyAIT: 0.0, FinancialYear: "" };
                            addedItems1.EmployeeId = datas.iETC2.EmployeeId;
                            addedItems1.EmployeeName = datas.iETC2.EmployeeName;
                            addedItems1.EmployeeDesignation = datas.iETC2.EmployeeDesignation;
                            addedItems1.MonthlyAIT = parseFloat(datas.iETC2.MonthlyAIT).toFixed(2);
                            addedItems1.WIth_Without = datas.iETC2.WIth_Without;
                            addedItems1.FinancialYear = datas.iETC2.FinancialYear;
                            //addedItems1.push(item1);

                            ShowOnTable1();

                            $("#search").prop('disabled', true);
                            $("#update").show();
                        }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't sole your problem.\n then Contact With Avalanche Technologies Ltd.")
                        $("#search").prop('disabled', false);
                    }
                });
            }
            else {
                setError("EmployeeId", "Employee ID is required To Get Data.");
            }
        });

        $(document).on('click', '[name="editRow"]', function () {
            event.preventDefault();
            var empId = $(this).attr("value");
            if (empId != "") {
                $("#report").attr("action", "/ForecastCalculator/GetEmployeeForcastDetails")
                //$("#empId").val(empId);
                $("#assesmentYear").val(1);
                var $row = $(this).closest('tr');
                var data = table2.row($row).data();

                $("#empId").val(data[0]);
                $("#type").val(data[4]);

                $("#report").submit();
            }
        });

        $(document).on('click', "#update", function () {
            RemoveError();
            $("#update").prop('disabled', true);

            if (confirm('Do you want to Update')) {
                $.ajax({
                    url: '@Url.Action("UpdateForecastLine", "ForecastCalculator")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ addedItems1: addedItems1 }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Failed To Update.");
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Sucessfully Updated.");
                            $("#update").prop('disabled', true);
                        }
                    }
               });
            }
            else {
                $("#update").prop('disabled', false);
            }
        });

        function ShowOnTable() {
            var row = 0;
            table.clear().draw();
            //$.each(addedItems, function (index, value) {
            //    table.row.add([value.EmployeeId, value.EmployeeName, value.EmployeeDesignation, value.FinancialYear, value.WIth_Without, value.MonthlyAIT ]).draw();
            //});
            table.row.add([addedItems.EmployeeId, addedItems.EmployeeName, addedItems.EmployeeDesignation, addedItems.FinancialYear, addedItems.WIth_Without, addedItems.MonthlyAIT]).draw();
        }

        function ShowOnTable1() {
            var row = 0;
            table2.clear().draw();
            //$.each(addedItems1, function (index, value) {
            //    table2.row.add([value.EmployeeId, value.EmployeeName, value.EmployeeDesignation, value.FinancialYear, value.WIth_Without, parseFloat(value.MonthlyAIT).toFixed(2), '<a href="#"><i class="fa fa-caret-square-o-right" name="editRow" value="' +
            //        value.EmployeeId + '"></i></a>']).draw();
            //});
            table2.row.add([addedItems1.EmployeeId, addedItems1.EmployeeName, addedItems1.EmployeeDesignation, addedItems1.FinancialYear, addedItems1.WIth_Without, addedItems1.MonthlyAIT, '<a href="#"><i class="fa fa-caret-square-o-right" name="editRow" value="' +
                addedItems1.EmployeeId + '"></i></a>']).draw();
        }


    </script>
}


