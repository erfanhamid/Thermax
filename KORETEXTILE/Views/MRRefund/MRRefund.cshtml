@model BEEERP.Models.ViewModel.Account.MoneyRequisitionRefundVModel
@{
    ViewBag.Title = "MRRefund";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }
    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 class="col-md-12" style="text-align:center">Money Requisition Refund (MRR) Entry</h3>
<form id="report" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA;">
                                    <h4 class="box-title">MRR Details</h4>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.MRRNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px;">
                                                @Html.TextBoxFor(m => m.MRRNo, new { @class = "form-control", @type = "number", @Value = ViewBag.MRRNo })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn btn-primary" style="min-width: 50px" />
                                                </div>
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-8">
                                                @Html.ValidationMessageFor(m => m.MRRNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmpID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px;">
                                                @Html.TextBoxFor(m => m.EmpID, new { @class = "form-control", @type = "number" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="go" id="go" value="Go" class="btn btn-primary" style="min-width: 20px" />
                                                </div>
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-8">
                                                @Html.ValidationMessageFor(m => m.EmpID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmployeeName, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.EmployeeName, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Designation, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Designation, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.Designation, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <br />
                                            <br />
                                            <br />
                                            <br />
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Balance, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Balance, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.Balance, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="box">
                                <div class="box-body">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AccountId, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.AccountId, (IEnumerable<SelectListItem>)ViewBag.PaymentAc, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.AccountId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Amount, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @type = "number" })
                                                @Html.ValidationMessageFor(m => m.Amount, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.RefNo, "Reference No", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4"></div>
                                </div>
                            </div>
                            <div class="box">
                                <div class="box-footer">
                                    <div class="form-group" , style="text-align:center">
                                        <input type="button" id="save" value="Save" class="btn btn-primary" />
                                        <input type="button" id="approve" value="Approve" class="btn btn-primary" />
                                        <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                        <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                        <input type="button" name="print" id="print" value="Print" class="btn btn-primary" />
                                        <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts{


    <script src="~/Scripts/AccountModule/MRRInputFocus.js"></script>
    <script>

        var isValid = true;
        var addedItems = [];
        var mrr = { MRRNo: 0, EmpID: 0, Date: "", AccountId: 0, Amount: 0, RefNo: "", Description: "" };

        $(".select2").select2();

        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });

        EnterPress();

        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $("#EmpID").focus();
            $("#approve").hide();
            $("#print").hide();

            if ($("#MRRNo").val() != "") {
                if (@ViewBag.IsNotify== 1) {
                    SearchClick();
                }
                //condition
                //$("#approve").show();
            }
        });

        $(document).on('click', "#refresh", function () {
            location.reload();
        });

        //LC Search Code
        $(document).on('click', "#go", function () {
            RemoveError();
            var id = { empId: $("#EmpID").val() };
            if (id.empId != "") {
                $.ajax({
                    url: '@Url.Action("GetEmployeeDetails", "MRRefund")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas != 0) {
                            $("#EmployeeName").val(datas.EmployeeName);
                            $("#Designation").val(datas.Designation);
                            $("#Balance").val(datas.Balance);
                        }
                        else {
                            alert("This Employee Doesn't Exist.");
                        }
                    }
                });
            }
            else {
                setError("EmpID", "EmpID is Required For get Data.");
            }
        });

        //save code
        $(document).on('click', '#save', function () {
            RemoveError();
            $("#save").prop('disabled', true);
            SetMRR();
            ValidateMRR();
            if (isValid == true) {
                if (confirm('Do you want to save?')) {
                    $.ajax({
                        url: '@Url.Action("SaveMRR", "MRRefund")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ mrr: mrr , mRBCalculation: mrr }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Failed To Saved.");
                                $("#save").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Saved.");
                                $("#MRRNo").val(datas.MRRNo);
                                $("#save").prop('disabled', true);
                                $("#print").show();
                            }
                        }
                    });
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
            else {
                $("#save").prop('disabled', false);
            }
        });

        //search code
        $(document).on('click', '#search', function () {
            //$("#search").prop('disabled', true);
            SearchClick();

        });

        function SearchClick() {
            var id = { id: $("#MRRNo").val() };
            if ($("#MRRNo").val() != "") {
                $.ajax({
                    url: '@Url.Action("GetMRRyId", "MRRefund")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas == 0) {
                            alert("Your entered MRR No. Doesn't exist");
                            //$("#search").prop('disabled', false);
                        }
                        else {
                            if (@ViewBag.IsNotify == 1) {
                                if (@ViewBag.Approve== 1) {
                                    //$("#approve").show();
                                    $("#print").show();
                                    $("#save").hide();
                                }
                                else {
                                    $("#approve").show();
                                    $("#print").show();
                                    $("#save").hide();
                                }

                            }
                            else {
                                $("#print").show();
                                $("#update").show();
                                $("#delete").show();
                                $("#save").hide();
                            }
                            //$("#approve").show();
                            $("#save").hide();
                            //$("#update").show();
                            //$("#delete").show();
                            $("#Date").val((moment(datas.Date).format("DD-MM-YYYY")));
                            $("#EmpID").val(datas.EmpID);
                            $("#AccountId").val(datas.AccountId).change();
                            $("#Amount").val(datas.Amount);
                            $("#RefNo").val(datas.RefNo);
                            $("#Description").val(datas.Description);

                            $("#go").click();
                        };
                    },
                    error: function () {
                        alert("MRR No is not valid, Please check.")
                        $("#search").prop('disabled', false);
                    }
                });
            }
            else {
                alert("MRR NO is required for get data.");
            }
        }

        $(document).on('click', "#approve", function () {
            RemoveError();
            $("#approve").prop('disabled', true);
            SetMRR();
            mrr.MRRNo = $("#MRRNo").val();
            ValidateMRR();
            if (isValid == true) {
                if (confirm('Do you want to Approve?')) {
                    $.ajax({
                        url: '@Url.Action("TransectionEffect", "MRRefund")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ mrr: mrr }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Failed To Approve.");
                                $("#approve").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Approve.");
                                $("#approve").prop('disabled', true);
                            }
                        }
                    });
                }
                else {
                    $("#approve").prop('disabled', false);
                }
            }
            else {
                $("#approve").prop('disabled', false);
            }
        });

        //update
        $(document).on('click', '#update', function () {
            RemoveError();
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            SetMRR();
            mrr.MRRNo = $("#MRRNo").val();
            ValidateMRR();
            if (confirm('Do you want to Update?')) {
                if (isValid == true) {
                $.ajax({
                    url: '@Url.Action("UpdateMRR", "MRRefund")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ mrr: mrr, mRBCalculation: mrr }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Failed To Update.");
                            $("#update").prop('disabled', false);
                            $("#delete").prop('disabled', false);
                        }
                        else if (datas.Message == 5) {
                            alert("This Voucher Is already Approve, so Update is not available.");
                            $("#update").prop('disabled', false);
                            $("#delete").prop('disabled', false);
                        }
                        else {
                            alert("Sucessfully Updated.");
                            $("#update").prop('disabled', true);
                            $("#delete").prop('disabled', true);
                        }
                    }
                });
                }
                else {
                    $("#update").prop('disabled', false);
                    $("#delete").prop('disabled', false);
                }
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }

        });

        //delete code
        $(document).on('click', '#delete', function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#MRRNo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteMRRByid", "MRRefund")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#delete").prop('disabled', false);
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });

        $(document).on('click', "#print", function (event) {
            event.preventDefault();
            if ($("#message").val() != "true") {
                $("#report").attr("action", "/MRRefund/PrintReviewMRR")
                $("#report").submit();
            }
        });
        
        
        function SetMRR() {
            mrr.MRRNo = $("#MRRNo").val();
            mrr.EmpID = $("#EmpID").val();
            mrr.Date = $("#Date").val();
            mrr.AccountId = $("#AccountId").val();
            mrr.Amount = $("#Amount").val();
            mrr.RefNo = $("#RefNo").val();
            mrr.Description = $("#Description").val();
        }

        function ValidateMRR() {
            isValid = true;
            if (mrr.EmpID == "") {
                setError("EmpID", "Employee ID is required field.");
                isValid = false;
            }
            if (mrr.Date == "") {
                setError("Date", "Date is required field.");
                isValid = false;
            }
            if (mrr.AccountId == "") {
                setError("AccountId", "Account is required field.");
                isValid = false;
            }
            if (mrr.Amount == "") {
                setError("Amount", "Amount is required field.");
                isValid = false;
            }
            if (mrr.Amount <= 0) {
                setError("Amount", "Amount Must Be Grater Than Zero.");
                isValid = false;
            }
            if (parseFloat(mrr.Amount) > parseFloat($("#Balance").val()))
            {
                setError("Amount", "Amount can not be grater than Balance.");
                isValid = false;
            }
        }

    </script>
}

