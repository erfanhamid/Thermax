@using BEEERP.Models.Authentication
@using BEEERP.Models.CommonInformation
@model BEEERP.Models.ViewModel.Account.LCFCVModel
@{
    ViewBag.Title = "LCPC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn:hover {
        color: blue !important;
    }

    .btn:focus {
        background-color: aqua !important;
    }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }

    .form-group.required .control-label:after {
        content: "*";
        color: red;
    }
</style>
<div class="box">
    <div class="box-header with-border box-head-back" align="center">
        <h2 class="box-title">
            <b>
                LC Partial Costing
            </b>
        </h2>
    </div>
    <div class="box-body">
        <div class="col-sm-9" style="padding-top:2%; border-right:2px solid #5aeff8;border-left:2px solid #5aeff8;border-top:2px solid #5aeff8;border-bottom:2px solid #5aeff8;">
            <div>
                <h4 style="color:red">@ViewBag.messege</h4>
            </div>
            <div class="row">
                <div class="col-sm-12" style="border-bottom:2px solid #5aeff8;padding-bottom:2%">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.LCFCNo, "LCPC No", new { @class = "col-md-4 control-label" })
                                    <div class="input-group input-group-sm col-md-8" style="padding-right:19px;padding-left:14px;">
                                        @Html.TextBoxFor(m => m.LCFCNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.LCFCNo, "", new { @style = "color: red" })
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="search">Search</button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ILCNo, "ILC", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(m => m.ILCNo, (IEnumerable<SelectListItem>)ViewBag.ILCNo, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.ILCNo, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group required">
                                    @Html.LabelFor(m => m.LCFCDate, "LCPC Date", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8 input-group">
                                        @Html.TextBoxFor(m => m.LCFCDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.LCFCDate, "", new { @style = "color: red" })
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.IALCNo, "Alt ILC No", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.IALCNo, new { @class = "form-control", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(m => m.IALCNo, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ILCType, "ILC Type", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ILCType, new { @class = "form-control", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(m => m.ILCType, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12" style="padding-top:2%;border-bottom:1px solid #5aeff8">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-12">
                                    <table class="table table-responsive" id="LCFCItemList">
                                        <thead>
                                            <tr>
                                                <th>Group</th>
                                                <th>Item Id</th>
                                                <th>Item Name</th>
                                                <th>LC Qty</th>
                                                <th>Costed Qty</th>
                                                <th>Available Qty</th>
                                                <th>Unit</th>
                                            </tr>
                                        </thead>
                                        @*<tbody>
                                                    @foreach (var LCFC in ViewBag.LCFC)
                                                    {
                                                        <tr value="@LCFC.LCFC" class="clickable-row">
                                                            <td>@LCFC.Name</td>
                                                            <td>@LCFC.ItemName</td>
                                                            <td>@LCFC.LCQty</td>
                                                            <td>@LCFC.FinalQty</td>
                                                            <td>@LCFC.AvailableQty</td>
                                                            <td>@LCFC.Unit</td>
                                                        </tr>
                                                    }
                                            </tbody>*@
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-3">

            <div class="form-group input-group">
                @Html.LabelFor(m => m.TQtyOfCost, "Total Qty of Costing", new { @class = "col-sm-4 control-label" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.TQtyOfCost, new { @class = "form-control", @type = "number", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.TQtyOfCost, "", new { @style = "color: red" })
                </div>
            </div>
            <div class="form-group input-group">
                @Html.LabelFor(m => m.ILCTCost, "ILC Total Cost", new { @class = "col-sm-4 control-label" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.ILCTCost, new { @class = "form-control", @type = "number", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.ILCTCost, "", new { @style = "color: red" })
                </div>
            </div>
            <div class="form-group input-group">
                @Html.LabelFor(m => m.TCAllow, "Total Cost Allocated", new { @class = "col-sm-4 control-label" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.TCAllow, new { @class = "form-control", @type = "number" })
                    @Html.ValidationMessageFor(m => m.TCAllow, "", new { @style = "color: red" })
                </div>
            </div>
            <div class="form-group input-group">
                @Html.LabelFor(m => m.CToBeAllow, "Cost to be Allocated", new { @class = "col-sm-4 control-label" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.CToBeAllow, new { @class = "form-control", @type = "number", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.CToBeAllow, "", new { @style = "color: red" })
                </div>
            </div>

        </div>
    </div>
    <div class="box-body">
        <div class="col-sm-12" style="padding-top:2%; border-right:2px solid #5aeff8;border-left:2px solid #5aeff8;border-top:2px solid #5aeff8;border-bottom:2px solid #5aeff8;">
            <div class="row">
                <div class="col-sm-12" style="border-bottom:2px solid #5aeff8;padding-bottom:2%">
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ItemID, "ItemID", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ItemID, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.ItemID, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.LCQty, "LC Qty", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.LCQty, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.LCQty, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FinalQty, "Partial Costing Qty", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.FinalQty, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.FinalQty, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ItemName, "Item Name", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ItemName, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.ItemName, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Unit, "Unit", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.Unit, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.Unit, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PrevQty, "Previously Costed Qty", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.PrevQty, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.PrevQty, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ItemGroup, "Item group", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.ItemGroup, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.ItemGroup, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Rate, "Rate", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.Rate, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.Rate, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Value, "Value", new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.Value, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Value, "", new { @style = "color: red" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <div class="form-group" , style="text-align:center">
                            <input type="button" name="addToGrid" id="addToGrid" value="Add To Grid" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-header with-border box-header-back" align="center">
                <h2 class="box-title">
                    <b>
                        LCPC Informations
                    </b>
                </h2>
            </div>
            <div class="row">
                <div class="col-sm-12" style="padding-top:2%">
                    <div class="row">
                        <div class="col-sm-12">
                            <table class="table table-striped" id="SelectedLCFCItemList">
                                <thead>
                                    <tr>
                                        <th>Group</th>
                                        <th>Item Name</th>
                                        <th>LC Qty</th>
                                        <th>Previous Qty</th>
                                        <th>Costing Qty</th>
                                        <th>Unit</th>
                                        <th>Rate</th>
                                        <th>Value</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="box-footer">
        <div class="col-sm-12" style="text-align:center;">
            @if (User.IsInRole("ProcurementOperator"))
            {
                <input type="button" value="Save" id="save" class="btn btn-primary" />
                <input type="button" value="Update" id="update" class="btn btn-primary" disabled />
                <input type="button" name="update" id="delete" value="Delete" class="btn btn-primary" disabled />
                <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                <input type="button" name="print" id="print" value="Print" class="btn btn-primary" />
            }
            else
            {
                <input type="button" value="Save" id="save" class="btn btn-primary" />
                <input type="button" value="Update" id="update" class="btn btn-primary" />
                <input type="button" name="update" id="delete" value="Delete" class="btn btn-primary" />
                <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                <input type="button" name="print" id="print" value="Print" class="btn btn-primary" />
            }
        </div>
    </div>
</div>
<input type="hidden" id="supplierId" />

@section scripts{
    <script src="~/Scripts/Common.js"></script>
    <script>
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });
        $(".select2").select2();
        $(document).on('click', "#refresh", function () {
            location.reload();

        });
        //EnterPress();
        $("#GRNNo").focus();
        $("#update").hide();
        $("#print").hide();
        $("#delete").hide();
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });
        $("#refresh").on("click", function () {
            window.location.reload(true);
        });
        $(document).ready(function () {
            $("#TQtyOfCost").val(parseFloat(0));
            $("#ILCTCost").val(parseFloat(0));
            $("#CToBeAllow").val(parseFloat(0.0));
            $("#TCAllow").val(parseFloat(0.0));

            var addedItem = [];
            var addedItems = [];
            var totalQtyOfCosting = 0;
            var ilcTotalCost = 0;
            var totalCostAllo = 0;
            var costToBeAllo = 0;
            var ilcTotalCost = 0;
            var isValid = "";
            var isSearch = false;

            var lcfc = { LCPCNo: 0, ILCID: 0, LCPCDate: "", TotalCostingQty: 0, IICostingTotal: 0, Type: "" };


            var selectedLCFCItemList = $("#SelectedLCFCItemList").DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': false,
                "scrollX": true
            });
            var lcfcItemList = $("#LCFCItemList").DataTable({
                'paging': false,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': false,
                'autoWidth': false,
                "scrollX": true
            });
          //item change reaction
            $(document).on('change', "#ILCNo", function () {
            var id = { ilcid: $(this).val() };
                if (id.ilcid != "" ) {
                    $.ajax({
                        url: '@Url.Action("GetILC", "LCFC")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#IALCNo").val(datas.ilcNo);
                            $("#ILCType").val(datas.lcType);
                            $("#ILCTCost").val(datas.totcost);
                            var a = $("#ILCTCost").val();
                            var b = $("#TCAllow").val();
                            $("#CToBeAllow").val(a - b);
                            addedItem = [];
                            $.each(datas.lcitems, function (index, value) {
                                var LCIItem = { ItemId: 0, Group: "", ItemName: "", Qty: 0, PrvQt: 0, AvlQt:0, Value: 0, Unit: "" };
                                LCIItem.Group = value.Gr;
                                LCIItem.ItemId = value.ItemId;
                                LCIItem.ItemName = value.NM;
                                LCIItem.Qty = value.QT;
                                LCIItem.PrvQt = value.PrvQt;
                                LCIItem.AvlQt = value.AvlQt;
                                LCIItem.Unit = value.UM;
                                addedItem.push(LCIItem);
                            });

                            lcfcItemList.clear().draw();
                            totalQtyOfCosting = 0;
                            $.each(addedItem, function (index, value) {
                                lcfcItemList.row.add([value.Group, value.ItemId, value.ItemName, value.Qty, value.PrvQt, value.AvlQt, value.Unit,
                                    '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-edit" name="editrow" value="' + value.ItemId + '"></i></a>']).draw();
                                //totalQtyOfCosting += parseFloat(value.Value);
                            });

                            $("#TQtyOfCost").val(totalQtyOfCosting);
                        }
                    });
                }
                //$("#ILCNo").prop('disabled', true);
                $('#LCFCItemList tbody').focus();
            });

            $('#LCFCItemList tbody').on('click', 'tr', function () {
                var tabledata = lcfcItemList.row(this).data();
                var id = tabledata[1];
                $("#ItemGroup").val(tabledata[0]);
                $("#ItemID").val(tabledata[1]);
                $("#ItemName").val(tabledata[2]);
                $("#LCQty").val(tabledata[3]);
                $("#PrevQty").val(tabledata[4]);
                $("#FinalQty").val(tabledata[5]);
                $("#Unit").val(tabledata[6]);

                var a = $("#ILCTCost").val();
                $("#Value").val(a);
                var b = $("#Value").val();
                var c = $("#FinalQty").val();
                var d = (b / c).toFixed(2);
                $("#Rate").val(d);
                $("#Value").focus();
            });

            //unit cost focusout
            $(document).on('focusout', "#Value", function () {
                var a = $("#Value").val() / $("#FinalQty").val();
                var b = a.toFixed(2);
                $("#Rate").val(b);
            });
            //add to grid
            $(document).on('click', "#addToGrid", function () {
               // RemoveError();
                ValidateAddToGrid();
                isValid = true;
                if (isValid == true) {
                    var items = { LCPCNo: 0, Group: "", ItemID: 0, ItemName: "", LCQty: 0, PrvQty: 0, CostingQty: 0, Unit: "", ItemRate: 0, ItemValue: 0, ItemQty: 0 };
                    items.ItemID = $("#ItemID").val();
                    items.Group = $("#ItemGroup").val();
                    items.ItemName = $("#ItemName").val();
                    items.LCQty = $("#LCQty").val();
                    items.PrvQty = $("#PrevQty").val();
                    items.CostingQty = $("#FinalQty").val();
                    items.Unit = $("#Unit").val();
                    items.ItemRate = $("#Rate").val();
                    items.ItemValue = $("#Value").val();
                    items.ItemQty = $("#FinalQty").val();

                    addedItems.push(items);
                    ShowOnTable();
                    $("#save").focus();
                    ClearOnAddToGrid();
                }
            });

            //EditRow
            $(document).on('click', '[name="editRow"]', function (e) {
                isEdit = true;
                var item = $(this).attr("value");
                var newItem = [];
                $.each(addedItems, function (index, value) {
                    if (value.ItemID == item) {
                        $("#ItemID").val(value.ItemID);
                        $("#ItemGroup").val(value.Group);
                        $("#ItemName").val(value.ItemName);
                        $("#LCQty").val(value.LCQty);
                        $("#PrevQty").val(value.PrvQty);
                        $("#FinalQty").val(value.CostingQty);
                        $("#Unit").val(value.Unit);
                        $("#Rate").val(value.ItemRate);
                        $("#Value").val(value.ItemValue);
                    }
                    else {
                        newItem.push(value);
                    }
                });
                addedItems = newItem;
                ShowOnTable();
            });

            //deleteRow
            $(document).on('click', '[name="deleteRow"]', function () {
                var item = $(this).attr("value");
                if (confirm('Are you sure you want to delete this from grid ?')) {
                    var newItem = [];
                    $.each(addedItems, function (index, value) {
                        if (value.ItemID == item) {
                        }
                        else {
                            newItem.push(value);
                        }
                    });
                    addedItems = newItem;
                    ShowOnTable();
                }
            });

             //Save Button click Event
            $(document).on('click', "#save", function () {
            //RemoveError();
            SetLCFC();
            if (addedItems.length <= 0) {
                alert("At least One Item should be added for save.");
            }
            else {
                //ValidateRMSales();
                isValid == true;
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveLCFC", "LCFC")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ lcfc: lcfc, addedItems: addedItems }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#LCFCNo").val(datas.LCPCNo);
                                    $("#save").hide();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").show();
                    }
                }
            }
        });
             //update
        $(document).on('click', '#update', function () {
            //RemoveError();
            $("#update").prop('disabled', true);
            SetLCFC();
            lcfc.LCPCNo = $("#LCFCNo").val();
            //ValidateRMSales();

            if (addedItems.length <= 0) {
                alert("At least One Item should be added for Update.");
                $("#update").prop('disabled', false);
            }
            else {
                if (confirm('Do you want to Update')) {
                    if (isValid == true) {
                    $.ajax({
                        url: '@Url.Action("UpdateLCFC", "LCFC")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ lcfc: lcfc, addedItems: addedItems }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("This LCFC Is Already Received. Unable To Update.");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#update").prop('disabled', true);
                            }
                        }
                    });
                    }
                    else {
                        $("#update").prop('disabled', false);
                    }
                }
            }
            });
           $(document).on('click', '#delete', function () {
                //RemoveError();
                $("#delete").prop('disabled', true);
                SetLCFC();
                lcfc.LCPCNo = $("#LCFCNo").val();
                //ValidateRMSales();

                if (addedItems.length <= 0) {
                    alert("Please search again and delete.");
                    $("#delete").prop('disabled', false);
                }
                else {
                    if (confirm('Do you want to delete')) {
                        if (isValid == true) {
                        $.ajax({
                            url: '@Url.Action("DeleteLCPC", "LCPC")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ lcfc: lcfc, addedItems: addedItems }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("This LCFC Is Already Received. Unable To Update.");
                                    $("#delete").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Deleted.");
                                    location.reload();
                                    $("#update").prop('disabled', true);
                                }
                            }
                        });
                        }
                        else {
                            $("#delete").prop('disabled', false);
                        }
                    }
                }
            });
             //Search Button click
            $(document).on('click', '#search', function () {
            isSearch = true;
                if ($("#LCFCNo").val() != "") {
                    var param = { id: parseInt($("#LCFCNo").val()) };
                //ClearOnSearch();
                if (param.id != "" || param.id != null) {
                    $.ajax({
                        url: '@Url.Action("GetLCFCById", "LCFC")',
                        contentType: "application/json;charset=utf-8",
                        data: param,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            if (datas == 0) {
                                alert("Your entered RMS No. Doesn't exist");
                            }
                            else {
                                $("#save").hide();
                                $("#update").show();
                                $("#delete").show();
                                $("#ILCNo").prop("disabled", true);
                                $("#ILCNo").val(datas.lcfc.ILCID).change();


                                addedItems = [];
                                $.each(datas.lcfcLineItem, function (index, value) {
                                    var item = { LCPCNo: 0, Group: "", ItemID: 0, ItemName: "", LCQty: 0, PrvQty: 0, CostingQty: 0, Unit: "", ItemRate: 0, ItemValue: 0, ItemQty: 0 }
                                    item.ItemID = value.ItemID;
                                    item.Group = value.Group;
                                    item.ItemName = value.ItemName;
                                    item.LCQty = value.LCQty;
                                    item.PrvQty = value.PrvQty;
                                    item.CostingQty = value.ItemQty;
                                    item.Unit = value.Unit;
                                    item.ItemRate = value.ItemRate;
                                    item.ItemValue = value.ItemValue;
                                    addedItems.push(item);
                                });
                                ShowOnTable();
                            }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't solve your problem.\n then Contact With Paankouri Software & Services")

                    }
                });
                }

            }
            else {
                alert("Please Enter a LCFC No first");
            }
        });
            function ShowOnTable() {
                var tQtyOfCost = 0;
                var tCAllow = 0;

                selectedLCFCItemList.clear().draw();
                $.each(addedItems, function (index, value) {
                    selectedLCFCItemList.row.add([value.Group, value.ItemName, value.LCQty, value.PrvQty, value.CostingQty, value.Unit, value.ItemRate, value.ItemValue,
                    '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                    value.ItemID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.ItemID + '"></i></a>']).draw();
                    tQtyOfCost += parseFloat(value.CostingQty);
                    tCAllow += parseFloat(value.ItemValue);
                });
                $("#TQtyOfCost").val(tQtyOfCost);
                $("#TCAllow").val(tCAllow);
                $("#CToBeAllow").val($("#ILCTCost").val() - $("#TCAllow").val());
            }
            function ValidateAddToGrid() {
                isValid = true;
                if ($("#ItemID").val() == "") {
                    setError("ItemID", "This field can't empty!");
                    isValid = false;
                }
                if ($("#LCQty").val() == "") {
                    setError("LCQty", "This field can't empty!");
                    isValid = false;
                }
                if ($("#FinalQty").val() == "") {
                    setError("FinalQty", "This field can't empty!");
                    isValid = false;
                }
                if ($("#ItemName").val() == "") {
                    setError("ItemName", "This field can't empty!");
                    isValid = false;
                }
                if ($("#Unit").val() == "") {
                    setError("Unit", "This field can't empty!");
                    isValid = false;
                }
                if ($("#PrevQty").val() == "") {
                    setError("PrevQty", "This field can't empty!");
                    isValid = false;
                }
                if ($("#ItemGroup").val() == "") {
                    setError("ItemGroup", "This field can't empty!");
                    isValid = false;
                }
                if ($("#Rate").val() == "") {
                    setError("Rate", "This field can't empty!");
                    isValid = false;
                }
                if ($("#Value").val() == "") {
                    setError("Value", "This field can't empty!");
                    isValid = false;
                }
                $.each(addedItems, function (index, value) {
                    if (value.ItemID == $("#ItemID").val()) {
                        alert("ItemID", "This Item Already Added.");
                        isValid = false;
                    }
                });
            }
            function SetLCFC() {
                lcfc.LCPCNo = 0;
                lcfc.ILCID = $("#ILCNo").val();
                lcfc.LCPCDate = $("#LCFCDate").val();
                lcfc.TotalCostingQty = $("#TQtyOfCost").val();
                lcfc.ILCCostingTotal = $("#ILCTCost").val();
                lcfc.Type = "Partial";
            }
            function ClearOnAddToGrid() {
                $("#ItemID").val("");
                $("#ItemGroup").val("");
                $("#ItemName").val("");
                $("#LCQty").val("");
                $("#PrevQty").val("");
                $("#FinalQty").val("");
                $("#Unit").val("");
                $("#Rate").val("");
                $("#Value").val("");
            }

        });
    </script>
}