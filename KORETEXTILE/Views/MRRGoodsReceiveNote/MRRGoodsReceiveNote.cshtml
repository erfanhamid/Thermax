@model BEEERP.Models.ViewModel.SpareParts.MRRGoodsReceiveNoteVModel

@{
    ViewBag.Title = "MRRGoodsReceiveNote";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 style="text-align:center">Material Receive Record (MRR) Entry</h3>
<form id="lcrnForm" , target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h6 class="box-title">MRR Details</h6>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LCRNNo, "MRR No", new { @class = "col-md-4 control-label" })
                                            <div class="input-group input-group-sm col-md-8" style="padding-right:19px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.LCRNNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.LCRNNo, "", new { @style = "color: red" })
                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-primary" id="search" style="min-width: 50px">Search</button>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date, "Date", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 date input-group" style="padding-left:15px; padding-right:15px">
                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        @*<div class="form-group">
                            @Html.LabelFor(m => m.ChallanNo, "Challan No", new { @class = "col-md-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @style = "color: red" })
                            </div>
                        </div>*@
                                    </div>
                                    <div class="col-md-4">
                                        @*<div class="form-group">
                                            @Html.LabelFor(m => m.QCNo, "QC No", new { @class = "col-md-4 control-label" })
                                            <div class="input-group input-group-sm col-md-8" style="padding-right:19px;padding-left:14px;">
                                                @Html.TextBoxFor(m => m.QCNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.QCNo, "", new { @style = "color: red" })
                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-primary" id="go" style="min-width: 50px">Go</button>
                                                </span>
                                            </div>
                                        </div>*@

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.QCNo, "QC No", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.QCNo, (IEnumerable<SelectListItem>)ViewBag.QCNo, "", new { @class = "form-control select2", @ReadOnly = "ReadOnly" })
                                                @Html.ValidationMessageFor(m => m.QCNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CompanyID, "Company", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.CompanyID, (IEnumerable<SelectListItem>)ViewBag.Company, "", new { @class = "form-control select2", @ReadOnly = "ReadOnly" })
                                                @Html.ValidationMessageFor(m => m.CompanyID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TypeId, "Type", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.TypeId, (IEnumerable<SelectListItem>)ViewBag.Type, "", new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.TypeId, "", new { @style = "color: red" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.RefNo, "Reference No", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Description, "Description", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h6 class="box-title">Item Info</h6>
                                </div>
                                <table class="table table-responsive" id="lcGrid1">
                                    <thead>
                                        <tr>
                                            <th>Group Name</th>
                                            <th>Item Name</th>
                                            <th> Quantity</th>
                                            <th>Rate</th>
                                            <th>Value</th>
                                            @*<th>Unit</th>*@
                                            <th id="action">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h6 class="box-title">Receive Item Quantity</h6>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.GroupName, "Group", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.GroupName, new { @class = "form-control", @ReadOnly = "ReadOnly" })
                                                @Html.ValidationMessageFor(m => m.GroupName, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ItemId, "Item", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.ItemId, (IEnumerable<SelectListItem>)ViewBag.item, "", new { @class = "form-control Select2", @ReadOnly = "ReadOnly" })
                                                @Html.ValidationMessageFor(m => m.ItemId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.QcQty, "Quantity", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.QcQty, new { @class = "form-control", @ReadOnly = "ReadOnly" })
                                                @Html.ValidationMessageFor(m => m.QcQty, "", new { @style = "color: red" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CostRt, "Rate", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.CostRt, new { @class = "form-control", @ReadOnly = "ReadOnly" })
                                                @Html.ValidationMessageFor(m => m.CostRt, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CostVal, "Value", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.CostVal, new { @class = "form-control", @type = "number" })
                                                @Html.ValidationMessageFor(m => m.CostVal, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.StoreId, "Store", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.StoreId, (IEnumerable<SelectListItem>)ViewBag.StoreId, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.StoreId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BoxID, "Box", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.BoxID, (IEnumerable<SelectListItem>)ViewBag.BoxID, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.BoxID, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="box" style="border:none">
                                <div class="box-body">
                                    <div class="form-group" style="text-align:center;padding-top:10px">
                                        <button type="button" id="addToGrid" name="addToGrid" style="height:33px;font-size:13px;" class="btn btn-primary">Add To Grid</button>                                        
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA; text-align: left;">
                                    <h6 class="box-title">Receive Info</h6>
                                </div>
                                <table class="table table-responsive" id="itemGrid">
                                    <thead>
                                        <tr>
                                            <th>Group Name</th>
                                            <th>Item Name</th>
                                            @*<th>Receive Qty</th>*@
                                            <th>Quantity</th>
                                            <th>Rate</th>
                                            <th>Value</th>
                                            <th>Store Name</th>
                                            <th>Box Name</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        

                        <div class="col-md-12">
                            <div class="box">
                                <div class="box-footer">
                                    <div class="form-group" , style="text-align:center">
                                        @if (User.IsInRole("StoreRMOperator"))
                                        {
                                            <button type="button" id="save" style="height:500%; font-size:100%;" class="btn btn-primary">Save</button>
                                            <button type="button" id="update" style="height:500%; font-size:100%;" class="btn btn-primary" disabled>Update</button>
                                            <button type="button" id="delete" style="height:500%; font-size:100%;" class="btn btn-primary" disabled>Delete</button>
                                            <button type="button" id="refresh" style="height:500%; font-size:100%;" class="btn btn-primary">Refresh</button>
                                            <button name="print" id="print" style="height:500%; font-size:100%;" class="btn btn-primary">Print</button>


                                        }
                                        else
                                        {
                                            <button type="button" id="save" style="height:500%; font-size:100%;" class="btn btn-primary">Save</button>
                                            <button type="button" id="update" style="height:500%; font-size:100%;" class="btn btn-primary">Update</button>
                                            <button type="button" id="delete" style="height:500%; font-size:100%;" class="btn btn-primary">Delete</button>
                                            <button type="button" id="refresh" style="height:500%; font-size:100%;" class="btn btn-primary">Refresh</button>
                                            <button name="print" id="print" style="height:500%; font-size:100%;" class="btn btn-primary">Print</button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="unitCost" />
    <input type="hidden" id="groupId" />
    <input type="hidden" id="UOMIdfortable" />
</form>
<input type="hidden" id="message" value="false" />
@section scripts{
    <script src="~/Scripts/StoreRM/LCRNInputFocus.js"></script>
    <script>
        $(document).ready(function () {
            $(".select2").select2();
            EnterPress();
            $('.date').datepicker({
                autoclose: true,
                format: 'dd-mm-yyyy',
            });
            $("#ReceiveQty").val(parseFloat(0));
            $("#CostRt").val(parseFloat(0));
            $("#update").hide();
            $("#delete").hide();
            $("#clnoField").hide();
            $("#print").hide();
            $("#havetoreceive").hide();
            $("#CompanyID").prop('disabled', true);
            $("#TypeId").prop('disabled', true);
            $("#ItemId").prop('disabled', true);
            $("#BoxID").prop('disabled', true);
            $("#UOMId").prop('disabled', true);
            $("#HaveToRecev").prop('disabled', true);
            $("#CostVal").prop('disabled', true);
            // $("#StoreId").val('@ViewBag.FactoryRM').change();
            var isSearch = false;
            var addedItems = [];
            var isValid = true;
            var lcID = 0;
            var GroupID = 0;
            var SupplierID = 0;
            var isEdit = false;
            var table1 = $("#itemGrid").DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': false
            });
            var table = $('#lcGrid1').DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': false
            });
            $(document).on('change', "#GrpId", function () {
                var id = { id: $("#GrpId").val() };
                $.ajax({
                    url: '@Url.Action("GetSupplierIdByGroup", "MRRGoodsReceiveNote")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {

                        $("#SupplierId").empty();
                        $.each(data.supplier, function (index, value) {
                            $("#SupplierId").append($('<option />', {
                                value: value.Value,
                                text: value.Text
                            }));
                        });
                        if (isSearch == true) {
                            $("#SupplierId").val(SupplierID).change();
                            SupplierID = 0;
                        }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services");
                    }
                });
            });

            $(document).on('change', "#SupplierId", function () {
                var splierId = { splierId: $("#SupplierId").val() };
                $.ajax({
                    url: '@Url.Action("GetLCBySupplierId", "MRRGoodsReceiveNote")',
                    contentType: "application/json;charset=utf-8",
                    data: splierId,
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {

                        $("#LCId").empty();
                        $.each(data.lc, function (index, value) {
                            $("#LCId").append($('<option />', {
                                value: value.Value,
                                text: value.Text
                            })).trigger('change');
                        });
                        if (isSearch == true) {
                            $("#LCId").val(lcID).change();
                            //lcID = 0;
                        }
                    },
                });
            });
            var addedItems1 = [];
            $(document).on('change', '#LCId', function () {
                var lcId = { lcId: $("#LCId :selected").text() };
                if (lcId.lcId != "") {
                    $.ajax({
                        url: '@Url.Action("GetLCItems", "MRRGoodsReceiveNote")',
                        contentType: "application/json;charset=utf-8",
                        data: lcId,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            //$("#ItemId").empty();
                            $.each(datas.lcItem, function (i, v) {
                                var item = { GNM: "", GID: 0, NM: "", IID: 0, QT: 0.0, RQT: 0.0, HQT: 0.0, UM: "", UMId: 0 }
                                item.GNM = v.GNM;
                                item.GID = v.GID;
                                item.NM = v.NM;
                                item.IID = v.IID;
                                item.QT = v.QT;
                                item.UM = v.UM;
                                item.UMId = v.UMId;
                                addedItems1.push(item);
                            });
                            ShowOnTableItems();
                        },
                        error: function () {
                            alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services");
                        }
                    });

                }
            });

            function ShowOnTable() {
                table.clear().draw();
                //var totalQuantity = 0;
                $.each(addedItems, function (index, value) {
                    table.row.add([value.GroupName, value.ItemName, value.QcQty, value.CostRt, value.CostVal,
                    '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                    value.ItemID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.ItemID + '"></i></a>']).draw();

                    //$.each(addedItems, function (i, v) {
                    //    totalQuantity += v.Qty;
                    //});

                });
               // $("#TotalQty").val(totalQuantity);
            }

            function ShowOnTableItems() {

                table1.clear().draw();
                $.each(addedItems1, function (index, value) {
                    table1.row.add([value.GroupName, value.ItemName, value.QcQty, value.CostRt, value.CostVal, value.StoreName, value.BoxName,
                    '<a href="#"><i class="fa fa-edit" name="editRow1" value="' +
                    value.ItemID + '"></i></a> ']).draw();
                });
             }

            $(document).on('click', '[name="editRow"]', function (e) {
                isEdit = true;
                var item = $(this).attr("value");
                var newItem = [];
                $.each(addedItems, function (index, value) {
                    if (value.ItemID == item) {
                        $("#GroupName").val(value.GroupName);
                        $("#ItemId").val(value.ItemID).change();
                        $("#QcQty").val(value.QcQty);
                        $("#CostRt").val(value.CostRt);
                        $("#CostVal").val(value.CostVal);

                    }
                    else {
                        newItem.push(value);
                    }
                    addedItems = newItem;
                    ShowOnTable();

                });
            });

            $(document).on('click', '[name="editRow1"]', function (e) {
                isEdit = true;
                var item = $(this).attr("value");
                var newItem = [];
                $.each(addedItems1, function (index, value) {
                    if (value.ItemID == item) {
                        $("#GroupName").val(value.GroupName);
                        $("#ItemId").val(value.ItemID).change();
                        $("#QcQty").val(value.QcQty);
                        $("#CostRt").val(value.CostRt);
                        $("#CostVal").val(value.CostVal);
                        $("#StoreId").val(value.StoreId).change();
                        $("#BoxID").val(value.BoxID).change();
                        boxId = value.BoxID;

                    }
                    else {
                        newItem.push(value);
                    }
                    addedItems1 = newItem;
                    ShowOnTableItems();
                });

            });

            $(document).on('click', '[name="deleteRow"]', function () {
                var item = $(this).attr("value");
                if (confirm('Are you sure you want to delete this from grid ?')) {
                    var newItem = [];
                    $.each(addedItems, function (index, value) {
                        if (value.ItemID == item) {

                        }
                        else {
                            newItem.push(value);
                        }
                    });
                    addedItems = newItem;
                    ShowOnTable();
                }
            });

            var boxId;
            //Box change reaction
            $(document).on('change', "#StoreId", function () {
                $("#BoxID").prop('disabled', false);
                var id = { id: parseInt($(this).val()) };
                if (id.id != "") {
                    $.ajax({
                        url: '@Url.Action("GetBoxByBatchID", "SpOpeningBalance")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            $("#BoxID").empty();
                            $("#BoxID").prop("disabled", false);
                            $.each(datas, function (index, value) {
                                $("#BoxID").append($('<option />', {
                                    value: value.Value,
                                    text: value.Text
                                })).trigger('change');
                            });
                            $("#BoxID").focus();
                            if (boxId != "") {
                                $("#BoxID").val(boxId).change();
                                boxId = "";
                            }
                        }
                    });
                }
                else {
                    $("#BoxID").val("").change();
                    $("#BoxID").prop("disabled", true);
                }
            });

            $(document).on('click', "#addToGrid", function () {
                RemoveError();
                ValidationOnaddClick();
                if (isValid == true) {

                    var item = { GroupName: "", ItemID: 0, ItemName: "", QcQty: 0, CostRt: 0.0, CostVal: 0.0, StoreId: 0, StoreName: "", BoxID: 0, BoxName: "", QcQty: 0.0, }
                    item.GroupName = $("#GroupName").val();
                    item.ItemID = $("#ItemId").val();
                    item.ItemName = $("#ItemId :selected").text();
                    item.StoreId = $("#StoreId").val();
                    item.StoreName = $("#StoreId :selected").text();
                    item.BoxID = $("#BoxID").val();
                    item.BoxName = $("#BoxID :selected").text();
                    item.QcQty = parseFloat($("#QcQty").val());
                    item.CostRt = parseFloat($("#CostRt").val());
                    item.CostVal = parseFloat($("#CostVal").val());
                    addedItems1.push(item);
                    ShowOnTableItems();
                    clearOnAdd();
                }
            });
           
            $(document).on('click', "#save", function () {
                ValidationOnSaveClick();
                if (isValid == true) {
                    if (confirm("Do you want to save?")) {
                        var lcrn = { QCNo: 0, Date: "", LCRNNo: 0, CompanyID: 0, TypeId: 0, RefNo: "", Description: "", };
                        lcrn.LCRNNo = 0;
                        lcrn.Date = $("#Date").val();
                        lcrn.QCNo = $("#QCNo").val();
                        lcrn.CompanyID = parseInt($("#CompanyID").val());
                        lcrn.TypeId = parseInt($("#TypeId").val());
                        lcrn.RefNo = $("#RefNo").val();
                        lcrn.Description = $("#Description").val();
                        $.ajax({
                            url: '@Url.Action("SaveMRRGoodsReceiveNote", "MRRGoodsReceiveNote")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ lcrn: lcrn, addedItems1: addedItems1 }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#LCRNNo").val(datas.lcrnNo);
                                    $("#save").prop('disabled', true);
                                }
                            }
                        });

                    }
                }

            });

            $(document).on('click', "#update", function () {
                ValidationOnSaveClick();
                if (confirm("Do you want to update?")) {
                    var lcrn = { LCRNNo: 0, Date: "", QCNo: "", CompanyID: 0, TypeId:0,  StoreId: 0, BoxID:0, RefNo: "", Description: ""};
                    lcrn.LCRNNo = $("#LCRNNo").val();;
                    lcrn.Date = $("#Date").val();
                    lcrn.QCNo = $("#QCNo").val();
                    lcrn.StoreId = parseInt($("#StoreId").val());
                    lcrn.BoxID = parseInt($("#BoxID").val());
                    lcrn.CompanyID = parseInt($("#CompanyID").val());
                    lcrn.TypeId = parseInt($("#TypeId").val());
                    lcrn.RefNo = $("#RefNo").val();
                    lcrn.Description = $("#Description").val();
                    $.ajax({
                            url: '@Url.Action("UpdateMRRGoodsReceiveNote", "MRRGoodsReceiveNote")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ lcrn: lcrn, addedItems1: addedItems1 }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (data) {
                                if (data == 0) {
                                    alert("LCRN No is not exist");
                                    $("#update").prop('disabled', false);
                                }
                                else if (data==1) {
                                    alert("successfully updated");
                                    $("#update").prop('disabled', true);
                                } 
                                else {
                                    alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services");
                                }
                            }
                    });
                }

            });

            $(document).on('click', '#delete', function () {
                var lcrnNo = { lcrnNo: $("#LCRNNo").val() };
                if (confirm('Do you want to Delete')) {
                    $.ajax({
                        url: '@Url.Action("DeleteMRRGoodsReceiveNote", "MRRGoodsReceiveNote")',
                        contentType: "application/json;charset=utf-8",
                        data: lcrnNo,
                        type: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            if (data == 0) {
                                alert("No LCRN is found to be deleted");
                            } else if (data == 2) {
                                alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services");
                            } else {
                                alert("Successfully deleted");
                                location.reload();
                            }
                        },

                    });
                }
            });

            $(document).on('click', "#search", function () {

                if ($("#LCRNNo").val() == "") {
                    alert("Please enter a LCRN No first");
                } else {
                    isSearch = true;
                    var lcrnNo = { lcrnNo: $("#LCRNNo").val() };
                    clearOnSearch();
                    $.ajax({
                        url: '@Url.Action("GetMRRGoodsReceiveNote", "MRRGoodsReceiveNote")',
                        contentType: "application/json;charset=utf-8",
                        data: lcrnNo,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas.Message == 0) {
                                alert("It does not exist");
                            }
                            else if (datas.Message == 2) {
                                alert("Fatal Error");
                            }
                            else {
                                $("#save").hide();
                                $("#update").show();
                                $("#delete").show();
                                $("#print").show();
                                $("#LCRNNo").val(datas.lcrn.LCRNNo);
                                $("#Date").val((moment(datas.lcrn.Date).format("DD-MM-YYYY"))).change();
                                $("#QCNo").val(datas.lcrn.QCNo);
                                $("#CompanyID").val(datas.lcrn.CompanyID).change();
                                $("#TypeId").val(datas.lcrn.TypeId).change();
                                $("#RefNo").val(datas.lcrn.RefNo);
                                $("#Description").val(datas.lcrn.Description);
                                $.each(datas.lcrnlineitem, function (i, v) {
                                    var item = { GroupName: "", ItemID: 0, ItemName: "", QcQty: 0.0, CostRt: 0, CostVal:0, StoreId:0,StoreName:"",BoxID:0,BoxName:"" }
                                item.GroupName = v.GroupName;
                                item.ItemID = v.ItemID;
                                item.ItemName = v.ItemName;
                                item.QcQty = v.QcQty;
                                item.StoreId = v.StoreId;
                                item.StoreName = v.StoreName;
                                item.BoxID = v.BoxID;
                                item.BoxName = v.BoxName;
                                item.CostRt = v.CostRt;
                                item.CostVal = v.CostVal;
                                addedItems1.push(item);
                                ShowOnTableItems();
                                });
                            }
                        }
                    });

                }
            });

            // Go Button
            $(document).on('change', "#QCNo", function () {

                //if ($("#QCNo").val() == "") {
                //    alert("Please enter a QC No first");
                //} else {
                    isSearch = true;
                var qcNo = { qcNo: $("#QCNo").val() };
                    clearOnSearch();
                    $.ajax({
                        url: '@Url.Action("GetQcByQcNo", "MRRGoodsReceiveNote")',
                        contentType: "application/json;charset=utf-8",
                        data: qcNo,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas.Message == 0) {
                                alert("It does not exist");
                            }
                            else if (datas.Message == 2) {
                                alert("Fatal Error");
                            }
                            else {
                                //$("#save").hide();
                                //$("#update").show();
                                //$("#delete").show();
                                //$("#print").show();
                                //("#LCRNNo").val(datas.lcrn.GRNNo);
                                //$("#Date").val((moment(datas.lcrn.GRNDate).format("DD-MM-YYYY"))).change();
                                $("#CompanyID").val(datas.CompID).change();
                                $("#TypeId").val(datas.sptp).change();
                                //$("#RefNo").val(datas.lcrn.RefNo);
                                //$("#Description").val(datas.lcrn.Descriptions);
                                $.each(datas.lcrnlineitem, function (i, v) {
                                    var item = { GroupID: 0, GroupName: "", ItemID: 0, ItemName: "", QcQty: 0.0, CostRt: 0, CostVal:0 }
                                item.GroupID = v.GroupID;
                                item.GroupName = v.GroupName;
                                item.ItemID = v.ItemID;
                                item.ItemName = v.ItemName;
                                item.Unit = v.UoM;
                                item.QcQty = v.QcQty;
                                item.CostRt = v.CostRt;
                                item.CostVal = v.CostVal;
                                addedItems.push(item);
                                ShowOnTable();
                                });
                            }
                        }
                    });

               /* }*/
            });

            $(document).on('click', "#refresh", function () { location.reload(); });
            function ValidationOnSaveClick() {
                isValid = true;
                if ($("#TypeId").val() == "") {
                    setError("TypeId", "Type is required field");
                    isValid = false;
                }

                //if (addedItems.length<= 0) {
                //    alert("At list an Item should be added in the grid bellow");
                //    isValid = false;
                //}
            }
            function ValidationOnaddClick() {
                isValid = true;
                if ($("#ItemId").val() == "") {
                    setError("ItemId", "Item  is required field");
                    isValid = false;
                }

                if ($("#StoreId").val() == "") {
                    setError("StoreId", "Store is required field");
                    isValid = false;
                }
                if ($("#BoxID").val() == 0) {
                    setError("BoxID", "BoxID is required field.");
                    isValid = false;
                }

                var item = $("#ItemId").val();
                $.each(addedItems, function (i, v) {
                    if (item == v.ItemID) {
                        alert("The item is already added");
                        isValid = false;
                    }
                });


            }
            function clearOnAdd() {
                $("#GroupName").val("");
                $("#ItemId").val("").change();
                $("#QcQty").val("");
                $("#CostRt").val("");
                $("#CostVal").val("");
                $("#StoreId").val("").change();
                $("#BoxID").val("").change();
            }
            function clearOnSearch() {
                $("#ItemId").val("").change();
                $("#UOMId").val("");
                $("#Qty").val("");
                addedItems = [];
                addedItems1 = [];
            }
            $(document).on('click', "#print", function (event) {
                event.preventDefault();
                $("#lcrnForm").attr("action", "/LCRN/GetLCRNSamplePreview")
                $("#lcrnForm").submit();

            });

            $(document).on('focusout', "#ReceiveQty", function () {
                calculationHaveToReceive();
            });

            function calculationHaveToReceive() {
                var rcvQty = $("#ReceiveQty").val();
                var RcvdQty = $("#ReceivedQty").val();
                var avQty = $("#AvailableQty").val();
                var orderQty = $("#Qty").val();

                if (parseFloat(rcvQty) > parseFloat(avQty)) {
                    alert("Receive Qty Can not be grater than Available Qty");
                }
                else {
                    $("#HaveToRecev").val(parseFloat(orderQty) - (parseFloat(RcvdQty) + parseFloat(rcvQty)));
                }
            }

            $(document).on('focusout', "#Rate", function () {
                calculationRate();

            });

            function calculationRate() {
                var rate = $("#CostRt").val();
                var Qty = $("#QcQty").val();
                $("#CostVal").val((parseFloat(rate) * parseFloat(Qty)).toFixed(2));
            }
    });
    </script>
}
