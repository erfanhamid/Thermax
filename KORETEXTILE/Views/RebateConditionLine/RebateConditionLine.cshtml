@model BEEERP.Models.TaxCalculator.RebateConditionLine
@{
    ViewBag.Title = "RebateConditionLine";
}


<style>
    tbody tr:hover {
        background-color: dodgerblue;
        color: white;
    }

    .btn:hover {
        color: blue !important;
    }

    .btn:focus {
        background-color: aqua !important;
    }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<div class="content">
    <div class="row">
        <div class="form-horizontal">
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="box ">
                            <div class="box-header with-border box-head-back">
                                <h3 class="box-title">Create Rebate Condition</h3>
                            </div>
                            <div class="box-body">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ConditionID, "Condition", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(m => m.ConditionID,(IEnumerable<SelectListItem>)ViewBag.Condition, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.ConditionID, "", new { @style = "color: red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SlabID, "Slab ID", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.SlabID, new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.SlabId })
                                        @Html.ValidationMessageFor(m => m.SlabID, "", new { @style = "color: red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Slab, new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.Slab, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Slab, "", new { @style = "color: red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Percentage, new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8" style="padding-left:0%; padding-right:0%;">
                                        <div class="col-sm-8" style="padding-right:0%;">
                                            @Html.TextBoxFor(m => m.Percentage, new { @class = "form-control", @type = "number" })
                                        </div>
                                        <label class="col-sm-1" style="padding-left:0%;font-size:150%;text-align:center;color:green">%</label>
                                        @Html.ValidationMessageFor(m => m.Percentage, "", new { @style = "color: red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.MaxLimit, "Max Limit", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(m => m.MaxLimit, new { @class = "form-control", @type = "number" })
                                        @Html.ValidationMessageFor(m => m.MaxLimit, "", new { @style = "color: red" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-8">
                                        <input type="button" name="Save" id="save" value="Save" class="btn skin-blue" />
                                        <input type="button" name="Upate" id="update" value="Update" class="btn skin-blue" />
                                        <input type="button" name="Delete" id="delete" value="Delete" class="btn skin-blue" />
                                        <input type="button" name="Refresh" id="refresh" value="Refresh" class="btn skin-blue" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="box ">
                            <div class="box-header with-border box-head-back">
                                <h3 class="box-title">Rebate Condition Line List</h3>
                            </div>
                            <div class="box-body">
                                <table class="table table-responsive" id="ExemtionList">
                                    <thead>
                                        <tr>
                                            <th>Condition</th>
                                            <th>Slab No</th>
                                            <th>Slab Name</th>
                                            <th>Percentage (%)</th>
                                            <th>Max Limit</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in @ViewBag.RebateConditionLine)
                                        {
                                            string val = @item.ConditionID.ToString() + @item.SlabID.ToString();
                                            <tr class='clickable-row' value=@val>    
                                                <td>@item.ConditionName</td>
                                                <td>@item.SlabID</td>
                                                <td>@item.Slab</td>
                                                <td>@item.Percentage %</td>
                                                <td>@item.MaxLimit</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/TaxCalculator/RebateConditionLineInputJs.js"></script>
    <script>
        $('#ExemtionList').DataTable({
            'paging': true,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        })

        $(document).on('click', '#refresh', function () {
            location.reload();
        });

        $(".select2").select2();

        var conditionLine = {ConditionID: 0, SlabID: 0, Slab: "", MaxLimit: 0.0, Percentage: 0 }
        var isValid = true;
        var slabId = "";
        EnterPress();

        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $("#ConditionID").focus();
        });

        $(document).on('change', "#ConditionID", function () {
            var id = $(this).val();
            $("#SlabID").val("");
            if (id != "") {
                $.ajax({
                url: '@Url.Action("GetSlabIdByCondition", "RebateConditionLine")',
                contentType: "application/json;charset=utf-8",
                data: { id: id },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    if(datas==0)
                    {
                        
                    }
                    else {
                        if (slabId != "") {
                            $("#SlabID").val(slabId);
                            slabId = "";
                        }
                        else {
                            $("#SlabID").val(datas);
                        }
                    }
                }
               });
            }
        });

        $(".clickable-row").on('click', function (e) {
            var id = $(this).attr("value");
             $.ajax({
                url: '@Url.Action("GetConditionLineById", "RebateConditionLine")',
                contentType: "application/json;charset=utf-8",
                data: { id: id },
                type: 'GET',
                dataType: 'json',
                success: function (datas) {
                    if(datas==0)
                    {
                        
                    }
                    else {
                        $("#save").hide();
                        $("#update").show();
                        $("#delete").show();
                        $("#ConditionID").val(datas.ConditionID).change();
                        $("#ConditionID").prop('disabled', true);
                        slabId = datas.SlabID;
                        //$("#SlabID").val(datas.SlabID);
                        $("#Slab").val(datas.Slab);
                        $("#MaxLimit").val(datas.MaxLimit);
                        $("#Percentage").val(datas.Percentage);
                    }
                }
            });
        });

        $(document).on('click', '#save', function () {
            ValidateOnSaveClick();
            $("#save").prop('disabled', true);
            if (isValid == true)
            {
                SetConditionLine();
                if (confirm("Do you want to save?")) {
                    $.ajax({
                        url: '@Url.Action("SaveConditionLine", "RebateConditionLine")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ conditionLine: conditionLine }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas != 0) {
                                alert("Save Sucessfull.");
                                location.reload();
                            }
                            else {
                                $("#save").prop('disabled', false);
                            }
                        }
                    });
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
            else {
                $("#save").prop('disabled', false);
            }
        });

        $(document).on('click', '#update', function () {
            ValidateOnSaveClick();
            $("#update").prop('disabled', true);
            if (isValid == true)
            {
                SetConditionLine();
                if (confirm("Do you want to Update?")) {
                    $.ajax({
                        url: '@Url.Action("UpdateConditionLine", "RebateConditionLine")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ conditionLine: conditionLine }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Update Failed");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Update Sucessfull.");
                                location.reload();
                            }
                        }
                    });
                }
                else {
                    $("#update").prop('disabled', false);
                }
            }
            else {
                $("#update").prop('disabled', false);
            }

        });

        $(document).on('click', '#delete', function () {

            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = { conId: $("#ConditionID").val(), slabId: $("#SlabID").val()};
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteConditionLineByid", "RebateConditionLine")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#update").prop('disabled', true);
                            $("#delete").prop('disabled', true);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });
        
        function SetConditionLine() {
            conditionLine.ConditionID = $("#ConditionID").val();
            conditionLine.SlabID = $("#SlabID").val();
            conditionLine.Slab = $("#Slab").val();
            conditionLine.MaxLimit = $("#MaxLimit").val();
            conditionLine.Percentage = $("#Percentage").val();
        }

        function ValidateOnSaveClick() {
            isValid = true;
            if ($("#ConditionID").val() == "") {
                setError("ConditionID", "Condition Name is required field");
                isValid = false;
            }
            if ($("#Slab").val() == "") {
                setError("Slab", "Slab Name is required field");
                isValid = false;
            }
            if ($("#MaxLimit").val() <= 0) {
                setError("MaxLimit", "Max Limit must be grater than zero.");
                isValid = false;
            }
            if ($("#MaxLimit").val() == "") {
                setError("MaxLimit", "Max Limit is required field");
                isValid = false;
            }
            if ($("#Percentage").val() <= 0) {
                setError("Percentage", "Percentage must be grater than zero.");
                isValid = false;
            }
            if ($("#Percentage").val() == "") {
                setError("Percentage", "Percentage is required field");
                isValid = false;
            }
        }

    </script>
}

