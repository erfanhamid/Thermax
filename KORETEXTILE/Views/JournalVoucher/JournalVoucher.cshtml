@model BEEERP.Models.ViewModel.Account.JVViewModel

@{
    ViewBag.Title = "JournalVoucher";
}


<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }
    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }
    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 style="text-align:center">Journal Voucher (JV) Entry</h3>
<form id="report" target="_blank">
    <div id="debitError" style="text-align:center;font-size:20px;font-weight:bold;">
        @Html.ValidationMessage("DebitError", "", new { @style = "color: red" })
    </div>
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="background: #82E0AA;">
                                    <h4 class="box-title">Journal Voucher Details</h4>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.JVNO, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%;">
                                                @Html.TextBoxFor(m => m.JVNO, new { @class = "form-control"@*, @Value = ViewBag.JVNO*@ })
                                                @Html.ValidationMessageFor(m => m.JVNO, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BranchId, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.BranchId, (IEnumerable<SelectListItem>)ViewBag.Branch, new { @class = "form-control select2" })
                                                @Html.ValidationMessageFor(m => m.BranchId, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalAmount, "Total Amount", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalAmount, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalAmount, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group" id="ref">
                                            @Html.LabelFor(m => m.RefNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.JVDate, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%">
                                                @Html.TextBoxFor(m => m.JVDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.JVDate, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalDebit, "Total Debit", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalDebit, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalDebit, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalCredit, "Total Credit", new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalCredit, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalCredit, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box">
                                        <div class="box-body">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.CostGroupId, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.CostGroupId, (IEnumerable<SelectListItem>)ViewBag.CostGroup, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.CostGroupId, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.AccountHeadID, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.AccountHeadID, (IEnumerable<SelectListItem>)ViewBag.GlAccount, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.AccountHeadID, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.DebOrCre, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.DebOrCre, (IEnumerable<SelectListItem>)ViewBag.DebitOrCredit, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.DebOrCre, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="subLedger" class="col-md-12" style="padding-right:0%;padding-left:0%;border-color:lightseagreen;border-style:solid;border-width:2px;">
                                                <br />
                                                <div class="col-md-6" style="padding-right:0%;padding-left:0%;">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.SubLedgerID, new { @class = "col-md-4 control-label" })
                                                        <div class="col-sm-8">
                                                            @Html.DropDownListFor(m => m.SubLedgerID, (IEnumerable<SelectListItem>)ViewBag.SubLedger, new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(m => m.SubLedgerID, "", new { @style = "color: red" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.SubJVAmount, new { @class = "col-md-4 control-label" })
                                                        <div class="col-sm-8">
                                                            @Html.TextBoxFor(m => m.SubJVAmount, new { @class = "form-control", @type = "number" })
                                                            @Html.ValidationMessageFor(m => m.SubJVAmount, "", new { @style = "color: red" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.Note, new { @class = "col-md-4 control-label" })
                                                        <div class="col-sm-8">
                                                            @Html.TextBoxFor(m => m.Note, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(m => m.Note, "", new { @style = "color: red" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.SubLedgerATot, "Sub Ledger Total", new { @class = "col-md-4 control-label" })
                                                        <div class="col-sm-8">
                                                            @Html.TextBoxFor(m => m.SubLedgerATot, new { @class = "form-control", @disabled = "disabled" })
                                                            @Html.ValidationMessageFor(m => m.SubLedgerATot, "", new { @style = "color: red" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div>
                                                    <div class="form-group" style="padding-top:1%;padding-left:50%;">
                                                        <button type="button" id="subAddToGrid" name="addToGrid" style="height:300%; font-size:100%;" class="btn">Add To Grid</button>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="col-md-2"></div>
                                                    <div class="col-md-8" style="color:lightseagreen;">
                                                        <div class="box-body">
                                                            <table class="table table-responsive" id="subLedgerList">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Cost Group</th>
                                                                        <th>Sub Ledger A/C</th>
                                                                        <th>Amount</th>
                                                                        <th>Note</th>
                                                                        <th>Action</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody></tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2"></div>
                                                </div>
                                                <div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <br />
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.JVAmount, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.JVAmount, new { @class = "form-control", @type = "number" })
                                                        @Html.ValidationMessageFor(m => m.JVAmount, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <br />
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div>
                                                <div class="form-group" style="padding-top:9%;padding-left:50%;">
                                                    <button type="button" id="addToGrid" name="addToGrid" style="height:300%; font-size:100%;" class="btn btn-primary">Add To Grid</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box ">
                                        <div class="box-header with-border box-head-back" style="background: #82E0AA;">
                                            <h4 class="box-title">Journal Voucher Line Item</h4>
                                        </div>
                                        <div class="box-body">
                                            <table class="table table-responsive" id="JVlist">
                                                <thead>
                                                    <tr>
                                                        <th>Cost Group</th>
                                                        <th>Account Head</th>
                                                        <th>Amount</th>
                                                        <th>Dr/Cr</th>
                                                        <th>Description</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box">
                                        <div class="box-footer">
                                            <div class="form-group" , style="text-align:center">
                                                <input type="button" value="Save" id="save" class="btn btn-primary" style="padding-left:20px;" />
                                                @*<input type="button" value="Approve" id="approve" class="btn btn-primary" style="padding-left:20px;" />*@
                                                <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                                <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                                @*<input type="button" name="clear" id="clear" value="Clear" class="btn btn-primary" />*@
                                                <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                                <input type="button" name="print" id="print" value="PrintJV" class="btn btn-primary" />
                                                <input type="button" name="printjvsl" id="printjvsl" value="PrintJVSL" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="TotalAmount" />
</form>

@section scripts
{
    <script src="~/Scripts/AccountModule/JournalVoucherInputFocus.js"></script>
    <script>
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });

        $(".select2").select2();

        var subLId = "";
        var accId = "";
        var isValid = true;
        var addedItems = [];
        var addedItems1 = [];
        var fromNotificationJvNo = "";
        //var jv = { JVNO: 0, JVDate: "", RefNo: "", TotalAmount: "", BranchId: "", CostGroupId: 0, BussinessUnitId:0}
        var jv = { JVNO: 0, JVDate: "", RefNo: "", TotalAmount: "", BranchId: "" }

        var table1 = $('#JVlist').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });

        var table = $('#subLedgerList').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });

        EnterPress();

        $(document).ready(function () {
            $("#subLedger").hide();
            $("#ref").hide();
            $("#update").hide();
            $("#delete").hide();
            $("#clear").hide();
            $("#print").hide();
            $("#printjvsl").hide();
            /*$("#BranchId").focus();*/
            $("#BussinessUnitId").focus();
            $("#debitError").hide();
            @*$("#BranchId").val(@ViewBag.DepotId).change();*@
            //$("#approve").hide();

            @*if ($("#JVNO").val() != "") {
                fromNotificationJvNo = $("#JVNO").val();
                SearchClick();
                //condition
                //$("#approve").show();
                if (@ViewBag.Approve == 0) {
                    $("#approve").show();
                    $("#print").show();
                    $("#printjvsl").show();
                }
                else {
                    $("#approve").hide();
                    $("#print").show();
                    $("#printjvsl").show();
                }
            }*@
        });

        $(document).on('click', "#print", function (event) {
            event.preventDefault();
            if ($("#message").val() != true) {
                $("#report").attr("action", "/JournalVoucher/GetJournalVoucherPreview")
                $("#report").submit();
            }
        });

        $(document).on('click', "#printjvsl", function (event) {
            event.preventDefault();
            if ($("#message").val() != true) {
                $("#report").attr("action", "/JournalVoucher/GetJournalVoucherSubLedgerPreview")
                $("#report").submit();
            }
        });

        $(document).on('change', "#AccountHeadID", function () {
            $("#SubLedgerID").prop('disabled', false);
            var id = { accId: $(this).val() };
            if (id.accId != "") {
                    $.ajax({
                        url: '@Url.Action("GetSubLedgerByLedger", "JournalVoucher")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas.Message == 1) {
                                $("#subLedger").show();
                                $("#SubLedgerID").empty();
                                $("#SubLedgerID").prop("disabled", false);
                                $.each(datas.subLed, function (index, value) {
                                    $("#SubLedgerID").append($('<option />', {
                                        value: value.Value,
                                        text: value.Text
                                    })).trigger('change');
                                });
                                $("#SubLedgerID").focus();
                                if (accId != "") {
                                    accId = "";
                                }
                                else {
                                    table.clear().draw();
                                }
                            }
                            if (datas.Message == 0) {
                                $("#subLedger").hide();
                                $("#SubLedgerID").empty();
                                $("#SubLedgerID").prop("disabled", false);
                                $.each(datas.subLed, function (index, value) {
                                    $("#SubLedgerID").append($('<option />', {
                                        value: value.Value,
                                        text: value.Text
                                    })).trigger('change');
                                });
                                $("#SubLedgerID").focus();
                            }
                            if (subLId != "") {
                                $("#SubLedgerID").val(subLId).change();
                                subLId = "";
                            }
                        }
                    });
            }
            else {
                $("#SubLedgerID").val("").change();
                $("#SubLedgerID").prop("disabled", true);
            }
        });

        $(document).on('click', "#subAddToGrid", function () {
            RemoveError();
            var item = { CostGroupId: 0, CostGroupName: "", JVNO: 0, DebOrCre: "", AccountID: 0, SubLedgerID: 0, JVAmount: 0.0, Note: "", SubLedgerName: "" }
            ValidateAddToGrid();
            if (isValid == true) {
                item.CostGroupId = $("#CostGroupId").val();
                item.CostGroupName = $("#CostGroupId :selected").text();
                item.DebOrCre = $("#DebOrCre").val();
                item.AccountID = $("#AccountHeadID").val();
                item.SubLedgerID = $("#SubLedgerID").val();
                item.SubLedgerName = $("#SubLedgerID :selected").text();
                item.JVAmount = $("#SubJVAmount").val();
                item.Note = $("#Note").val();
                addedItems.push(item);
                ClearOnSearch();
                ShowOnTable(item.AccountID);
                $("#JVAmount").prop('disabled', true);
            }
        })

        function ValidateAddToGrid() {
            isValid = true;
            if ($("#CostGroupId").val() == "") {
                setError("CostGroupId", "Cost Group is required field");
                isValid = false;
            }
            if ($("#SubLedgerID").val() == "") {
                setError("SubLedgerID", "SubLedger is required field");
                isValid = false;
            }
            if ($("#SubJVAmount").val() == "") {
                setError("SubJVAmount", "Amount is required field");
                isValid = false;
            }
            if ($("#DebOrCre").val() == "") {
                setError("DebOrCre", "Debit Or credit is required field");
                isValid = false;
            }
            if ($("#SubJVAmount").val() <= 0) {
                setError("SubJVAmount", "Amount must be grater than zero.");
                isValid = false;
            }
            $.each(addedItems, function (index, value) {
                if (value.SubLedgerID == $("#SubLedgerID").val() && value.AccountID == $("#AccountHeadID").val()) {
                    setError("SubLedgerID", "This Sub Ledger is Already Added To This Gl Account.");
                    isValid = false;
                }
            });
        }

        function ClearOnSearch() {
            $("#SubLedgerID").val("").change();
            $("#SubJVAmount").val("");
            $("#Note").val("");
            $("#SubLedgerATot").val("");
        }

        function ShowOnTable(accountId) {
            table.clear().draw();
            var totSubAmount = 0;
            $.each(addedItems, function (index, value) {
                if (accountId == value.AccountID) {
                    table.row.add([value.CostGroupName,value.SubLedgerName, value.JVAmount, value.Note,
                    '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                    value.SubLedgerID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.SubLedgerID + '"></i></a>']).draw();
                    totSubAmount += parseFloat(value.JVAmount);
                }
            });
            $("#SubLedgerATot").val(totSubAmount);
            $("#JVAmount").val(totSubAmount);
        }

        //delete Row
        $(document).on('click', '[name="deleteRow"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            var acc = "";
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems, function (index, value) {
                    if (value.SubLedgerID == item) {

                    }
                    else {
                        newItem.push(value);
                    }
                    acc = value.AccountID;
                });
                addedItems = newItem;
                ShowOnTable(acc);
            }
        });


        //edit Row
        $(document).on('click', '[name="editRow"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            var acc = "";
            $.each(addedItems, function (index, value) {
                if (value.SubLedgerID == item) {
                    //subLId = value.SubLedgerID;
                    $("#SubLedgerID").val(value.SubLedgerID).change();
                    $("#SubJVAmount").val(value.JVAmount);
                    $("#Note").val(value.Note);
                    $("#CostGroupId").val(value.CostGroupId).change();
                }
                else {
                    newItem.push(value);
                }
                acc = value.AccountID;
            });
            addedItems = newItem;
            ShowOnTable(acc);
        });

        $(document).on('click', "#addToGrid", function () {
            $("#subLedger").hide();
            $("#AccountHeadID").prop("disabled", false);
            RemoveError();
            var item = { CostGroupId: 0, CostGroupName: "", JVNO: 0, JVAmount: 0, DebOrCre: "", Description: "", AccountHeadID: 0, AccountHeadName: "" }
            ValidateAddToGrid1();
            if (isValid == true) {
                item.CostGroupId = $("#CostGroupId").val();
                item.CostGroupName = $("#CostGroupId :selected").text();
                item.JVAmount = $("#JVAmount").val();
                item.DebOrCre = $("#DebOrCre").val();
                item.Description = $("#Description").val();
                item.AccountHeadID = $("#AccountHeadID").val();
                item.AccountHeadName = $("#AccountHeadID :selected").text();
                addedItems1.push(item);
                ClearOnSearch1();
                ShowOnTable1();
                $("#JVAmount").prop('disabled', false);
            }

        });

        function ValidateAddToGrid1() {
            isValid = true;
            if ($("#CostGroupId").val() == "") {
                setError("CostGroupId", "Cost Group is required field");
                isValid = false;
            }
            if ($("#AccountHeadID").val() == "") {
                setError("AccountHeadID", "GL Account is required field");
                isValid = false;
            }
            if ($("#DebOrCre").val() == "") {
                setError("DebOrCre", "Debit Or credit is required field");
                isValid = false;
            }
            if ($("#JVAmount").val() == "") {
                setError("JVAmount", "Amount is required field");
                isValid = false;
            }
            if ($("#JVAmount").val() <= 0) {
                setError("JVAmount", "Amount must be grater than zero.");
                isValid = false;
            }
            $.each(addedItems1, function (index, value) {
                if (value.AccountHeadID == $("#AccountHeadID").val()) {
                    setError("AccountHeadID", "This GL Account is Already Added.");
                    isValid = false;
                }
            });
        }

        function ClearOnSearch1() {
            $("#AccountHeadID").val("").change();
            $("#JVAmount").val("");
            $("#DebOrCre").val("").change();
            $("#Description").val("");
            $("#SubLedgerATot").val("");
        }

        function ShowOnTable1() {
            table1.clear().draw();
            var totDebit = 0;
            var totCredit = 0;
            var totAmount = 0;
            $.each(addedItems1, function (index, value) {
                table1.row.add([value.CostGroupName,value.AccountHeadName, value.JVAmount, value.DebOrCre, value.Description,
                '<a href="#"><i class="fa fa-edit" name="editRow1" value="' +
                value.AccountHeadID + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow1" value="' + value.AccountHeadID + '"></i></a>']).draw();
                if (value.DebOrCre == "Debit") {
                    totDebit += parseFloat(value.JVAmount);
                }
                else {
                    totCredit += parseFloat(value.JVAmount);
                }
                totAmount += parseFloat(value.JVAmount);
            });
            $("#TotalDebit").val(totDebit);
            $("#TotalCredit").val(totCredit);
            $("#TotalAmount").val(totDebit);
        }

        //delete Row
        $(document).on('click', '[name="deleteRow1"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems1, function (index, value) {
                    if (value.AccountHeadID == item) {

                    }
                    else {
                        newItem.push(value);
                    }

                });
                addedItems1 = newItem;
                ShowOnTable1();
            }
        });


        //edit Row
        $(document).on('click', '[name="editRow1"]', function () {
            var item = $(this).attr("value");
            var newItem = [];
            $.each(addedItems1, function (index, value) {
                if (value.AccountHeadID == item) {
                    $.each(addedItems, function (index, v) {
                        if (v.AccountID == item) {
                            accId = v.AccountID;
                            ShowOnTable(v.AccountID);
                        }
                    });
                    $("#JVAmount").val(value.JVAmount);
                    $("#AccountHeadID").val(value.AccountHeadID).change();
                    $("#DebOrCre").val(value.DebOrCre).change();
                    $("#Description").val(value.Description);
                    $("#SubLedgerATot").val(value.JVAmount);
                    $("#CostGroupId").val(value.CostGroupId).change();
                }
                else {
                    newItem.push(value);
                }

            });
            addedItems1 = newItem;
            ShowOnTable1();
        });

        $(document).on('click', "#refresh", function () {
            window.location.reload(true);
        });

        $(document).on('click', "#save", function () {
            RemoveError();
            $("#save").prop('disabled', true);
            SetJv();
            if (addedItems1.length <= 0) {
                alert("At least One Item should be added for save.");
                $("#save").prop('disabled', false);
            }
            else {
                ValidateJv();
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveJv", "JournalVoucher")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ jv: jv, addedItems: addedItems, addedItems1: addedItems1 }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                } else if (datas == 3) {
                                    alert("Please select a valid entry date");
                                    $("#JVDate").focus();
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#JVNO").val(datas.jv.JVNO);
                                    $("#save").prop('disabled', true);
                                    $("#print").show();
                                    $("#printjvsl").show();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").prop('disabled', false);
                    }
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
        });

        function SetJv() {
            jv.JVNO = 0;
            jv.JVDate = $("#JVDate").val();
            jv.RefNo = $("#RefNo").val();
            jv.TotalAmount = $("#TotalAmount").val();
            jv.BranchId = $("#BranchId").val();
            //jv.CostGroupId = $("#CostGroupId").val();
            //jv.BussinessUnitId = $("#BussinessUnitId").val();
        }

        function ValidateJv() {
            isValid = true;
            if (jv.JVDate == "") {
                setError("JVDate", "Date is required field");
                isValid = false;
            }
            if (jv.BranchId == "") {
                setError("BranchId", "Cost Center is required field");
                isValid = false;
            }
            //if (jv.CostGroupId == "") {
            //    setError("CostGroupId", "Cost Group is required field");
            //    isValid = false;
            //}
            //if (jv.BussinessUnitId == "") {
            //    setError("BussinessUnitId", "Bussiness Unit is required field");
            //    isValid = false;
            //}
            if ($("#TotalDebit").val() != $("#TotalCredit").val()) {
                //alert("Total Debit And Total Credit Must Be Same.");
                $("#debitError").show();
                setError("DebitError", "Total Debit And Total Credit Must Be Same.");
                isValid = false;
            }
        }

        $(document).on('click', "#approve", function () {
            RemoveError();
            $("#approve").prop('disabled', true);
            SetJv();
            jv.JVNO = $("#JVNO").val();
            if (addedItems1.length <= 0) {
                alert("At least One Item should be added for save.");
                $("#approve").prop('disabled', false);
            }
            else {
                ValidateJv();
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("TransectionEffect", "JournalVoucher")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ jv: jv, addedItems: addedItems, addedItems1: addedItems1 }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#approve").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#approve").prop('disabled', true);
                                    $("#print").show();
                                    $("#printjvsl").show();
                                }
                            }
                        });
                    }
                    else {
                        $("#approve").prop('disabled', false);
                    }
                }
                else {
                    $("#approve").prop('disabled', false);
                }
            }
        });

        //search code
        $(document).on('click', '#search', function () {

            SearchClick();
            @*$("#print").show();
            $("#printjvsl").show();
             //$("#search").prop('disabled', true);
             var id = { id: $("#JVNO").val() };
             //ClearOnSearch();
             $.ajax({
                     url: '@Url.Action("GetJvById", "JournalVoucher")',
                     contentType: "application/json;charset=utf-8",
                     data: id,
                     type: 'GET',
                     dataType: 'json',
                     success: function (datas) {

                         if (datas == 0) {
                             alert("Your Entered JV No. Doesn't Exist");
                             //$("#search").prop('disabled', false);
                         }
                         else {
                             $("#save").hide();
                             $("#update").show();
                             $("#delete").show();
                             $("#JVDate").val((moment(datas.jvItem.JVDate).format("DD-MM-YYYY")));
                             $("#RefNo").val(datas.jvItem.RefNo);
                             $("#TotalAmount").val(datas.jvItem.TotalAmount);
                             $("#BranchId").val(datas.jvItem.BranchId).change();
                             $("#CostGroupId").val(datas.jvItem.CostGroupId).change();
                             addedItems = [];
                             addedItems1 = [];
                             $.each(datas.jvLineItem, function (index, value) {
                                 var item = { JVNO: 0, JVAmount: 0, DebOrCre: "", Description: "", AccountHeadID: 0, AccountHeadName: "", SubLedger : [] }
                                 item.JVAmount = value.JVAmount;
                                 item.DebOrCre = value.DebOrCre;
                                 item.Description = value.Description;
                                 item.AccountHeadID = value.AccountHeadID;
                                 item.AccountHeadName = value.AccountHeadName;
                                 addedItems1.push(item);
                             });
                             $.each(datas.jvSubledgerLineItem, function (index, value) {
                                 var item = { JVNO: 0, DebOrCre: "", AccountID: 0, SubLedgerID: 0, JVAmount: 0.0, Note: "", SubLedgerName: "" }
                                 item.DebOrCre = value.DebOrCre;
                                 item.AccountID = value.AccountID;
                                 item.SubLedgerID = value.SubLedgerID;
                                 item.SubLedgerName = value.SubLedgerName;
                                 item.JVAmount = value.JVAmount
                                 item.Note = value.Note;
                                 addedItems.push(item);
                             });

                             ShowOnTable1();
                             ShowOnTable();
                             //$("#search").prop('disabled', true);
                         }
                 },
                 error: function () {
                     alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")
                     $("#search").prop('disabled', false);
                 }
             });*@
        });

        function SearchClick() {
            $("#print").show();
            $("#printjvsl").show();
             //$("#search").prop('disabled', true);
             var id = { id: $("#JVNO").val() };
             //ClearOnSearch();
             $.ajax({
                     url: '@Url.Action("GetJvById", "JournalVoucher")',
                     contentType: "application/json;charset=utf-8",
                     data: id,
                     type: 'GET',
                     dataType: 'json',
                     success: function (datas) {

                         if (datas == 0) {
                             alert("Your Entered JV No. Doesn't Exist");
                             //$("#search").prop('disabled', false);
                         }
                         else {
                             $("#save").hide();
                             if (fromNotificationJvNo == "") {
                                 $("#update").show();
                                 $("#delete").show();
                             }
                             $("#JVDate").val((moment(datas.jvItem.JVDate).format("DD-MM-YYYY")));
                             $("#RefNo").val(datas.jvItem.RefNo);
                             $("#TotalAmount").val(datas.jvItem.TotalAmount);
                             $("#BranchId").val(datas.jvItem.BranchId).change();
                             //$("#CostGroupId").val(datas.jvItem.CostGroupId).change();
                             $("#BussinessUnitId").val(datas.jvItem.BussinessUnitId).change();
                             addedItems = [];
                             addedItems1 = [];
                             $.each(datas.jvLineItem, function (index, value) {
                                 var item = { CostGroupId: 0, CostGroupName: "", JVNO: 0, JVAmount: 0, DebOrCre: "", Description: "", AccountHeadID: 0, AccountHeadName: "", SubLedger: [] }
                                 item.JVAmount = value.JVAmount;
                                 item.DebOrCre = value.DebOrCre;
                                 item.Description = value.Description;
                                 item.AccountHeadID = value.AccountHeadID;
                                 item.AccountHeadName = value.AccountHeadName;
                                 item.CostGroupId = value.CostGroupId;
                                 item.CostGroupName = value.CostGroupName;
                                 addedItems1.push(item);
                             });
                             $.each(datas.jvSubledgerLineItem, function (index, value) {
                                 var item = { CostGroupId: 0, CostGroupName: "", JVNO: 0, DebOrCre: "", AccountID: 0, SubLedgerID: 0, JVAmount: 0.0, Note: "", SubLedgerName: "" }
                                 item.DebOrCre = value.DebOrCre;
                                 item.AccountID = value.AccountID;
                                 item.SubLedgerID = value.SubLedgerID;
                                 item.SubLedgerName = value.SubLedgerName;
                                 item.JVAmount = value.JVAmount
                                 item.Note = value.Note;
                                 item.CostGroupId = value.CostGroupId;
                                 item.CostGroupName = value.CostGroupName;
                                 addedItems.push(item);
                             });

                             ShowOnTable1();
                             ShowOnTable();
                             //$("#search").prop('disabled', true);
                         }
                 },
                 error: function () {
                     alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")
                     $("#search").prop('disabled', false);
                 }
             });
        }

        //function ClearOnSearch() {
        //    $("#JVDate").val("");
        //    $("#RefNo").val("");
        //    $("#TotalAmount").val("");
        //    $("#BranchId").val("").change();
        //    $("#CostGroupId").val("").change();
        //}

        $(document).on('click', "#update", function () {
            RemoveError();
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            SetJv();
            jv.JVNO = $("#JVNO").val();

            if (addedItems1.length <= 0) {
                alert("At least One Item should be added for save.");
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
            else {
                ValidateJv();
                if (isValid == true) {
                    if (confirm('Do you want to Update')) {
                    $.ajax({
                        url: '@Url.Action("UpdateJv", "JournalVoucher")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ jv: jv, addedItems: addedItems, addedItems1: addedItems1 }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Failed To Update.");
                                $("#update").prop('disabled', false);
                                $("#delete").prop('disabled', false);
                            }
                            else if (datas.Message == 2) {
                                alert("This Payment Voucher Is Already Approve, so Update is not Applicable for this Voucher.");
                                $("#update").prop('disabled', false);
                                $("#delete").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#update").prop('disabled', true);
                                $("#delete").prop('disabled', true);
                            }
                        }
                    });
                }
                    else {
                        $("#update").prop('disabled', false);
                        $("#delete").prop('disabled', false);
                    }
                }
                else {
                    $("#update").prop('disabled', false);
                    $("#delete").prop('disabled', false);
                }
            }
        });

        //delete code
        $(document).on('click', '#delete', function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#JVNO").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteJvByid", "JournalVoucher")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#delete").prop('disabled', false);
                            $("#update").prop('disabled', false);
                        }
                        else if (datas.Message == 2) {
                            alert("This Payment Voucher Is Already Approve, so Update is not Applicable for this Voucher.");
                            $("#update").prop('disabled', false);
                            $("#delete").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });

    </script>
}

