@model BEEERP.Models.ViewModel.Sales.Report.InventoryReportVModel

@{
    ViewBag.Title = "SparePartsReportView";
    int i = 0;
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        /*padding: 15px 32px;*/
        /*text-align: center;*/
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 8px;
        min-width: 400px;
        /*height: 12px;*/
    }

        .btn:hover {
            background-color: #82E0AA;
        }
</style>

<h3 style="text-align:center">Spare Parts Report</h3>

@using (Html.BeginForm("SparePartsReportView", "SparePartsReport", FormMethod.Post, new { id = "report", target = "_blank" }))
{
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="col-md-6">
                        <div class="box">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA">
                                <h4 class="box-title">Select Date Range and Parameters</h4>
                            </div>
                            <div class="box-body">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SPTypeID, "SP Type", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.SPTypeID, (IEnumerable<SelectListItem>)ViewBag.SPType, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.SPTypeID)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CompanyID, "Company", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.CompanyID, (IEnumerable<SelectListItem>)ViewBag.Company, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.CompanyID)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.StoreId, "Store", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.StoreId, (IEnumerable<SelectListItem>)ViewBag.Store, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.StoreId)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SPBoxID, "Box", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.SPBoxID, (IEnumerable<SelectListItem>)ViewBag.Store, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.SPBoxID)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.GroupID, "Group", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.GroupID, (IEnumerable<SelectListItem>)ViewBag.GroupId, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.GroupID)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ItemID, "Item", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.ItemID, (IEnumerable<SelectListItem>)ViewBag.SPDept, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.ItemID)
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.MachineID, "Machine", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(m => m.MachineID, (IEnumerable<SelectListItem>)ViewBag.Machine, new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.MachineID)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.FromDate, "From Date", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6 date input-group" , style="padding-left:15px;padding-right:15px;">
                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.FromDate)
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ToDate, "To Date", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6 date input-group" , style="padding-left:15px;padding-right:15px;">
                                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.ToDate)
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                    <div style="padding-left:280px;">

                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.AsOnDate, "As on Date", new { @class = "col-md-4 control-label" })
                                    <div class="col-sm-6 date input-group" , style="padding-left:15px;padding-right:15px;">
                                        @Html.TextBoxFor(m => m.AsOnDate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                        @Html.ValidationMessageFor(m => m.AsOnDate)
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA">
                                <h4 class="box-title">SP Inventory Reports</h4>
                            </div>
                            <div class="box-body">
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="showdger" type="submit">@i. Show Spare Parts Item Ledger</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="TypewiseSPISummary" type="submit">@i. Type Wise SP Inventory Summary</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="CompanywiseSPISummary" type="submit">@i. Company Wise SP Inventory Summary</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="StorewiseSPISummary" type="submit">@i. Store Wise SP Inventory Summary</button>
                                </div>
                            </div>
                        </div>
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA">
                                <h4 class="box-title">SP Receive Reports</h4>
                            </div>
                            <div class="box-body">
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="dtwisesspissueSummary" type="submit">@i. Date Wise SP Receive Summary</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="TypewiseSPIusseSummary" type="submit">@i. Type Wise SP Receive Summary</button>
                                </div>
                            </div>
                        </div>
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA">
                                <h4 class="box-title">SP Issue Reports</h4>
                            </div>
                            <div class="box-body">
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="dtwisesspissueSummary" type="submit">@i. Date Wise SP Issue Summary</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="TypewiseSPIusseSummary" type="submit">@i. Type Wise SP Issue Summary</button>
                                </div>
                            </div>
                        </div>
                        <div class="box ">
                            <div class="box-header with-border box-head-back" style="background: #82E0AA">
                                <h4 class="box-title">SP Damage Reports</h4>
                            </div>
                            <div class="box-body">
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="dtwisesspissueSummary" type="submit">@i. Date Wise SP Damage Summary</button>
                                </div>
                                <div class="form-group" style="text-align:center;">
                                    @{
                                        i = i + 1;
                                    }
                                    <button class="btn skin-blue" id="TypewiseSPIusseSummary" type="submit">@i. Type Wise SP Damage Summary</button>
                                </div>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*<input type="hidden" id="Depot" name="Depot" />*@
}

<input type="hidden" id="message" value="false" />
@section scripts{
    <script src="~/Scripts/Search.js"></script>
    <script src="~/Scripts/ReportSearch.js"></script>
    <script>
        $(document).ready(function () {
            $(".select2").select2();
            $('.date').datepicker({
                autoclose: true,
                format:"dd-mm-yyyy"
            });
            var isValid = "";




            function validateOnStorehWiseItem() {
                isValid = "";
                RemoveError();
                if ($("#StoreId").val() == "") {
                    setError("StoreId", "Store is Required Field");
                    isValid = "required";
                }

            }

            //   Type wise sp inventory summary

            $(document).on('click', "#TypewiseSPISummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/SparePartsReport/TypeWiseSPInvSummary")
                        $("#report").submit();
                    }
                }
            });

            //   Company wise sp inventory summary

            $(document).on('click', "#CompanywiseSPISummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/SparePartsReport/CompanyWiseSPInvSummary")
                        $("#report").submit();
                    }
                }
            });



            //   Store wise sp inventory summary

            $(document).on('click', "#StorewiseSPISummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/SparePartsReport/StoreWiseSPInvSummary")
                        $("#report").submit();
                    }
                }
            });



            //   Date Wise SP Issue Summary

            $(document).on('click', "#dtwisesspissueSummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/SparePartsReport/DateWiseSPIssueSummary")
                        $("#report").submit();
                    }
                }
            });

            //$(document).on('click', "#FgitemBalance", function (event) {
            //    event.preventDefault();
            //    validateOnStorehWiseItem();
            //    if (isValid == "") {
            //        if ($("#message").val() != "true") {

            //            $("#report").attr("action", "/StoreFGReport/GetStoreWiseItemQty")
            //            $("#report").submit();
            //        }
            //    }
            //});


            $(document).on('click', "#FgitemBalance", function (event) {
                event.preventDefault();
                if ($("#StoreId").val() == "") {
                    setError("StoreId", "Please select the store from the list");
                    isValid = false;
                } else {

                    $("#report").attr("action", "/StoreFGReport/GetStoreWiseItemQty");
                    $("#report").submit();
                }
            });
            $(document).on('click', "#ItemInventorySummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/StoreFGReport/GetItemWiseInventorySummary")
                        $("#report").submit();
                    }
                }
            });
            $(document).on('click', "#ItemInventorySummary", function (event) {
                event.preventDefault();
                //if ($("#StoreId").val() == "") {
                //    setError("StoreId", "Please select the store from the list");
                //    isValid = false;
                //} else {

                $("#report").attr("action", "/StoreFGReport/GetItemWiseInventorySummary");
                    $("#report").submit();
                //}
            });
            $(document).on('click', "#InvSummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/StoreFGReport/GetInventorySummaryByAllStore")
                        $("#report").submit();
                    }
                }
            });
            $(document).on('click', "#StoreWiseInventoryValueSummary", function () {
                event.preventDefault();

                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/StoreFGReport/GetStoreWiseInventoryValueSummary")
                        $("#report").submit();
                    }
                }
            });

            $(document).on('change', "#GroupID", function () {
                var id = { groupId: $(this).val() };
            if (id.groupId != "") {
                    $.ajax({
                        url: '@Url.Action("GetItemByGroupId", "StockAdjustment")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {

                            $("#ItemID").empty();
                            $("#ItemID").prop("disabled", false);
                            $.each(datas, function (index, value) {
                                $("#ItemID").append($('<option />', {
                                    value: value.Value,
                                    text: value.Text
                                }));
                            });
                        }
                    });
                }
                else {
                $("#ItemID").empty();
                $("#ItemID").prop("disabled", true);
                }
            });
            $(document).on('click', "#showLedger", function () {
                //ValidateReportSearchParam(["AsOnDate", "StoreId", "Item"]);
                event.preventDefault();
                validateOnItemLedger()

                if (isValid == "") {
                        $("#report").attr("action", "/StoreFGReport/GetItemLedgerReport")
                        $("#report").submit();
                }

            });


            $(document).on('click', "#StockSummary", function () {

                event.preventDefault();
                if (isValid == "") {
                    if ($("#message").val() != "true") {
                        $("#report").attr("action", "/StoreFGReport/GetStockSumamry")
                        $("#report").submit();
                    }
                }
            });

            //$(document).on('click', "#itemWiseTransactionSummary", function (event) {
            //    ValidateReportSearchParam(["StoreId", "FromDate", "ToDate"]);
            //    event.preventDefault();
            //    if (isValid == "") {
            //        if ($("#message").val() != "true") {
            //            $("#report").attr("action", "/StoreFGReport/GetItemWiseTransactionSummary")
            //            $("#report").submit();
            //        }
            //    }
            //});
            //$(document).on('click', "#IssueReceiveSumamry", function (event) {
            //    ValidateReportSearchParam(["StoreId", "StoreFor", "FromDate", "ToDate"]);
            //    event.preventDefault();
            //    if (isValid == "") {
            //        if ($("#message").val() != "true") {
            //            $("#report").attr("action", "/StoreFGReport/GetIssueReceiveSumamry")
            //            $("#report").submit();
            //        }
            //    }
            //});
            //$(document).on('click', "#IssueReceiveDetails", function (event) {
            //    ValidateReportSearchParam(["StoreId", "StoreFor", "FromDate", "ToDate"]);
            //    event.preventDefault();
            //    if (isValid == "") {
            //        if ($("#message").val() != "true") {
            //            $("#report").attr("action", "/StoreFGReport/GetIssueReceiveDetails")
            //            $("#report").submit();
            //        }
            //    }
            //});
            //$(document).on('click', "#fgItemList", function (event) {
            //    event.preventDefault();
            //        if ($("#message").val() != "true") {
            //            $("#Depot").val($("#DepotId").val());
            //            $("#report").attr("action", "/StoreFGReport/GetFGItemList")
            //            $("#report").submit();
            //        }
            //});

            //$(document).on('click', "#inventoryBalancheSummary", function (event) {
            //    event.preventDefault();
            //    if ($("#message").val() != "true") {
            //        $("#report").attr("action", "/StoreFGReport/GetInventoryBalancheSummary")
            //        $("#report").submit();
            //    }
            //});
            function validateOnItemLedger() {
                var store = $("#StoreId").val();
                RemoveError();
                isValid = "";
                if (store == "") {
                    setError("StoreId", "Please select a Store from the list");
                    isValid = "required";
                }
                if ($("#ItemID").val()=="") {
                    setError("ItemID", "Please select an Item from the list");
                    isValid = "required";
                }

                //if ($("#FromDate").val() == "") {
                //    setError("FromDate", "From Date is Required Field");
                //    isValid = "required";
                //}

                //if ($("#ToDate").val() == "") {
                //    setError("ToDate", "To Date is Required Field");
                //    isValid = "required";
                //}
                //var fromDate = $('#FromDate').val().split("-");
                //var f = new Date(fromDate[2], fromDate[1] - 1, fromDate[0]);

                //var toDate = $('#ToDate').val().split("-");
                //var t = new Date(toDate[2], toDate[1] - 1, toDate[0]);

                //if (f > t) {
                //    setError("FromDate", "From Date can't greater than To Date");
                //    isValid = "required";
                //}

            }

            //function validateOnStoreWiseFG() {
            //    var store = $("#StoreId").val();
            //    RemoveError();
            //    isValid = "";
            //    if (store == "") {
            //        setError("StoreId", "Please select a Store from the list");
            //        isValid = "required";
            //    }
            //    if ($("#AsOnDate").val() == "") {
            //        setError("AsOnDate", "As On Date is Required Field");

            //        isValid = "required";
            //    }
            //}
            //function validateOnStockSummary() {
            //    RemoveError();
            //    isValid = "";
            //    if ($("#StoreId").val() == "") {
            //        setError("StoreId", "Please select a Store from the list");
            //        isValid = "required";
            //    }
            //}



        });
    </script>
}



