@model BEEERP.Models.ViewModel.Account.MRPAVModel
@{
    ViewBag.Title = "MRPA";
}

<style>
    h3 {
        background: #F1C40F;
        border-radius: 8px;
    }

    .btn {
        background-color: #2980B9;
        border: 2px solid groove;
        color: white;
        border-radius: 8px;
        min-width: 80px
    }

        .btn:hover {
            background-color: #82E0AA;
            color: #02110E;
        }
    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>
<h3 class="col-md-12" style="text-align:center">Money Requisition Purchase Adjustment (MRPA) Entry</h3>
<form id="report" target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back"  style="background: #82E0AA;">
                                    <h4 class="box-title">MRPA Details</h4>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.MRPANo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%;">
                                                @Html.TextBoxFor(m => m.MRPANo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.MRPANo, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn btn-primary" style="min-width: 50px" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmployeeID, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%;">
                                                @Html.TextBoxFor(m => m.EmployeeID, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.EmployeeID, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="go" id="go" value="Go" class="btn btn-primary" style="min-width: 20px" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmpName, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.EmpName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.EmpName, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.EmpDesignation, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.EmpDesignation, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.EmpDesignation, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.MRPADate, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%">
                                                @Html.TextBoxFor(m => m.MRPADate, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.MRPADate, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group"></div>
                                        <div class="form-group"></div>
                                        <div class="form-group"></div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PreviousBal, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.PreviousBal, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.PreviousBal, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CurrentBal, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.CurrentBal, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.CurrentBal, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box ">
                                        <div class="box-body">
                                            <div class="col-md-2"></div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.SupplierID, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.SupplierID, (IEnumerable<SelectListItem>)ViewBag.Supplier, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.SupplierID, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.AdjustmentAmnt, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.AdjustmentAmnt, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.AdjustmentAmnt, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.RefNo, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.Descriptions, "Description", new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextAreaFor(m => m.Descriptions, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.Descriptions, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-3"></div>
                                        </div>
                                    </div>
                                    <div class="box">
                                        <div class="box-footer">
                                            <div class="form-group" , style="text-align:center">
                                                <input type="button" value="Save" id="save" class="btn btn-primary" style="padding-left:20px;" />
                                                <input type="button" name="update" id="update" value="Update" class="btn btn-primary" />
                                                <input type="button" name="delete" id="delete" value="Delete" class="btn btn-primary" />
                                                <input type="button" name="refresh" id="refresh" value="Refresh" class="btn btn-primary" />
                                                <input type="button" name="print" id="print" value="Print" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="pBal" />
</form>

@section scripts
{
    <script src="~/Scripts/AccountModule/MRPAInputFocus.js"></script>
    <script>
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });

        $(".select2").select2();
        var mRPA = { MRPANo: 0, MRPADate: "", EmployeeID: 0, SupplierID: 0, AdjustmentAmnt: 0.0, RefNo: "", Descriptions: "", PreviousBal: 0 }
        var isValid = true;
        var isSearch = false;

        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $("#print").hide();
            $("#EmployeeID").focus();
        });

        EnterPress();

        $(document).on('click', "#refresh", function () {
            location.reload();
        });

        $(document).on('click', "#go", function () {
            var id = { empId: $("#EmployeeID").val() };
            if (id.empId != "") {
                 $.ajax({
                        url: '@Url.Action("GetEmpDetails", "MRPA")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#EmpName").val(datas.empDetails.EmpName);
                            $("#EmpDesignation").val(datas.empDetails.EmpDesignation);
                            if (isSearch == false) {
                                $("#PreviousBal").val(datas.PreviousBal);
                            }
                        }
                    });
            }
        });

        $(document).on('focusout', "#AdjustmentAmnt", function () {
            if ($("#AdjustmentAmnt").val() <= $("#PreviousBal").val()) {
                $("#CurrentBal").val($("#PreviousBal").val() - $("#AdjustmentAmnt").val());
            }
        });

        $(document).on('click', "#save", function () {
            RemoveError();
            //$("#save").prop('disabled', true);
            SetMRPA();
            ValidateMRPA();
            if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveMRPA", "MRPA")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ mRPA: mRPA }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#MRPANo").val(datas.mRPA.MRPANo);
                                    $("#save").prop('disabled', true);
                                    $("#print").show();
                                }
                            }
                        });
                    }
                    else {
                        $("#save").prop('disabled', false);
                    }
            }
            else {
                $("#save").prop('disabled', false);
            }
        });

        $(document).on('click', "#search", function () {
            isSearch = true;
            var id = { id: $("#MRPANo").val() };
            //ClearOnSearch();
            $.ajax({
                    url: '@Url.Action("GetMRPAById", "MRPA")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas == 0) {
                            alert("Your entered MRPA No. Doesn't exist");
                        }
                        else {
                            $("#save").hide();
                            $("#update").show();
                            $("#delete").show();
                            $("#print").show();
                            $("#MRPADate").val((moment(datas.mrpaItem.MRPADate).format("DD-MM-YYYY")));
                            $("#MRPANo").val(datas.mrpaItem.MRPANo);
                            $("#EmployeeID").val(datas.mrpaItem.EmployeeID);
                            $("#SupplierID").val(datas.mrpaItem.SupplierID).change();
                            $("#AdjustmentAmnt").val(datas.mrpaItem.AdjustmentAmnt);
                            $("#RefNo").val(datas.mrpaItem.RefNo);
                            $("#Descriptions").val(datas.mrpaItem.Descriptions);
                            $("#PreviousBal").val(datas.mrpaItem.PreviousBal);
                            $("#CurrentBal").val(datas.mrpaItem.PreviousBal - datas.mrpaItem.AdjustmentAmnt);
                            $("#go").click();
                        }
                },
                error: function () {
                    alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")
                    $("#search").prop('disabled', false);
                }
            });
        });

        $(document).on('click', "#update", function () {
            RemoveError();
            $("#update").prop('disabled', true);
            SetMRPA();
            mRPA.MRPANo = $("#MRPANo").val();
            ValidateMRPA();
            if (confirm('Do you want to Update')) {
                if (isValid == true) {
                $.ajax({
                    url: '@Url.Action("UpdateMRPA", "MRPA")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ mRPA: mRPA }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Failed To Update.");
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Sucessfully Updated.");
                            $("#update").prop('disabled', true);
                        }
                    }
                });
            }
                else {
                    $("#update").prop('disabled', false);
                }
            }
            else {
                $("#update").prop('disabled', false);
            }
        });

        $(document).on('click', "#delete", function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#MRPANo").val();
            if (confirm('Are you sure you want to delete this from the database?')) {
                $.ajax({
                    url: '@Url.Action("DeleteMRPAByid", "MRPA")',
                    contentType: "application/json;charset=utf-8",
                    data: { id: id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 0) {
                            alert("Delete failed.");
                            $("#delete").prop('disabled', false);
                            $("#update").prop('disabled', false);
                        }
                        else {
                            alert("Delete Successfull");
                            location.reload();
                        }
                    }
                });
            }
            else {
                $("#update").prop('disabled', false);
                $("#delete").prop('disabled', false);
            }
        });

        $(document).on('click', "#print", function (event) {
            event.preventDefault();
            if ($("#message").val() != "true") {
                $("#report").attr("action", "/MRPA/PrintReviewMRPA")
                $("#report").submit();
            }
        });

        function SetMRPA() {
            mRPA.MRPANo = 0;
            mRPA.MRPADate = $("#MRPADate").val();
            mRPA.EmployeeID = $("#EmployeeID").val();
            mRPA.SupplierID = $("#SupplierID").val();
            mRPA.AdjustmentAmnt = $("#AdjustmentAmnt").val();
            mRPA.RefNo = $("#RefNo").val();
            mRPA.Descriptions = $("#Descriptions").val();
            mRPA.PreviousBal = $("#PreviousBal").val();
        }

        function ValidateMRPA() {
            isValid = true;
            if (mRPA.EmployeeID == "") {
                setError("EmployeeID", "Employee ID is required field");
                isValid = false;
            }
            if (mRPA.MRPADate == "") {
                setError("MRPADate", "Date is required field");
                isValid = false;
            }
            if (mRPA.SupplierID == "") {
                setError("SupplierID", "Supplier ID is required field");
                isValid = false;
            }
            if (mRPA.AdjustmentAmnt == "") {
                setError("AdjustmentAmnt", "Adjustment Amount is required field");
                isValid = false;
            }
            if ($("#AdjustmentAmnt").val() <= 0) {
                setError("AdjustmentAmnt", "Adjustment Amount Must be Grater than zero.");
            }
            //if ($("#AdjustmentAmnt").val() > $("#PreviousBal").val()) {
            //    setError("AdjustmentAmnt", "Adjustment Amount can not be grater than Previous Balance.");
            //    isValid = false;
            //}
            if (mRPA.EmployeeID != "") {
                if ($("#EmpName").val() == "") {
                    setError("EmpName", "Employee Name is required field");
                    isValid = false;
                }
                if ($("#EmpDesignation").val() == "") {
                    setError("EmpDesignation", "Employee Designation is required field");
                    isValid = false;
                }
            }
        }

        
    </script>

}

