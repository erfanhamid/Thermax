@model BEEERP.Models.ViewModel.StoreFG.IssueRMToFGVModel
@{
    ViewBag.Title = "IssueRMToFG";
}

<style>
    .btn:hover {
        color: blue !important;
    }

    .btn:focus {
        background-color: aqua !important;
    }

    .select2-selection--single:focus {
        background-color: aqua !important;
    }
</style>

<form id="report" target="_blank">
    <div class="content">
        <div class="row">
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box ">
                                <div class="box-header with-border box-head-back" style="text-align:center;">
                                    <h3 class="box-title">Issue RM To FG (IRTF)</h3>
                                </div>
                                <div class="box-body">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.IRTFNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%;">
                                                @Html.TextBoxFor(m => m.IRTFNo, new { @class = "form-control", @type = "number" })
                                                @Html.ValidationMessageFor(m => m.IRTFNo, "", new { @style = "color: red" })
                                                <div class="input-group-btn">
                                                    <input type="button" name="search" id="search" value="Search" class="btn skin-blue" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Date, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8 input-group" style="padding-left:2%; padding-right:2%">
                                                @Html.TextBoxFor(m => m.Date, new { @class = "form-control date", @Value = DateTime.Now.ToString("dd-MM-yyyy") })
                                                @Html.ValidationMessageFor(m => m.Date, "", new { @style = "color: red" })
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.RefNo, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.RefNo, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.RefNo, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalRMQty, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalRMQty, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalRMQty, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalRMStanderdCost, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalRMStanderdCost, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalRMStanderdCost, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalFGQty, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalFGQty, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalFGQty, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.TotalFGStanderdCost, new { @class = "col-md-4 control-label" })
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.TotalFGStanderdCost, new { @class = "form-control", @disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.TotalFGStanderdCost, "", new { @style = "color: red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="col-md-6" style="padding-left:0%;">
                                        <div class="box">
                                            <div class="box-header with-border box-head-back" style="text-align:center;">
                                                <h3 class="box-title">Issue RM</h3>
                                            </div>
                                            <div class="box-body">
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.IssueFrom, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.IssueFrom, (IEnumerable<SelectListItem>)ViewBag.RMStore, new { @class = "form-control select2", @disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.IssueFrom, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.RMItemId, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.RMItemId, (IEnumerable<SelectListItem>)ViewBag.RMItem, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.RMItemId, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.RemQty, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.RemQty, new { @class = "form-control", @disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.RemQty, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.RMStanderdCost, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.RMStanderdCost, new { @class = "form-control", @disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.RMStanderdCost, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.RMQty, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.RMQty, new { @class = "form-control", @type = "number" })
                                                        @Html.ValidationMessageFor(m => m.RMQty, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6" style="padding-right:0%;">
                                        <div class="box" style="padding-bottom:6%;">
                                            <div class="box-header with-border box-head-back" style="text-align:center;">
                                                <h3 class="box-title">Receive FG</h3>
                                            </div>
                                            <div class="box-body">
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.IssueTo, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.IssueTo, (IEnumerable<SelectListItem>)ViewBag.FGStore, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.IssueTo, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.FGItemId, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.FGItemId, (IEnumerable<SelectListItem>)ViewBag.FgItem, new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(m => m.FGItemId, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.FGStanderdCost, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.FGStanderdCost, new { @class = "form-control", @disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.FGStanderdCost, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.FGQty, new { @class = "col-md-4 control-label" })
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.FGQty, new { @class = "form-control", @type = "number" })
                                                        @Html.ValidationMessageFor(m => m.FGQty, "", new { @style = "color: red" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group" style="text-align:center;">
                                    <button type="button" id="addToGrid" name="addToGrid" style="height:300%; font-size:100%;" class="btn">Add To Grid</button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="box ">
                                        <div class="box-header with-border box-head-back" style="text-align:center;">
                                            <h3 class="box-title">Issue RM To FG List</h3>
                                        </div>
                                        <div class="box-body">
                                            <table class="table table-responsive" id="DSIAlist">
                                                <thead>
                                                    <tr>
                                                        <th>RM Item</th>
                                                        <th>RM Pack Size</th>
                                                        <th>RM Qty</th>
                                                        <th>RM Standerd Cost</th>
                                                        <th>RM Total</th>
                                                        <th>FG Item</th>
                                                        <th>FG Pack Size</th>
                                                        <th>FG Qty</th>
                                                        <th>FG Standerd Cost</th>
                                                        <th>FG Total</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-8" style="text-align:center;">
                                            <input type="button" value="Save" id="save" class="btn skin-blue" style="padding-left:20px;" />
                                            <input type="button" name="update" id="update" value="Update" class="btn skin-blue" />
                                            <input type="button" name="delete" id="delete" value="Delete" class="btn skin-blue" />
                                            <input type="button" name="clear" id="clear" value="Clear" class="btn skin-blue" />
                                            <input type="button" name="refresh" id="refresh" value="Refresh" class="btn skin-blue" />
                                            <input type="button" name="print" id="print" value="Print" class="btn skin-blue" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="pacSizeIssue" />
    <input type="hidden" id="pacSizeTo" />
</form>


@section Scripts
{
    <script src="~/Scripts/StoreFG/IssueRmToFgInputFocus.js"></script>
    <script>
        $('.date').datepicker({
            autoclose: true,
            format: 'dd-mm-yyyy',
        });

        var table = $('#DSIAlist').DataTable({
            'paging': false,
            'lengthChange': false,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': false
        });

        EnterPress();

        $(document).ready(function () {
            $("#update").hide();
            $("#delete").hide();
            $("#clear").hide();
            $("#print").hide();
            $("#IssueFrom").val(@ViewBag.FloorId).change();
            //$("#Date").focus();
            $("#RefNo").focus();
        });

        $(".select2").select2();

        var isValid = true;
        var addedItems = [];
        var isSearch = false;
        var itemIdOut = "";
        var qtyout = "";
        var isDesabledIssueTo = false;

        var irf = { IRTFNo: 0, Date: "", IssueFrom: 0, IssueTo: 0, RefNo: "", Description: "", TotalRMQty: 0, TotalRMStanderdCost: 0, TotalFGQty: 0, TotalFGStanderdCost: 0 };

        $(document).on('click', "#refresh", function () {
            location.reload();
        });

        //item change reaction
        $(document).on('change', "#RMItemId", function () {
            RemoveError();
            $("#pacSizeIssue").val("");
            $("#RMStanderdCost").val("");
            $("#RemQty").val("");
            $("#RMQty").val("");

            var id = { itemId: $(this).val(), storeId: $("#IssueFrom").val() };

                if (id.itemId != "") {
                    $.ajax({
                        url: '@Url.Action("GetItemRemainQty", "Sales")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#pacSizeIssue").val(datas.PacSize);
                            $("#RMStanderdCost").val(datas.SCost);
                            $("#RemQty").val(datas.RemQty);
                        }
                    });
                }
        });

        //item change reaction
        $(document).on('change', "#FGItemId", function () {
            RemoveError();
            $("#pacSizeTo").val("");
            $("#FGStanderdCost").val("");
            $("#FGQty").val("");

            var id = { itemId: $(this).val(), storeId: $("#IssueTo").val() };

                if (id.itemId != "") {
                    $.ajax({
                        url: '@Url.Action("GetItemRemainQty", "Sales")',
                        contentType: "application/json;charset=utf-8",
                        data: id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            $("#pacSizeTo").val(datas.PacSize);
                            $("#FGStanderdCost").val(datas.SCost);
                        }
                    });
                }
        });

        //add to grid
         $(document).on('click', "#addToGrid", function () {
             RemoveError();
             var item = { IRTFNo: 0, RMItemName: "", RMItemId: 0, PacSizeIssue: "", RMQty: 0, RMStanderdCost: 0, RMTotal: 0, FGItemName: "", FGItemId: 0, PacSizeTo: "", FGQty: 0, FGStanderdCost: 0, FGTotal: 0 };
             ValidateAddToGrid();
             if (isValid == true) {
                 item.IRTFNo = 0;
                 item.RMItemName = $("#RMItemId :selected").text();
                 item.RMItemId = $("#RMItemId").val();
                 item.PacSizeIssue = $("#pacSizeIssue").val();
                 item.RMQty = $("#RMQty").val();
                 item.RMStanderdCost = $("#RMStanderdCost").val();
                 item.RMTotal = $("#RMStanderdCost").val() * $("#RMQty").val();

                 item.FGItemName = $("#FGItemId :selected").text();
                 item.FGItemId = $("#FGItemId").val();
                 item.PacSizeTo = $("#pacSizeTo").val();
                 item.FGQty = $("#FGQty").val();
                 item.FGStanderdCost = $("#FGStanderdCost").val();
                 item.FGTotal = $("#FGStanderdCost").val() * $("#FGQty").val() ;

                 addedItems.push(item);
                 ClearOnSearch();
                 ShowOnTable();

                 $("#IssueTo").prop('disabled', true);
                 isDesabledIssueTo = true;
                 EnterPress(isDesabledIssueTo);
                 $("#RMItemId").focus();

             }
        });

        //delete Row
        $(document).on('click', '[name="deleteRow"]', function () {
            RemoveError();
            var item = $(this).attr("value");
            var newItem = [];
            if (confirm('Are you sure you want to delete this from Grid ?')) {
                $.each(addedItems, function (index, value) {
                    if (value.RMItemId == item) {

                    }
                    else {
                        newItem.push(value);
                    }

                });
                addedItems = newItem;
                ShowOnTable();
            }
        });


        //edit Row
        $(document).on('click', '[name="editRow"]', function () {
            RemoveError();
            var item = $(this).attr("value");
            var newItem = [];
            $.each(addedItems, function (index, value) {
                if (value.RMItemId == item) {

                    $("#RMItemId").val(value.RMItemId).change();
                    $("#RMQty").val(value.RMQty);
                    $("#FGItemId").val(value.FGItemId).change();
                    $("#FGQty").val(value.FGQty);
                    //qtyout = value.QtyOut;
                    //$("#QtyOut").val(value.QtyOut);

                    //$("#RemQtyOut").val($("#qtyOut").val() - value.QtyOut);

                    //itemIdOut = value.ItemIdOut;
                    if (isSearch == false) {
                        $("#IssueTo").prop('disabled', false);
                    }
                    else {
                        $("#IssueTo").prop('disabled', true);
                    }

                }
                else {
                    newItem.push(value);
                }

            });
            addedItems = newItem;
            ShowOnTable();
        });

        //save code
        $(document).on('click', '#save', function () {
            RemoveError();
            $("#save").prop('disabled', true);
            SetIRF();
            if (addedItems.length <= 0) {
                alert("At least One Item should be added for save.");
                $("#save").prop('disabled', false);
            }
            else {
                ValidateIRF();
                if (isValid == true) {
                    if (confirm('Do you want to save')) {
                        $.ajax({
                            url: '@Url.Action("SaveIRF", "IssueRMToFG")',
                            contentType: "application/json;charset=utf-8",
                            data: JSON.stringify({ irf: irf, addedItems: addedItems }),
                            type: 'POST',
                            dataType: 'json',
                            success: function (datas) {
                                if (datas == 0) {
                                    alert("Failed To Saved.");
                                    $("#save").prop('disabled', false);
                                }
                                else {
                                    alert("Sucessfully Saved.");
                                    $("#IRTFNo").val(datas.irf.IRTFNo);
                                    $("#print").show();
                                    $("#save").prop('disabled', true);
                                }
                            }
                        });
                    }
                    else {
                        $("#save").prop('disabled', false);
                    }
                }
                else {
                    $("#save").prop('disabled', false);
                }
            }
        });

        //search code
        $(document).on('click', '#search', function () {
            RemoveError();
            //$("#search").prop('disabled', true);
            isSearch = true;
            var id = { id: $("#IRTFNo").val() };
            ClearOnSearch();
            if ($("#IRTFNo").val() != "") {
                $.ajax({
                    url: '@Url.Action("GetIRTFById", "IssueRMToFG")',
                    contentType: "application/json;charset=utf-8",
                    data: id,
                    type: 'GET',
                    dataType: 'json',
                    success: function (datas) {

                        if (datas == 0) {
                            alert("Your entered IRTF No. Doesn't exist");
                            //$("#search").prop('disabled', false);
                        }
                        else {
                            $("#save").hide();
                            $("#update").show();
                            $("#delete").show();
                            $("#Date").val((moment(datas.irfItem.Date).format("DD-MM-YYYY")));
                            $("#IRTFNo").val(datas.irfItem.IRTFNo);
                            $("#IssueTo").val(datas.irfItem.IssueTo).change();
                            $("#IssueFrom").val(datas.irfItem.IssueFrom).change();
                            $("#RefNo").val(datas.irfItem.RefNo);
                            $("#Description").val(datas.irfItem.Description);
                            addedItems = [];

                            $.each(datas.irfLineItem, function (index, value) {
                                var item = { IRTFNo: 0, RMItemName: "", RMItemId: 0, PacSizeIssue: "", RMQty: 0, RMStanderdCost: 0, RMTotal: 0, FGItemName: "", FGItemId: 0, PacSizeTo: "", FGQty: 0, FGStanderdCost: 0, FGTotal: 0 };

                                item.IRTFNo = value.IRTFNo;
                                item.RMItemName = value.RMItemName;
                                item.RMItemId = value.RMItemId;
                                item.PacSizeIssue = value.PacSizeIssue;
                                item.RMQty = value.RMQty;
                                item.RMStanderdCost = value.RMStanderdCost;
                                item.RMTotal = value.RMQty * value.RMStanderdCost;

                                item.FGItemName = value.FGItemName;
                                item.FGItemId = value.FGItemId;
                                item.PacSizeTo = value.PacSizeTo;
                                item.FGQty = value.FGQty;
                                item.FGStanderdCost = value.FGStanderdCost;
                                item.FGTotal = value.FGQty * value.FGStanderdCost;

                                addedItems.push(item)
                            });
                            ShowOnTable();

                            $("#IssueTo").prop('disabled', true);
                            $("#print").show();
                        }
                    },
                    error: function () {
                        alert("Please check your internet connection first. If this doesn't solve your problem, then Contact With Paankouri Software & Services")
                        //$("#search").prop('disabled', false);
                    }
                });
            }
            else {
                alert("IRTF No is Required for get data.");
                //$("#search").prop('disabled', false);
            }

        });

        //update
        $(document).on('click', '#update', function () {
            RemoveError();
            $("#update").prop('disabled', true);
            SetIRF();
            irf.IRTFNo = $("#IRTFNo").val();

            if (addedItems.length <= 0) {
                alert("At least One Item should be added for Update.");
                $("#update").prop('disabled', false);
            }
            else {
                ValidateIRF();
                if (confirm('Do you want to Update')) {
                    if (isValid == true) {
                    $.ajax({
                        url: '@Url.Action("UpdateIRF", "IssueRMToFG")',
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ irf: irf, addedItems: addedItems }),
                        type: 'POST',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Failed To Update.");
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Sucessfully Updated.");
                                $("#update").prop('disabled', true);
                            }
                        }
                    });
                }
                    else {
                        $("#update").prop('disabled', false);
                    }
                }
                else {
                    $("#update").prop('disabled', false);
                }
            }

        });

        //delete code
        $(document).on('click', '#delete', function () {
            $("#update").prop('disabled', true);
            $("#delete").prop('disabled', true);
            var id = $("#IRTFNo").val();
            if ($("#IRTFNo").val() != "") {
                if (confirm('Are you sure you want to delete this from the database?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteIRFById", "IssueRMToFG")',
                        contentType: "application/json;charset=utf-8",
                        data: { id: id },
                        type: 'GET',
                        dataType: 'json',
                        success: function (datas) {
                            if (datas == 0) {
                                alert("Delete failed.");
                                $("#delete").prop('disabled', false);
                                $("#update").prop('disabled', false);
                            }
                            else {
                                alert("Delete Successfull");
                                location.reload();
                            }
                        }
                    });
                }
                else {
                    $("#update").prop('disabled', false);
                    $("#delete").prop('disabled', false);
                }
            }
            else {
                setError("IRTFNo", "IRTF No is required field for Delete.");
            }

        });

        $(document).on('click', "#print", function (event) {
            event.preventDefault();
            if ($("#message").val() != "true") {
                $("#report").attr("action", "/FGItemRepack/GetFGIRPreview")
                $("#report").submit();
            }
        });

        //data table fill up
        function ShowOnTable() {
            table.clear().draw();
            var totSCostRM = 0;
            var totSCostFG = 0;
            var totQtyRM = 0;
            var totQtyFG = 0;

            $.each(addedItems, function (index, value) {

                table.row.add([value.RMItemName, value.PacSizeIssue, value.RMQty, parseFloat(value.RMStanderdCost).toFixed(2), parseFloat(value.RMTotal).toFixed(2), value.FGItemName, value.PacSizeTo, value.FGQty, parseFloat(value.FGStanderdCost).toFixed(2), parseFloat(value.FGTotal).toFixed(2),
                    '<a href="#"><i class="fa fa-edit" name="editRow" value="' +
                    value.RMItemId + '"></i></a> &ensp;&ensp;&ensp;<a href="#"><i class="fa fa-trash" name="deleteRow" value="' + value.RMItemId + '"></i></a>']).draw();

                totSCostRM += parseFloat(value.RMTotal);
                totSCostFG += parseFloat(value.FGTotal);
                totQtyRM += parseFloat(value.RMQty);
                totQtyFG += parseFloat(value.FGQty);

            });
            $("#TotalRMQty").val(totQtyRM);
            $("#TotalRMStanderdCost").val(totSCostRM);
            $("#TotalFGQty").val(totQtyFG);
            $("#TotalFGStanderdCost").val(totSCostFG);

        }

        function ValidateAddToGrid() {
            isValid = true;
            if ($("#RMItemId").val() == "") {
                setError("RMItemId", "Item is required field");
                isValid = false;
            }
            if ($("#RMQty").val() <= 0) {
                setError("RMQty", "Qty must be grater than Zero");
                isValid = false;
            }
            if ($("#RMQty").val() == "") {
                setError("RMQty", "Qty is required field");
                isValid = false;
            }
            if ($("#IssueTo").val() == "") {
                setError("IssueTo", "Store is required field");
                isValid = false;
            }
            if ($("#FGItemId").val() == "") {
                setError("FGItemId", "Item is required field");
                isValid = false;
            }
            if ($("#FGQty").val() <= 0) {
                setError("FGQty", "Qty must be grater than Zero");
                isValid = false;
            }
            if ($("#FGQty").val() == "") {
                setError("FGQty", "Qty is required field");
                isValid = false;
            }
            if (parseFloat($("#RMQty").val()) > parseFloat($("#RemQty").val())) {
                setError("RMQty", "Shift Qty can not be grater than Available Qty.");
                isValid = false;
            }

            $.each(addedItems, function (index, value) {
                if (value.RMItemId == $("#RMItemId").val()) {
                    setError("RMItemId", "Item is already Added.");
                    isValid = false;
                }
            });
        }

        function ClearOnSearch() {
            $("#RMItemId").val("").change();
            //$("#IssueTo").val("").change();
            $("#FGItemId").val("").change();
        }

        //get value from textbox
        function SetIRF() {
            irf.IRTFNo = 0;
            irf.Date = $("#Date").val();
            irf.IssueFrom = $("#IssueFrom").val();
            irf.IssueTo = $("#IssueTo").val();
            irf.RefNo = $("#RefNo").val();
            irf.Description = $("#Description").val();
            irf.TotalRMQty = $("#TotalRMQty").val();
            irf.TotalRMStanderdCost = $("#TotalRMStanderdCost").val();
            irf.TotalFGQty = $("#TotalFGQty").val();
            irf.TotalFGStanderdCost = $("#TotalFGStanderdCost").val();
        }

        function ValidateIRF() {
            isValid = true;
            if (irf.Date == "") {
                setError("Date", "Date is required field");
                isValid = false;
            }
        }

    </script>

}

